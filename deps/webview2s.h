// Generated via: unifdef -U __cplusplus -U COBJMACROS webview2.h > webview2s.h
// Vim command: %s/\n\n\+/\r\r/g
// Macros manually added for lpVtbl access

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef __webview2_h__
#define __webview2_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef DECLSPEC_XFGVIRT
#if _CONTROL_FLOW_GUARD_XFG
#define DECLSPEC_XFGVIRT(base, func) __declspec(xfg_virtual(base, func))
#else
#define DECLSPEC_XFGVIRT(base, func)
#endif
#endif

/* Forward Declarations */

#ifndef __ICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__
#define __ICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2AcceleratorKeyPressedEventArgs ICoreWebView2AcceleratorKeyPressedEventArgs;

#endif 	/* __ICoreWebView2AcceleratorKeyPressedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2AcceleratorKeyPressedEventHandler_FWD_DEFINED__
#define __ICoreWebView2AcceleratorKeyPressedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2AcceleratorKeyPressedEventHandler ICoreWebView2AcceleratorKeyPressedEventHandler;

#endif 	/* __ICoreWebView2AcceleratorKeyPressedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler;

#endif 	/* __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2CallDevToolsProtocolMethodCompletedHandler ICoreWebView2CallDevToolsProtocolMethodCompletedHandler;

#endif 	/* __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CapturePreviewCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2CapturePreviewCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2CapturePreviewCompletedHandler ICoreWebView2CapturePreviewCompletedHandler;

#endif 	/* __ICoreWebView2CapturePreviewCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2_FWD_DEFINED__
#define __ICoreWebView2_FWD_DEFINED__
typedef interface ICoreWebView2 ICoreWebView2;

#endif 	/* __ICoreWebView2_FWD_DEFINED__ */

#ifndef __ICoreWebView2_2_FWD_DEFINED__
#define __ICoreWebView2_2_FWD_DEFINED__
typedef interface ICoreWebView2_2 ICoreWebView2_2;

#endif 	/* __ICoreWebView2_2_FWD_DEFINED__ */

#ifndef __ICoreWebView2_3_FWD_DEFINED__
#define __ICoreWebView2_3_FWD_DEFINED__
typedef interface ICoreWebView2_3 ICoreWebView2_3;

#endif 	/* __ICoreWebView2_3_FWD_DEFINED__ */

#ifndef __ICoreWebView2_4_FWD_DEFINED__
#define __ICoreWebView2_4_FWD_DEFINED__
typedef interface ICoreWebView2_4 ICoreWebView2_4;

#endif 	/* __ICoreWebView2_4_FWD_DEFINED__ */

#ifndef __ICoreWebView2_5_FWD_DEFINED__
#define __ICoreWebView2_5_FWD_DEFINED__
typedef interface ICoreWebView2_5 ICoreWebView2_5;

#endif 	/* __ICoreWebView2_5_FWD_DEFINED__ */

#ifndef __ICoreWebView2_6_FWD_DEFINED__
#define __ICoreWebView2_6_FWD_DEFINED__
typedef interface ICoreWebView2_6 ICoreWebView2_6;

#endif 	/* __ICoreWebView2_6_FWD_DEFINED__ */

#ifndef __ICoreWebView2_7_FWD_DEFINED__
#define __ICoreWebView2_7_FWD_DEFINED__
typedef interface ICoreWebView2_7 ICoreWebView2_7;

#endif 	/* __ICoreWebView2_7_FWD_DEFINED__ */

#ifndef __ICoreWebView2_8_FWD_DEFINED__
#define __ICoreWebView2_8_FWD_DEFINED__
typedef interface ICoreWebView2_8 ICoreWebView2_8;

#endif 	/* __ICoreWebView2_8_FWD_DEFINED__ */

#ifndef __ICoreWebView2_9_FWD_DEFINED__
#define __ICoreWebView2_9_FWD_DEFINED__
typedef interface ICoreWebView2_9 ICoreWebView2_9;

#endif 	/* __ICoreWebView2_9_FWD_DEFINED__ */

#ifndef __ICoreWebView2_10_FWD_DEFINED__
#define __ICoreWebView2_10_FWD_DEFINED__
typedef interface ICoreWebView2_10 ICoreWebView2_10;

#endif 	/* __ICoreWebView2_10_FWD_DEFINED__ */

#ifndef __ICoreWebView2_11_FWD_DEFINED__
#define __ICoreWebView2_11_FWD_DEFINED__
typedef interface ICoreWebView2_11 ICoreWebView2_11;

#endif 	/* __ICoreWebView2_11_FWD_DEFINED__ */

#ifndef __ICoreWebView2_12_FWD_DEFINED__
#define __ICoreWebView2_12_FWD_DEFINED__
typedef interface ICoreWebView2_12 ICoreWebView2_12;

#endif 	/* __ICoreWebView2_12_FWD_DEFINED__ */

#ifndef __ICoreWebView2_13_FWD_DEFINED__
#define __ICoreWebView2_13_FWD_DEFINED__
typedef interface ICoreWebView2_13 ICoreWebView2_13;

#endif 	/* __ICoreWebView2_13_FWD_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2BasicAuthenticationRequestedEventArgs ICoreWebView2BasicAuthenticationRequestedEventArgs;

#endif 	/* __ICoreWebView2BasicAuthenticationRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2BasicAuthenticationRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2BasicAuthenticationRequestedEventHandler ICoreWebView2BasicAuthenticationRequestedEventHandler;

#endif 	/* __ICoreWebView2BasicAuthenticationRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__
#define __ICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__
typedef interface ICoreWebView2BasicAuthenticationResponse ICoreWebView2BasicAuthenticationResponse;

#endif 	/* __ICoreWebView2BasicAuthenticationResponse_FWD_DEFINED__ */

#ifndef __ICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__
#define __ICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2BrowserProcessExitedEventArgs ICoreWebView2BrowserProcessExitedEventArgs;

#endif 	/* __ICoreWebView2BrowserProcessExitedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2BrowserProcessExitedEventHandler_FWD_DEFINED__
#define __ICoreWebView2BrowserProcessExitedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2BrowserProcessExitedEventHandler ICoreWebView2BrowserProcessExitedEventHandler;

#endif 	/* __ICoreWebView2BrowserProcessExitedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2BytesReceivedChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2BytesReceivedChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2BytesReceivedChangedEventHandler ICoreWebView2BytesReceivedChangedEventHandler;

#endif 	/* __ICoreWebView2BytesReceivedChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CompositionController_FWD_DEFINED__
#define __ICoreWebView2CompositionController_FWD_DEFINED__
typedef interface ICoreWebView2CompositionController ICoreWebView2CompositionController;

#endif 	/* __ICoreWebView2CompositionController_FWD_DEFINED__ */

#ifndef __ICoreWebView2CompositionController2_FWD_DEFINED__
#define __ICoreWebView2CompositionController2_FWD_DEFINED__
typedef interface ICoreWebView2CompositionController2 ICoreWebView2CompositionController2;

#endif 	/* __ICoreWebView2CompositionController2_FWD_DEFINED__ */

#ifndef __ICoreWebView2Controller_FWD_DEFINED__
#define __ICoreWebView2Controller_FWD_DEFINED__
typedef interface ICoreWebView2Controller ICoreWebView2Controller;

#endif 	/* __ICoreWebView2Controller_FWD_DEFINED__ */

#ifndef __ICoreWebView2Controller2_FWD_DEFINED__
#define __ICoreWebView2Controller2_FWD_DEFINED__
typedef interface ICoreWebView2Controller2 ICoreWebView2Controller2;

#endif 	/* __ICoreWebView2Controller2_FWD_DEFINED__ */

#ifndef __ICoreWebView2Controller3_FWD_DEFINED__
#define __ICoreWebView2Controller3_FWD_DEFINED__
typedef interface ICoreWebView2Controller3 ICoreWebView2Controller3;

#endif 	/* __ICoreWebView2Controller3_FWD_DEFINED__ */

#ifndef __ICoreWebView2Controller4_FWD_DEFINED__
#define __ICoreWebView2Controller4_FWD_DEFINED__
typedef interface ICoreWebView2Controller4 ICoreWebView2Controller4;

#endif 	/* __ICoreWebView2Controller4_FWD_DEFINED__ */

#ifndef __ICoreWebView2ControllerOptions_FWD_DEFINED__
#define __ICoreWebView2ControllerOptions_FWD_DEFINED__
typedef interface ICoreWebView2ControllerOptions ICoreWebView2ControllerOptions;

#endif 	/* __ICoreWebView2ControllerOptions_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__
#define __ICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ContentLoadingEventArgs ICoreWebView2ContentLoadingEventArgs;

#endif 	/* __ICoreWebView2ContentLoadingEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContentLoadingEventHandler_FWD_DEFINED__
#define __ICoreWebView2ContentLoadingEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ContentLoadingEventHandler ICoreWebView2ContentLoadingEventHandler;

#endif 	/* __ICoreWebView2ContentLoadingEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ContextMenuRequestedEventArgs ICoreWebView2ContextMenuRequestedEventArgs;

#endif 	/* __ICoreWebView2ContextMenuRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ContextMenuRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ContextMenuRequestedEventHandler ICoreWebView2ContextMenuRequestedEventHandler;

#endif 	/* __ICoreWebView2ContextMenuRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Cookie_FWD_DEFINED__
#define __ICoreWebView2Cookie_FWD_DEFINED__
typedef interface ICoreWebView2Cookie ICoreWebView2Cookie;

#endif 	/* __ICoreWebView2Cookie_FWD_DEFINED__ */

#ifndef __ICoreWebView2CookieList_FWD_DEFINED__
#define __ICoreWebView2CookieList_FWD_DEFINED__
typedef interface ICoreWebView2CookieList ICoreWebView2CookieList;

#endif 	/* __ICoreWebView2CookieList_FWD_DEFINED__ */

#ifndef __ICoreWebView2CookieManager_FWD_DEFINED__
#define __ICoreWebView2CookieManager_FWD_DEFINED__
typedef interface ICoreWebView2CookieManager ICoreWebView2CookieManager;

#endif 	/* __ICoreWebView2CookieManager_FWD_DEFINED__ */

#ifndef __ICoreWebView2Certificate_FWD_DEFINED__
#define __ICoreWebView2Certificate_FWD_DEFINED__
typedef interface ICoreWebView2Certificate ICoreWebView2Certificate;

#endif 	/* __ICoreWebView2Certificate_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificate_FWD_DEFINED__
#define __ICoreWebView2ClientCertificate_FWD_DEFINED__
typedef interface ICoreWebView2ClientCertificate ICoreWebView2ClientCertificate;

#endif 	/* __ICoreWebView2ClientCertificate_FWD_DEFINED__ */

#ifndef __ICoreWebView2StringCollection_FWD_DEFINED__
#define __ICoreWebView2StringCollection_FWD_DEFINED__
typedef interface ICoreWebView2StringCollection ICoreWebView2StringCollection;

#endif 	/* __ICoreWebView2StringCollection_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClearBrowsingDataCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2ClearBrowsingDataCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2ClearBrowsingDataCompletedHandler ICoreWebView2ClearBrowsingDataCompletedHandler;

#endif 	/* __ICoreWebView2ClearBrowsingDataCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateCollection_FWD_DEFINED__
#define __ICoreWebView2ClientCertificateCollection_FWD_DEFINED__
typedef interface ICoreWebView2ClientCertificateCollection ICoreWebView2ClientCertificateCollection;

#endif 	/* __ICoreWebView2ClientCertificateCollection_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ClientCertificateRequestedEventArgs ICoreWebView2ClientCertificateRequestedEventArgs;

#endif 	/* __ICoreWebView2ClientCertificateRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ClientCertificateRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ClientCertificateRequestedEventHandler ICoreWebView2ClientCertificateRequestedEventHandler;

#endif 	/* __ICoreWebView2ClientCertificateRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuItem_FWD_DEFINED__
#define __ICoreWebView2ContextMenuItem_FWD_DEFINED__
typedef interface ICoreWebView2ContextMenuItem ICoreWebView2ContextMenuItem;

#endif 	/* __ICoreWebView2ContextMenuItem_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuItemCollection_FWD_DEFINED__
#define __ICoreWebView2ContextMenuItemCollection_FWD_DEFINED__
typedef interface ICoreWebView2ContextMenuItemCollection ICoreWebView2ContextMenuItemCollection;

#endif 	/* __ICoreWebView2ContextMenuItemCollection_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuTarget_FWD_DEFINED__
#define __ICoreWebView2ContextMenuTarget_FWD_DEFINED__
typedef interface ICoreWebView2ContextMenuTarget ICoreWebView2ContextMenuTarget;

#endif 	/* __ICoreWebView2ContextMenuTarget_FWD_DEFINED__ */

#ifndef __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler;

#endif 	/* __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler;

#endif 	/* __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2CreateCoreWebView2ControllerCompletedHandler ICoreWebView2CreateCoreWebView2ControllerCompletedHandler;

#endif 	/* __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler;

#endif 	/* __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ContainsFullScreenElementChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ContainsFullScreenElementChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ContainsFullScreenElementChangedEventHandler ICoreWebView2ContainsFullScreenElementChangedEventHandler;

#endif 	/* __ICoreWebView2ContainsFullScreenElementChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CursorChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2CursorChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2CursorChangedEventHandler ICoreWebView2CursorChangedEventHandler;

#endif 	/* __ICoreWebView2CursorChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2CustomItemSelectedEventHandler_FWD_DEFINED__
#define __ICoreWebView2CustomItemSelectedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2CustomItemSelectedEventHandler ICoreWebView2CustomItemSelectedEventHandler;

#endif 	/* __ICoreWebView2CustomItemSelectedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2DocumentTitleChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2DocumentTitleChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2DocumentTitleChangedEventHandler ICoreWebView2DocumentTitleChangedEventHandler;

#endif 	/* __ICoreWebView2DocumentTitleChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__
#define __ICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2DOMContentLoadedEventArgs ICoreWebView2DOMContentLoadedEventArgs;

#endif 	/* __ICoreWebView2DOMContentLoadedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2DOMContentLoadedEventHandler_FWD_DEFINED__
#define __ICoreWebView2DOMContentLoadedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2DOMContentLoadedEventHandler ICoreWebView2DOMContentLoadedEventHandler;

#endif 	/* __ICoreWebView2DOMContentLoadedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Deferral_FWD_DEFINED__
#define __ICoreWebView2Deferral_FWD_DEFINED__
typedef interface ICoreWebView2Deferral ICoreWebView2Deferral;

#endif 	/* __ICoreWebView2Deferral_FWD_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs ICoreWebView2DevToolsProtocolEventReceivedEventArgs;

#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 ICoreWebView2DevToolsProtocolEventReceivedEventArgs2;

#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_FWD_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2DevToolsProtocolEventReceivedEventHandler ICoreWebView2DevToolsProtocolEventReceivedEventHandler;

#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__
typedef interface ICoreWebView2DevToolsProtocolEventReceiver ICoreWebView2DevToolsProtocolEventReceiver;

#endif 	/* __ICoreWebView2DevToolsProtocolEventReceiver_FWD_DEFINED__ */

#ifndef __ICoreWebView2DownloadOperation_FWD_DEFINED__
#define __ICoreWebView2DownloadOperation_FWD_DEFINED__
typedef interface ICoreWebView2DownloadOperation ICoreWebView2DownloadOperation;

#endif 	/* __ICoreWebView2DownloadOperation_FWD_DEFINED__ */

#ifndef __ICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__
#define __ICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2DownloadStartingEventArgs ICoreWebView2DownloadStartingEventArgs;

#endif 	/* __ICoreWebView2DownloadStartingEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2DownloadStartingEventHandler_FWD_DEFINED__
#define __ICoreWebView2DownloadStartingEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2DownloadStartingEventHandler ICoreWebView2DownloadStartingEventHandler;

#endif 	/* __ICoreWebView2DownloadStartingEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment_FWD_DEFINED__
#define __ICoreWebView2Environment_FWD_DEFINED__
typedef interface ICoreWebView2Environment ICoreWebView2Environment;

#endif 	/* __ICoreWebView2Environment_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment2_FWD_DEFINED__
#define __ICoreWebView2Environment2_FWD_DEFINED__
typedef interface ICoreWebView2Environment2 ICoreWebView2Environment2;

#endif 	/* __ICoreWebView2Environment2_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment3_FWD_DEFINED__
#define __ICoreWebView2Environment3_FWD_DEFINED__
typedef interface ICoreWebView2Environment3 ICoreWebView2Environment3;

#endif 	/* __ICoreWebView2Environment3_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment4_FWD_DEFINED__
#define __ICoreWebView2Environment4_FWD_DEFINED__
typedef interface ICoreWebView2Environment4 ICoreWebView2Environment4;

#endif 	/* __ICoreWebView2Environment4_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment5_FWD_DEFINED__
#define __ICoreWebView2Environment5_FWD_DEFINED__
typedef interface ICoreWebView2Environment5 ICoreWebView2Environment5;

#endif 	/* __ICoreWebView2Environment5_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment6_FWD_DEFINED__
#define __ICoreWebView2Environment6_FWD_DEFINED__
typedef interface ICoreWebView2Environment6 ICoreWebView2Environment6;

#endif 	/* __ICoreWebView2Environment6_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment7_FWD_DEFINED__
#define __ICoreWebView2Environment7_FWD_DEFINED__
typedef interface ICoreWebView2Environment7 ICoreWebView2Environment7;

#endif 	/* __ICoreWebView2Environment7_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment8_FWD_DEFINED__
#define __ICoreWebView2Environment8_FWD_DEFINED__
typedef interface ICoreWebView2Environment8 ICoreWebView2Environment8;

#endif 	/* __ICoreWebView2Environment8_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment9_FWD_DEFINED__
#define __ICoreWebView2Environment9_FWD_DEFINED__
typedef interface ICoreWebView2Environment9 ICoreWebView2Environment9;

#endif 	/* __ICoreWebView2Environment9_FWD_DEFINED__ */

#ifndef __ICoreWebView2Environment10_FWD_DEFINED__
#define __ICoreWebView2Environment10_FWD_DEFINED__
typedef interface ICoreWebView2Environment10 ICoreWebView2Environment10;

#endif 	/* __ICoreWebView2Environment10_FWD_DEFINED__ */

#ifndef __ICoreWebView2EnvironmentOptions_FWD_DEFINED__
#define __ICoreWebView2EnvironmentOptions_FWD_DEFINED__
typedef interface ICoreWebView2EnvironmentOptions ICoreWebView2EnvironmentOptions;

#endif 	/* __ICoreWebView2EnvironmentOptions_FWD_DEFINED__ */

#ifndef __ICoreWebView2EnvironmentOptions2_FWD_DEFINED__
#define __ICoreWebView2EnvironmentOptions2_FWD_DEFINED__
typedef interface ICoreWebView2EnvironmentOptions2 ICoreWebView2EnvironmentOptions2;

#endif 	/* __ICoreWebView2EnvironmentOptions2_FWD_DEFINED__ */

#ifndef __ICoreWebView2EstimatedEndTimeChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2EstimatedEndTimeChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2EstimatedEndTimeChangedEventHandler ICoreWebView2EstimatedEndTimeChangedEventHandler;

#endif 	/* __ICoreWebView2EstimatedEndTimeChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ExecuteScriptCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2ExecuteScriptCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2ExecuteScriptCompletedHandler ICoreWebView2ExecuteScriptCompletedHandler;

#endif 	/* __ICoreWebView2ExecuteScriptCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Frame_FWD_DEFINED__
#define __ICoreWebView2Frame_FWD_DEFINED__
typedef interface ICoreWebView2Frame ICoreWebView2Frame;

#endif 	/* __ICoreWebView2Frame_FWD_DEFINED__ */

#ifndef __ICoreWebView2Frame2_FWD_DEFINED__
#define __ICoreWebView2Frame2_FWD_DEFINED__
typedef interface ICoreWebView2Frame2 ICoreWebView2Frame2;

#endif 	/* __ICoreWebView2Frame2_FWD_DEFINED__ */

#ifndef __ICoreWebView2Frame3_FWD_DEFINED__
#define __ICoreWebView2Frame3_FWD_DEFINED__
typedef interface ICoreWebView2Frame3 ICoreWebView2Frame3;

#endif 	/* __ICoreWebView2Frame3_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameContentLoadingEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameContentLoadingEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameContentLoadingEventHandler ICoreWebView2FrameContentLoadingEventHandler;

#endif 	/* __ICoreWebView2FrameContentLoadingEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__
#define __ICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2FrameCreatedEventArgs ICoreWebView2FrameCreatedEventArgs;

#endif 	/* __ICoreWebView2FrameCreatedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameCreatedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameCreatedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameCreatedEventHandler ICoreWebView2FrameCreatedEventHandler;

#endif 	/* __ICoreWebView2FrameCreatedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameDestroyedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameDestroyedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameDestroyedEventHandler ICoreWebView2FrameDestroyedEventHandler;

#endif 	/* __ICoreWebView2FrameDestroyedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameDOMContentLoadedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameDOMContentLoadedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameDOMContentLoadedEventHandler ICoreWebView2FrameDOMContentLoadedEventHandler;

#endif 	/* __ICoreWebView2FrameDOMContentLoadedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameNameChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameNameChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameNameChangedEventHandler ICoreWebView2FrameNameChangedEventHandler;

#endif 	/* __ICoreWebView2FrameNameChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameNavigationCompletedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameNavigationCompletedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameNavigationCompletedEventHandler ICoreWebView2FrameNavigationCompletedEventHandler;

#endif 	/* __ICoreWebView2FrameNavigationCompletedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameNavigationStartingEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameNavigationStartingEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameNavigationStartingEventHandler ICoreWebView2FrameNavigationStartingEventHandler;

#endif 	/* __ICoreWebView2FrameNavigationStartingEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FramePermissionRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FramePermissionRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FramePermissionRequestedEventHandler ICoreWebView2FramePermissionRequestedEventHandler;

#endif 	/* __ICoreWebView2FramePermissionRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameWebMessageReceivedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FrameWebMessageReceivedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FrameWebMessageReceivedEventHandler ICoreWebView2FrameWebMessageReceivedEventHandler;

#endif 	/* __ICoreWebView2FrameWebMessageReceivedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameInfo_FWD_DEFINED__
#define __ICoreWebView2FrameInfo_FWD_DEFINED__
typedef interface ICoreWebView2FrameInfo ICoreWebView2FrameInfo;

#endif 	/* __ICoreWebView2FrameInfo_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameInfoCollection_FWD_DEFINED__
#define __ICoreWebView2FrameInfoCollection_FWD_DEFINED__
typedef interface ICoreWebView2FrameInfoCollection ICoreWebView2FrameInfoCollection;

#endif 	/* __ICoreWebView2FrameInfoCollection_FWD_DEFINED__ */

#ifndef __ICoreWebView2FrameInfoCollectionIterator_FWD_DEFINED__
#define __ICoreWebView2FrameInfoCollectionIterator_FWD_DEFINED__
typedef interface ICoreWebView2FrameInfoCollectionIterator ICoreWebView2FrameInfoCollectionIterator;

#endif 	/* __ICoreWebView2FrameInfoCollectionIterator_FWD_DEFINED__ */

#ifndef __ICoreWebView2FocusChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2FocusChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2FocusChangedEventHandler ICoreWebView2FocusChangedEventHandler;

#endif 	/* __ICoreWebView2FocusChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2GetCookiesCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2GetCookiesCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2GetCookiesCompletedHandler ICoreWebView2GetCookiesCompletedHandler;

#endif 	/* __ICoreWebView2GetCookiesCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2HistoryChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2HistoryChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2HistoryChangedEventHandler ICoreWebView2HistoryChangedEventHandler;

#endif 	/* __ICoreWebView2HistoryChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__
#define __ICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__
typedef interface ICoreWebView2HttpHeadersCollectionIterator ICoreWebView2HttpHeadersCollectionIterator;

#endif 	/* __ICoreWebView2HttpHeadersCollectionIterator_FWD_DEFINED__ */

#ifndef __ICoreWebView2HttpRequestHeaders_FWD_DEFINED__
#define __ICoreWebView2HttpRequestHeaders_FWD_DEFINED__
typedef interface ICoreWebView2HttpRequestHeaders ICoreWebView2HttpRequestHeaders;

#endif 	/* __ICoreWebView2HttpRequestHeaders_FWD_DEFINED__ */

#ifndef __ICoreWebView2HttpResponseHeaders_FWD_DEFINED__
#define __ICoreWebView2HttpResponseHeaders_FWD_DEFINED__
typedef interface ICoreWebView2HttpResponseHeaders ICoreWebView2HttpResponseHeaders;

#endif 	/* __ICoreWebView2HttpResponseHeaders_FWD_DEFINED__ */

#ifndef __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler;

#endif 	/* __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2MoveFocusRequestedEventArgs ICoreWebView2MoveFocusRequestedEventArgs;

#endif 	/* __ICoreWebView2MoveFocusRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2MoveFocusRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2MoveFocusRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2MoveFocusRequestedEventHandler ICoreWebView2MoveFocusRequestedEventHandler;

#endif 	/* __ICoreWebView2MoveFocusRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__
#define __ICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2NavigationCompletedEventArgs ICoreWebView2NavigationCompletedEventArgs;

#endif 	/* __ICoreWebView2NavigationCompletedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__
#define __ICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2NavigationCompletedEventArgs2 ICoreWebView2NavigationCompletedEventArgs2;

#endif 	/* __ICoreWebView2NavigationCompletedEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventHandler_FWD_DEFINED__
#define __ICoreWebView2NavigationCompletedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2NavigationCompletedEventHandler ICoreWebView2NavigationCompletedEventHandler;

#endif 	/* __ICoreWebView2NavigationCompletedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__
#define __ICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2NavigationStartingEventArgs ICoreWebView2NavigationStartingEventArgs;

#endif 	/* __ICoreWebView2NavigationStartingEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__
#define __ICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2NavigationStartingEventArgs2 ICoreWebView2NavigationStartingEventArgs2;

#endif 	/* __ICoreWebView2NavigationStartingEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventHandler_FWD_DEFINED__
#define __ICoreWebView2NavigationStartingEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2NavigationStartingEventHandler ICoreWebView2NavigationStartingEventHandler;

#endif 	/* __ICoreWebView2NavigationStartingEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2NewBrowserVersionAvailableEventHandler_FWD_DEFINED__
#define __ICoreWebView2NewBrowserVersionAvailableEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2NewBrowserVersionAvailableEventHandler ICoreWebView2NewBrowserVersionAvailableEventHandler;

#endif 	/* __ICoreWebView2NewBrowserVersionAvailableEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2NewWindowRequestedEventArgs ICoreWebView2NewWindowRequestedEventArgs;

#endif 	/* __ICoreWebView2NewWindowRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2NewWindowRequestedEventArgs2 ICoreWebView2NewWindowRequestedEventArgs2;

#endif 	/* __ICoreWebView2NewWindowRequestedEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2NewWindowRequestedEventHandler ICoreWebView2NewWindowRequestedEventHandler;

#endif 	/* __ICoreWebView2NewWindowRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2PermissionRequestedEventArgs ICoreWebView2PermissionRequestedEventArgs;

#endif 	/* __ICoreWebView2PermissionRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__
#define __ICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2PermissionRequestedEventArgs2 ICoreWebView2PermissionRequestedEventArgs2;

#endif 	/* __ICoreWebView2PermissionRequestedEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2PermissionRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2PermissionRequestedEventHandler ICoreWebView2PermissionRequestedEventHandler;

#endif 	/* __ICoreWebView2PermissionRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2PointerInfo_FWD_DEFINED__
#define __ICoreWebView2PointerInfo_FWD_DEFINED__
typedef interface ICoreWebView2PointerInfo ICoreWebView2PointerInfo;

#endif 	/* __ICoreWebView2PointerInfo_FWD_DEFINED__ */

#ifndef __ICoreWebView2PrintSettings_FWD_DEFINED__
#define __ICoreWebView2PrintSettings_FWD_DEFINED__
typedef interface ICoreWebView2PrintSettings ICoreWebView2PrintSettings;

#endif 	/* __ICoreWebView2PrintSettings_FWD_DEFINED__ */

#ifndef __ICoreWebView2PrintToPdfCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2PrintToPdfCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2PrintToPdfCompletedHandler ICoreWebView2PrintToPdfCompletedHandler;

#endif 	/* __ICoreWebView2PrintToPdfCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__
#define __ICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ProcessFailedEventArgs ICoreWebView2ProcessFailedEventArgs;

#endif 	/* __ICoreWebView2ProcessFailedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__
#define __ICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__
typedef interface ICoreWebView2ProcessFailedEventArgs2 ICoreWebView2ProcessFailedEventArgs2;

#endif 	/* __ICoreWebView2ProcessFailedEventArgs2_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ProcessFailedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ProcessFailedEventHandler ICoreWebView2ProcessFailedEventHandler;

#endif 	/* __ICoreWebView2ProcessFailedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Profile_FWD_DEFINED__
#define __ICoreWebView2Profile_FWD_DEFINED__
typedef interface ICoreWebView2Profile ICoreWebView2Profile;

#endif 	/* __ICoreWebView2Profile_FWD_DEFINED__ */

#ifndef __ICoreWebView2Profile2_FWD_DEFINED__
#define __ICoreWebView2Profile2_FWD_DEFINED__
typedef interface ICoreWebView2Profile2 ICoreWebView2Profile2;

#endif 	/* __ICoreWebView2Profile2_FWD_DEFINED__ */

#ifndef __ICoreWebView2RasterizationScaleChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2RasterizationScaleChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2RasterizationScaleChangedEventHandler ICoreWebView2RasterizationScaleChangedEventHandler;

#endif 	/* __ICoreWebView2RasterizationScaleChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__
#define __ICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ServerCertificateErrorDetectedEventArgs ICoreWebView2ServerCertificateErrorDetectedEventArgs;

#endif 	/* __ICoreWebView2ServerCertificateErrorDetectedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ServerCertificateErrorDetectedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ServerCertificateErrorDetectedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ServerCertificateErrorDetectedEventHandler ICoreWebView2ServerCertificateErrorDetectedEventHandler;

#endif 	/* __ICoreWebView2ServerCertificateErrorDetectedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__
#define __ICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2ScriptDialogOpeningEventArgs ICoreWebView2ScriptDialogOpeningEventArgs;

#endif 	/* __ICoreWebView2ScriptDialogOpeningEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2ScriptDialogOpeningEventHandler_FWD_DEFINED__
#define __ICoreWebView2ScriptDialogOpeningEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ScriptDialogOpeningEventHandler ICoreWebView2ScriptDialogOpeningEventHandler;

#endif 	/* __ICoreWebView2ScriptDialogOpeningEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings_FWD_DEFINED__
#define __ICoreWebView2Settings_FWD_DEFINED__
typedef interface ICoreWebView2Settings ICoreWebView2Settings;

#endif 	/* __ICoreWebView2Settings_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings2_FWD_DEFINED__
#define __ICoreWebView2Settings2_FWD_DEFINED__
typedef interface ICoreWebView2Settings2 ICoreWebView2Settings2;

#endif 	/* __ICoreWebView2Settings2_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings3_FWD_DEFINED__
#define __ICoreWebView2Settings3_FWD_DEFINED__
typedef interface ICoreWebView2Settings3 ICoreWebView2Settings3;

#endif 	/* __ICoreWebView2Settings3_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings4_FWD_DEFINED__
#define __ICoreWebView2Settings4_FWD_DEFINED__
typedef interface ICoreWebView2Settings4 ICoreWebView2Settings4;

#endif 	/* __ICoreWebView2Settings4_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings5_FWD_DEFINED__
#define __ICoreWebView2Settings5_FWD_DEFINED__
typedef interface ICoreWebView2Settings5 ICoreWebView2Settings5;

#endif 	/* __ICoreWebView2Settings5_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings6_FWD_DEFINED__
#define __ICoreWebView2Settings6_FWD_DEFINED__
typedef interface ICoreWebView2Settings6 ICoreWebView2Settings6;

#endif 	/* __ICoreWebView2Settings6_FWD_DEFINED__ */

#ifndef __ICoreWebView2Settings7_FWD_DEFINED__
#define __ICoreWebView2Settings7_FWD_DEFINED__
typedef interface ICoreWebView2Settings7 ICoreWebView2Settings7;

#endif 	/* __ICoreWebView2Settings7_FWD_DEFINED__ */

#ifndef __ICoreWebView2SourceChangedEventArgs_FWD_DEFINED__
#define __ICoreWebView2SourceChangedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2SourceChangedEventArgs ICoreWebView2SourceChangedEventArgs;

#endif 	/* __ICoreWebView2SourceChangedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2SourceChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2SourceChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2SourceChangedEventHandler ICoreWebView2SourceChangedEventHandler;

#endif 	/* __ICoreWebView2SourceChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2StateChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2StateChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2StateChangedEventHandler ICoreWebView2StateChangedEventHandler;

#endif 	/* __ICoreWebView2StateChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2StatusBarTextChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2StatusBarTextChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2StatusBarTextChangedEventHandler ICoreWebView2StatusBarTextChangedEventHandler;

#endif 	/* __ICoreWebView2StatusBarTextChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2TrySuspendCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2TrySuspendCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2TrySuspendCompletedHandler ICoreWebView2TrySuspendCompletedHandler;

#endif 	/* __ICoreWebView2TrySuspendCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__
#define __ICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2WebMessageReceivedEventArgs ICoreWebView2WebMessageReceivedEventArgs;

#endif 	/* __ICoreWebView2WebMessageReceivedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebMessageReceivedEventHandler_FWD_DEFINED__
#define __ICoreWebView2WebMessageReceivedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2WebMessageReceivedEventHandler ICoreWebView2WebMessageReceivedEventHandler;

#endif 	/* __ICoreWebView2WebMessageReceivedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequest_FWD_DEFINED__
#define __ICoreWebView2WebResourceRequest_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceRequest ICoreWebView2WebResourceRequest;

#endif 	/* __ICoreWebView2WebResourceRequest_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__
#define __ICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceRequestedEventArgs ICoreWebView2WebResourceRequestedEventArgs;

#endif 	/* __ICoreWebView2WebResourceRequestedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2WebResourceRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceRequestedEventHandler ICoreWebView2WebResourceRequestedEventHandler;

#endif 	/* __ICoreWebView2WebResourceRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponse_FWD_DEFINED__
#define __ICoreWebView2WebResourceResponse_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceResponse ICoreWebView2WebResourceResponse;

#endif 	/* __ICoreWebView2WebResourceResponse_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseReceivedEventHandler_FWD_DEFINED__
#define __ICoreWebView2WebResourceResponseReceivedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceResponseReceivedEventHandler ICoreWebView2WebResourceResponseReceivedEventHandler;

#endif 	/* __ICoreWebView2WebResourceResponseReceivedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__
#define __ICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceResponseReceivedEventArgs ICoreWebView2WebResourceResponseReceivedEventArgs;

#endif 	/* __ICoreWebView2WebResourceResponseReceivedEventArgs_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseView_FWD_DEFINED__
#define __ICoreWebView2WebResourceResponseView_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceResponseView ICoreWebView2WebResourceResponseView;

#endif 	/* __ICoreWebView2WebResourceResponseView_FWD_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_FWD_DEFINED__
#define __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_FWD_DEFINED__
typedef interface ICoreWebView2WebResourceResponseViewGetContentCompletedHandler ICoreWebView2WebResourceResponseViewGetContentCompletedHandler;

#endif 	/* __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WindowCloseRequestedEventHandler_FWD_DEFINED__
#define __ICoreWebView2WindowCloseRequestedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2WindowCloseRequestedEventHandler ICoreWebView2WindowCloseRequestedEventHandler;

#endif 	/* __ICoreWebView2WindowCloseRequestedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2WindowFeatures_FWD_DEFINED__
#define __ICoreWebView2WindowFeatures_FWD_DEFINED__
typedef interface ICoreWebView2WindowFeatures ICoreWebView2WindowFeatures;

#endif 	/* __ICoreWebView2WindowFeatures_FWD_DEFINED__ */

#ifndef __ICoreWebView2ZoomFactorChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ZoomFactorChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ZoomFactorChangedEventHandler ICoreWebView2ZoomFactorChangedEventHandler;

#endif 	/* __ICoreWebView2ZoomFactorChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2IsMutedChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2IsMutedChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2IsMutedChangedEventHandler ICoreWebView2IsMutedChangedEventHandler;

#endif 	/* __ICoreWebView2IsMutedChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2IsDocumentPlayingAudioChangedEventHandler ICoreWebView2IsDocumentPlayingAudioChangedEventHandler;

#endif 	/* __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfo_FWD_DEFINED__
#define __ICoreWebView2ProcessInfo_FWD_DEFINED__
typedef interface ICoreWebView2ProcessInfo ICoreWebView2ProcessInfo;

#endif 	/* __ICoreWebView2ProcessInfo_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfoCollection_FWD_DEFINED__
#define __ICoreWebView2ProcessInfoCollection_FWD_DEFINED__
typedef interface ICoreWebView2ProcessInfoCollection ICoreWebView2ProcessInfoCollection;

#endif 	/* __ICoreWebView2ProcessInfoCollection_FWD_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfosChangedEventHandler_FWD_DEFINED__
#define __ICoreWebView2ProcessInfosChangedEventHandler_FWD_DEFINED__
typedef interface ICoreWebView2ProcessInfosChangedEventHandler ICoreWebView2ProcessInfosChangedEventHandler;

#endif 	/* __ICoreWebView2ProcessInfosChangedEventHandler_FWD_DEFINED__ */

#ifndef __ICoreWebView2_14_FWD_DEFINED__
#define __ICoreWebView2_14_FWD_DEFINED__
typedef interface ICoreWebView2_14 ICoreWebView2_14;

#endif 	/* __ICoreWebView2_14_FWD_DEFINED__ */

/* header files for imported files */
#include "objidl.h"
#include "oaidl.h"
#include "EventToken.h"

#ifndef __WebView2_LIBRARY_DEFINED__
#define __WebView2_LIBRARY_DEFINED__

/* library WebView2 */
/* [version][uuid] */

typedef /* [v1_enum] */
enum COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT
    {
        COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG	= 0,
        COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG	= ( COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG + 1 )
    } 	COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT;

typedef /* [v1_enum] */
enum COREWEBVIEW2_COOKIE_SAME_SITE_KIND
    {
        COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE	= 0,
        COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX	= ( COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE + 1 ) ,
        COREWEBVIEW2_COOKIE_SAME_SITE_KIND_STRICT	= ( COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX + 1 )
    } 	COREWEBVIEW2_COOKIE_SAME_SITE_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND
    {
        COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY	= 0,
        COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW	= ( COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY + 1 ) ,
        COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY_CORS	= ( COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW + 1 )
    } 	COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_SCRIPT_DIALOG_KIND
    {
        COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT	= 0,
        COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM	= ( COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT + 1 ) ,
        COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT	= ( COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM + 1 ) ,
        COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD	= ( COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT + 1 )
    } 	COREWEBVIEW2_SCRIPT_DIALOG_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PROCESS_FAILED_KIND
    {
        COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED	= 0,
        COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED	= ( COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED + 1 )
    } 	COREWEBVIEW2_PROCESS_FAILED_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PROCESS_FAILED_REASON
    {
        COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED	= 0,
        COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE	= ( COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED	= ( COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED	= ( COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED	= ( COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED + 1 ) ,
        COREWEBVIEW2_PROCESS_FAILED_REASON_OUT_OF_MEMORY	= ( COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED + 1 )
    } 	COREWEBVIEW2_PROCESS_FAILED_REASON;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PERMISSION_KIND
    {
        COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION	= 0,
        COREWEBVIEW2_PERMISSION_KIND_MICROPHONE	= ( COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION + 1 ) ,
        COREWEBVIEW2_PERMISSION_KIND_CAMERA	= ( COREWEBVIEW2_PERMISSION_KIND_MICROPHONE + 1 ) ,
        COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION	= ( COREWEBVIEW2_PERMISSION_KIND_CAMERA + 1 ) ,
        COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS	= ( COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION + 1 ) ,
        COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS	= ( COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS + 1 ) ,
        COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ	= ( COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS + 1 )
    } 	COREWEBVIEW2_PERMISSION_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PERMISSION_STATE
    {
        COREWEBVIEW2_PERMISSION_STATE_DEFAULT	= 0,
        COREWEBVIEW2_PERMISSION_STATE_ALLOW	= ( COREWEBVIEW2_PERMISSION_STATE_DEFAULT + 1 ) ,
        COREWEBVIEW2_PERMISSION_STATE_DENY	= ( COREWEBVIEW2_PERMISSION_STATE_ALLOW + 1 )
    } 	COREWEBVIEW2_PERMISSION_STATE;

typedef /* [v1_enum] */
enum COREWEBVIEW2_WEB_ERROR_STATUS
    {
        COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN	= 0,
        COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT	= ( COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT	= ( COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE	= ( COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT	= ( COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR	= ( COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR + 1 ) ,
        COREWEBVIEW2_WEB_ERROR_STATUS_VALID_PROXY_AUTHENTICATION_REQUIRED	= ( COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED + 1 )
    } 	COREWEBVIEW2_WEB_ERROR_STATUS;

typedef /* [v1_enum] */
enum COREWEBVIEW2_WEB_RESOURCE_CONTEXT
    {
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL	= 0,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING + 1 ) ,
        COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER	= ( COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT + 1 )
    } 	COREWEBVIEW2_WEB_RESOURCE_CONTEXT;

typedef /* [v1_enum] */
enum COREWEBVIEW2_MOVE_FOCUS_REASON
    {
        COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC	= 0,
        COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT	= ( COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC + 1 ) ,
        COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS	= ( COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT + 1 )
    } 	COREWEBVIEW2_MOVE_FOCUS_REASON;

typedef /* [v1_enum] */
enum COREWEBVIEW2_KEY_EVENT_KIND
    {
        COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN	= 0,
        COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP	= ( COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN + 1 ) ,
        COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN	= ( COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP + 1 ) ,
        COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP	= ( COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN + 1 )
    } 	COREWEBVIEW2_KEY_EVENT_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND
    {
        COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL	= 0,
        COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_FAILED	= ( COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL + 1 )
    } 	COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND;

typedef struct COREWEBVIEW2_PHYSICAL_KEY_STATUS
    {
    UINT32 RepeatCount;
    UINT32 ScanCode;
    BOOL IsExtendedKey;
    BOOL IsMenuKeyDown;
    BOOL WasKeyDown;
    BOOL IsKeyReleased;
    } 	COREWEBVIEW2_PHYSICAL_KEY_STATUS;

typedef struct COREWEBVIEW2_COLOR
    {
    BYTE A;
    BYTE R;
    BYTE G;
    BYTE B;
    } 	COREWEBVIEW2_COLOR;

typedef /* [v1_enum] */
enum COREWEBVIEW2_MOUSE_EVENT_KIND
    {
        COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL	= 0x20e,
        COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK	= 0x203,
        COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN	= 0x201,
        COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP	= 0x202,
        COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE	= 0x2a3,
        COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK	= 0x209,
        COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN	= 0x207,
        COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP	= 0x208,
        COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE	= 0x200,
        COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK	= 0x206,
        COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN	= 0x204,
        COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP	= 0x205,
        COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL	= 0x20a,
        COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK	= 0x20d,
        COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN	= 0x20b,
        COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP	= 0x20c
    } 	COREWEBVIEW2_MOUSE_EVENT_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS
    {
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE	= 0,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON	= 0x1,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON	= 0x2,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT	= 0x4,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL	= 0x8,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON	= 0x10,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1	= 0x20,
        COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2	= 0x40
    } 	COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS;

DEFINE_ENUM_FLAG_OPERATORS(COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS);
typedef /* [v1_enum] */
enum COREWEBVIEW2_POINTER_EVENT_KIND
    {
        COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE	= 0x24b,
        COREWEBVIEW2_POINTER_EVENT_KIND_DOWN	= 0x246,
        COREWEBVIEW2_POINTER_EVENT_KIND_ENTER	= 0x249,
        COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE	= 0x24a,
        COREWEBVIEW2_POINTER_EVENT_KIND_UP	= 0x247,
        COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE	= 0x245
    } 	COREWEBVIEW2_POINTER_EVENT_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_BOUNDS_MODE
    {
        COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS	= 0,
        COREWEBVIEW2_BOUNDS_MODE_USE_RASTERIZATION_SCALE	= ( COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS + 1 )
    } 	COREWEBVIEW2_BOUNDS_MODE;

typedef /* [v1_enum] */
enum COREWEBVIEW2_CLIENT_CERTIFICATE_KIND
    {
        COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD	= 0,
        COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN	= ( COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD + 1 ) ,
        COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_OTHER	= ( COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN + 1 )
    } 	COREWEBVIEW2_CLIENT_CERTIFICATE_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_DOWNLOAD_STATE
    {
        COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS	= 0,
        COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED	= ( COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_STATE_COMPLETED	= ( COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED + 1 )
    } 	COREWEBVIEW2_DOWNLOAD_STATE;

typedef /* [v1_enum] */
enum COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON
    {
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE	= 0,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN + 1 ) ,
        COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_DOWNLOAD_PROCESS_CRASHED	= ( COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED + 1 )
    } 	COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PRINT_ORIENTATION
    {
        COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT	= 0,
        COREWEBVIEW2_PRINT_ORIENTATION_LANDSCAPE	= ( COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT + 1 )
    } 	COREWEBVIEW2_PRINT_ORIENTATION;

typedef /* [v1_enum] */
enum COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT
    {
        COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT	= 0,
        COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT	= ( COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT + 1 ) ,
        COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT	= ( COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT + 1 ) ,
        COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_RIGHT	= ( COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT + 1 )
    } 	COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PROCESS_KIND
    {
        COREWEBVIEW2_PROCESS_KIND_BROWSER	= 0,
        COREWEBVIEW2_PROCESS_KIND_RENDERER	= ( COREWEBVIEW2_PROCESS_KIND_BROWSER + 1 ) ,
        COREWEBVIEW2_PROCESS_KIND_UTILITY	= ( COREWEBVIEW2_PROCESS_KIND_RENDERER + 1 ) ,
        COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER	= ( COREWEBVIEW2_PROCESS_KIND_UTILITY + 1 ) ,
        COREWEBVIEW2_PROCESS_KIND_GPU	= ( COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER + 1 ) ,
        COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN	= ( COREWEBVIEW2_PROCESS_KIND_GPU + 1 ) ,
        COREWEBVIEW2_PROCESS_KIND_PPAPI_BROKER	= ( COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN + 1 )
    } 	COREWEBVIEW2_PROCESS_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PDF_TOOLBAR_ITEMS
    {
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_NONE	= 0,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE	= 0x1,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PRINT	= 0x2,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE_AS	= 0x4,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_IN	= 0x8,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_OUT	= 0x10,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ROTATE	= 0x20,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FIT_PAGE	= 0x40,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_LAYOUT	= 0x80,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_BOOKMARKS	= 0x100,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_SELECTOR	= 0x200,
        COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SEARCH	= 0x400
    } 	COREWEBVIEW2_PDF_TOOLBAR_ITEMS;

DEFINE_ENUM_FLAG_OPERATORS(COREWEBVIEW2_PDF_TOOLBAR_ITEMS);
typedef /* [v1_enum] */
enum COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND
    {
        COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE	= 0,
        COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE	= ( COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT	= ( COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO	= ( COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_VIDEO	= ( COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO + 1 )
    } 	COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND
    {
        COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND	= 0,
        COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX	= ( COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO	= ( COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR	= ( COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO + 1 ) ,
        COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SUBMENU	= ( COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR + 1 )
    } 	COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND;

typedef /* [v1_enum] */
enum COREWEBVIEW2_PREFERRED_COLOR_SCHEME
    {
        COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO	= 0,
        COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT	= ( COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO + 1 ) ,
        COREWEBVIEW2_PREFERRED_COLOR_SCHEME_DARK	= ( COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT + 1 )
    } 	COREWEBVIEW2_PREFERRED_COLOR_SCHEME;

typedef /* [v1_enum] */
enum COREWEBVIEW2_BROWSING_DATA_KINDS
    {
        COREWEBVIEW2_BROWSING_DATA_KINDS_FILE_SYSTEMS	= ( 1 << 0 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_INDEXED_DB	= ( 1 << 1 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_LOCAL_STORAGE	= ( 1 << 2 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_WEB_SQL	= ( 1 << 3 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_CACHE_STORAGE	= ( 1 << 4 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_DOM_STORAGE	= ( 1 << 5 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_COOKIES	= ( 1 << 6 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_SITE	= ( 1 << 7 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_DISK_CACHE	= ( 1 << 8 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_DOWNLOAD_HISTORY	= ( 1 << 9 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_GENERAL_AUTOFILL	= ( 1 << 10 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_PASSWORD_AUTOSAVE	= ( 1 << 11 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_BROWSING_HISTORY	= ( 1 << 12 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_SETTINGS	= ( 1 << 13 ) ,
        COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_PROFILE	= ( 1 << 14 )
    } 	COREWEBVIEW2_BROWSING_DATA_KINDS;

DEFINE_ENUM_FLAG_OPERATORS(COREWEBVIEW2_BROWSING_DATA_KINDS);
typedef /* [v1_enum] */
enum COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION
    {
        COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW	= 0,
        COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL	= ( COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW + 1 ) ,
        COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_DEFAULT	= ( COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL + 1 )
    } 	COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION;

STDAPI CreateCoreWebView2EnvironmentWithOptions(PCWSTR browserExecutableFolder, PCWSTR userDataFolder, ICoreWebView2EnvironmentOptions* environmentOptions, ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler* environmentCreatedHandler);
STDAPI CreateCoreWebView2Environment(ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler* environmentCreatedHandler);
STDAPI GetAvailableCoreWebView2BrowserVersionString(PCWSTR browserExecutableFolder, LPWSTR* versionInfo);
STDAPI CompareBrowserVersions(PCWSTR version1, PCWSTR version2, int* result);

EXTERN_C const IID LIBID_WebView2;

#ifndef __ICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2AcceleratorKeyPressedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2AcceleratorKeyPressedEventArgs = {0x9f760f8a,0xfb79,0x42be,{0x99,0x90,0x7b,0x56,0x90,0x0f,0xa9,0xc7}};

    typedef struct ICoreWebView2AcceleratorKeyPressedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, get_KeyEventKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyEventKind )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_KEY_EVENT_KIND *keyEventKind);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, get_VirtualKey)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VirtualKey )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [retval][out] */ UINT *virtualKey);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, get_KeyEventLParam)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyEventLParam )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [retval][out] */ INT *lParam);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, get_PhysicalKeyStatus)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PhysicalKeyStatus )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_PHYSICAL_KEY_STATUS *physicalKeyStatus);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [retval][out] */ BOOL *handled);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2AcceleratorKeyPressedEventArgs * This,
            /* [in] */ BOOL handled);

        END_INTERFACE
    } ICoreWebView2AcceleratorKeyPressedEventArgsVtbl;

    interface ICoreWebView2AcceleratorKeyPressedEventArgs
    {
        CONST_VTBL struct ICoreWebView2AcceleratorKeyPressedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2AcceleratorKeyPressedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2AcceleratorKeyPressedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2AcceleratorKeyPressedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2AcceleratorKeyPressedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2AcceleratorKeyPressedEventHandler = {0xb29c7e28,0xfa79,0x41a8,{0x8e,0x44,0x65,0x81,0x1c,0x76,0xdc,0xb2}};

    typedef struct ICoreWebView2AcceleratorKeyPressedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2AcceleratorKeyPressedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2AcceleratorKeyPressedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2AcceleratorKeyPressedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2AcceleratorKeyPressedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2AcceleratorKeyPressedEventHandler * This,
            /* [in] */ ICoreWebView2Controller *sender,
            /* [in] */ ICoreWebView2AcceleratorKeyPressedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2AcceleratorKeyPressedEventHandlerVtbl;

    interface ICoreWebView2AcceleratorKeyPressedEventHandler
    {
        CONST_VTBL struct ICoreWebView2AcceleratorKeyPressedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2AcceleratorKeyPressedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler = {0xb99369f3,0x9b11,0x47b5,{0xbc,0x6f,0x8e,0x78,0x95,0xfc,0xea,0x17}};

    typedef struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            /* [in] */ LPCWSTR id);

        END_INTERFACE
    } ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandlerVtbl;

    interface ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CallDevToolsProtocolMethodCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CallDevToolsProtocolMethodCompletedHandler = {0x5c4889f0,0x5ef6,0x4c5a,{0x95,0x2c,0xd8,0xf1,0xb9,0x2d,0x05,0x74}};

    typedef struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CallDevToolsProtocolMethodCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CallDevToolsProtocolMethodCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CallDevToolsProtocolMethodCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CallDevToolsProtocolMethodCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CallDevToolsProtocolMethodCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            /* [in] */ LPCWSTR returnObjectAsJson);

        END_INTERFACE
    } ICoreWebView2CallDevToolsProtocolMethodCompletedHandlerVtbl;

    interface ICoreWebView2CallDevToolsProtocolMethodCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2CallDevToolsProtocolMethodCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CallDevToolsProtocolMethodCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CapturePreviewCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CapturePreviewCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CapturePreviewCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CapturePreviewCompletedHandler = {0x697e05e9,0x3d8f,0x45fa,{0x96,0xf4,0x8f,0xfe,0x1e,0xde,0xda,0xf5}};

    typedef struct ICoreWebView2CapturePreviewCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CapturePreviewCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CapturePreviewCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CapturePreviewCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CapturePreviewCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CapturePreviewCompletedHandler * This,
            /* [in] */ HRESULT errorCode);

        END_INTERFACE
    } ICoreWebView2CapturePreviewCompletedHandlerVtbl;

    interface ICoreWebView2CapturePreviewCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2CapturePreviewCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CapturePreviewCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_INTERFACE_DEFINED__
#define __ICoreWebView2_INTERFACE_DEFINED__

/* interface ICoreWebView2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2 = {0x76eceacb,0x0462,0x4d94,{0xac,0x83,0x42,0x3a,0x67,0x93,0x77,0x5e}};

    typedef struct ICoreWebView2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2Vtbl;

    interface ICoreWebView2
    {
        CONST_VTBL struct ICoreWebView2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_2_INTERFACE_DEFINED__
#define __ICoreWebView2_2_INTERFACE_DEFINED__

/* interface ICoreWebView2_2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_2 = {0x9E8F0CF8,0xE670,0x4B5E,{0xB2,0xBC,0x73,0xE0,0x61,0xE3,0x18,0x4C}};

    typedef struct ICoreWebView2_2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_2 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_2 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_2 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_2 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_2 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_2 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        END_INTERFACE
    } ICoreWebView2_2Vtbl;

    interface ICoreWebView2_2
    {
        CONST_VTBL struct ICoreWebView2_2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_3_INTERFACE_DEFINED__
#define __ICoreWebView2_3_INTERFACE_DEFINED__

/* interface ICoreWebView2_3 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_3 = {0xA0D6DF20,0x3B92,0x416D,{0xAA,0x0C,0x43,0x7A,0x9C,0x72,0x78,0x57}};

    typedef struct ICoreWebView2_3Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_3 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_3 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_3 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_3 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_3 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_3 * This,
            /* [in] */ LPCWSTR hostName);

        END_INTERFACE
    } ICoreWebView2_3Vtbl;

    interface ICoreWebView2_3
    {
        CONST_VTBL struct ICoreWebView2_3Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_3_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_4_INTERFACE_DEFINED__
#define __ICoreWebView2_4_INTERFACE_DEFINED__

/* interface ICoreWebView2_4 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_4 = {0x20d02d59,0x6df2,0x42dc,{0xbd,0x06,0xf9,0x8a,0x69,0x4b,0x13,0x02}};

    typedef struct ICoreWebView2_4Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_4 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_4 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_4 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_4 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_4 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_4 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2_4Vtbl;

    interface ICoreWebView2_4
    {
        CONST_VTBL struct ICoreWebView2_4Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_4_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_5_INTERFACE_DEFINED__
#define __ICoreWebView2_5_INTERFACE_DEFINED__

/* interface ICoreWebView2_5 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_5 = {0xbedb11b8,0xd63c,0x11eb,{0xb8,0xbc,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2_5Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_5 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_5 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_5 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_5 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_5 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_5 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2_5Vtbl;

    interface ICoreWebView2_5
    {
        CONST_VTBL struct ICoreWebView2_5Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_5_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_6_INTERFACE_DEFINED__
#define __ICoreWebView2_6_INTERFACE_DEFINED__

/* interface ICoreWebView2_6 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_6 = {0x499aadac,0xd92c,0x4589,{0x8a,0x75,0x11,0x1b,0xfc,0x16,0x77,0x95}};

    typedef struct ICoreWebView2_6Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_6 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_6 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_6 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_6 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_6 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_6 * This);

        END_INTERFACE
    } ICoreWebView2_6Vtbl;

    interface ICoreWebView2_6
    {
        CONST_VTBL struct ICoreWebView2_6Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_6_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_7_INTERFACE_DEFINED__
#define __ICoreWebView2_7_INTERFACE_DEFINED__

/* interface ICoreWebView2_7 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_7 = {0x79c24d83,0x09a3,0x45ae,{0x94,0x18,0x48,0x7f,0x32,0xa5,0x87,0x40}};

    typedef struct ICoreWebView2_7Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_7 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_7 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_7 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_7 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_7 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        END_INTERFACE
    } ICoreWebView2_7Vtbl;

    interface ICoreWebView2_7
    {
        CONST_VTBL struct ICoreWebView2_7Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_7_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_8_INTERFACE_DEFINED__
#define __ICoreWebView2_8_INTERFACE_DEFINED__

/* interface ICoreWebView2_8 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_8 = {0xE9632730,0x6E1E,0x43AB,{0xB7,0xB8,0x7B,0x2C,0x9E,0x62,0xE0,0x94}};

    typedef struct ICoreWebView2_8Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_8 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_8 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_8 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_8 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_8 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_8 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_8 * This,
            /* [retval][out] */ BOOL *value);

        END_INTERFACE
    } ICoreWebView2_8Vtbl;

    interface ICoreWebView2_8
    {
        CONST_VTBL struct ICoreWebView2_8Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_8_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_9_INTERFACE_DEFINED__
#define __ICoreWebView2_9_INTERFACE_DEFINED__

/* interface ICoreWebView2_9 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_9 = {0x4d7b2eab,0x9fdc,0x468d,{0xb9,0x98,0xa9,0x26,0x0b,0x5e,0xd6,0x51}};

    typedef struct ICoreWebView2_9Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_9 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_9 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_9 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_9 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_9 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_9 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_9 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_9 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_9 * This,
            /* [in] */ POINT value);

        END_INTERFACE
    } ICoreWebView2_9Vtbl;

    interface ICoreWebView2_9
    {
        CONST_VTBL struct ICoreWebView2_9Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_9_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_10_INTERFACE_DEFINED__
#define __ICoreWebView2_10_INTERFACE_DEFINED__

/* interface ICoreWebView2_10 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_10 = {0xb1690564,0x6f5a,0x4983,{0x8e,0x48,0x31,0xd1,0x14,0x3f,0xec,0xdb}};

    typedef struct ICoreWebView2_10Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_10 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_10 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_10 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_10 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_10 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_10 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_10 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_10 * This,
            /* [in] */ POINT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, add_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *add_BasicAuthenticationRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, remove_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_BasicAuthenticationRequested )(
            ICoreWebView2_10 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2_10Vtbl;

    interface ICoreWebView2_10
    {
        CONST_VTBL struct ICoreWebView2_10Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_10_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_11_INTERFACE_DEFINED__
#define __ICoreWebView2_11_INTERFACE_DEFINED__

/* interface ICoreWebView2_11 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_11 = {0x0be78e56,0xc193,0x4051,{0xb9,0x43,0x23,0xb4,0x60,0xc0,0x8b,0xdb}};

    typedef struct ICoreWebView2_11Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_11 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_11 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_11 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_11 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_11 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_11 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_11 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_11 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_11 * This,
            /* [in] */ POINT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, add_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *add_BasicAuthenticationRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, remove_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_BasicAuthenticationRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, CallDevToolsProtocolMethodForSession)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethodForSession )(
            ICoreWebView2_11 * This,
            /* [in] */ LPCWSTR sessionId,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, add_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ ICoreWebView2ContextMenuRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, remove_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuRequested )(
            ICoreWebView2_11 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2_11Vtbl;

    interface ICoreWebView2_11
    {
        CONST_VTBL struct ICoreWebView2_11Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_11_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_12_INTERFACE_DEFINED__
#define __ICoreWebView2_12_INTERFACE_DEFINED__

/* interface ICoreWebView2_12 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_12 = {0x35D69927,0xBCFA,0x4566,{0x93,0x49,0x6B,0x3E,0x0D,0x15,0x4C,0xAC}};

    typedef struct ICoreWebView2_12Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_12 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_12 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_12 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_12 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_12 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_12 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_12 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_12 * This,
            /* [in] */ POINT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, add_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *add_BasicAuthenticationRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, remove_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_BasicAuthenticationRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, CallDevToolsProtocolMethodForSession)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethodForSession )(
            ICoreWebView2_12 * This,
            /* [in] */ LPCWSTR sessionId,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, add_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2ContextMenuRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, remove_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuRequested )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, add_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *add_StatusBarTextChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ ICoreWebView2StatusBarTextChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, remove_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_StatusBarTextChanged )(
            ICoreWebView2_12 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, get_StatusBarText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBarText )(
            ICoreWebView2_12 * This,
            /* [retval][out] */ LPWSTR *value);

        END_INTERFACE
    } ICoreWebView2_12Vtbl;

    interface ICoreWebView2_12
    {
        CONST_VTBL struct ICoreWebView2_12Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_12_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_13_INTERFACE_DEFINED__
#define __ICoreWebView2_13_INTERFACE_DEFINED__

/* interface ICoreWebView2_13 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_13 = {0xF75F09A8,0x667E,0x4983,{0x88,0xD6,0xC8,0x77,0x3F,0x31,0x5E,0x84}};

    typedef struct ICoreWebView2_13Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_13 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_13 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_13 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_13 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_13 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_13 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_13 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_13 * This,
            /* [in] */ POINT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, add_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *add_BasicAuthenticationRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, remove_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_BasicAuthenticationRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, CallDevToolsProtocolMethodForSession)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethodForSession )(
            ICoreWebView2_13 * This,
            /* [in] */ LPCWSTR sessionId,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, add_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2ContextMenuRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, remove_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuRequested )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, add_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *add_StatusBarTextChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ ICoreWebView2StatusBarTextChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, remove_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_StatusBarTextChanged )(
            ICoreWebView2_13 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, get_StatusBarText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBarText )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_13, get_Profile)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Profile )(
            ICoreWebView2_13 * This,
            /* [retval][out] */ ICoreWebView2Profile **value);

        END_INTERFACE
    } ICoreWebView2_13Vtbl;

    interface ICoreWebView2_13
    {
        CONST_VTBL struct ICoreWebView2_13Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2_13_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2BasicAuthenticationRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BasicAuthenticationRequestedEventArgs = {0xef05516f,0xd897,0x4f9e,{0xb6,0x72,0xd8,0xe2,0x30,0x7a,0x3f,0xb0}};

    typedef struct ICoreWebView2BasicAuthenticationRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, get_Challenge)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Challenge )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [retval][out] */ LPWSTR *challenge);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, get_Response)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Response )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2BasicAuthenticationResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, get_Cancel)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [retval][out] */ BOOL *cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, put_Cancel)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [in] */ BOOL cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2BasicAuthenticationRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2BasicAuthenticationRequestedEventArgsVtbl;

    interface ICoreWebView2BasicAuthenticationRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2BasicAuthenticationRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BasicAuthenticationRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2BasicAuthenticationRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2BasicAuthenticationRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BasicAuthenticationRequestedEventHandler = {0x58b4d6c2,0x18d4,0x497e,{0xb3,0x9b,0x9a,0x96,0x53,0x3f,0xa2,0x78}};

    typedef struct ICoreWebView2BasicAuthenticationRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BasicAuthenticationRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BasicAuthenticationRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BasicAuthenticationRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2BasicAuthenticationRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2BasicAuthenticationRequestedEventHandlerVtbl;

    interface ICoreWebView2BasicAuthenticationRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2BasicAuthenticationRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BasicAuthenticationRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__
#define __ICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__

/* interface ICoreWebView2BasicAuthenticationResponse */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BasicAuthenticationResponse = {0x07023f7d,0x2d77,0x4d67,{0x90,0x40,0x6e,0x7d,0x42,0x8c,0x6a,0x40}};

    typedef struct ICoreWebView2BasicAuthenticationResponseVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BasicAuthenticationResponse * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BasicAuthenticationResponse * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BasicAuthenticationResponse * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationResponse, get_UserName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )(
            ICoreWebView2BasicAuthenticationResponse * This,
            /* [retval][out] */ LPWSTR *userName);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationResponse, put_UserName)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserName )(
            ICoreWebView2BasicAuthenticationResponse * This,
            /* [in] */ LPCWSTR userName);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationResponse, get_Password)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Password )(
            ICoreWebView2BasicAuthenticationResponse * This,
            /* [retval][out] */ LPWSTR *password);

        DECLSPEC_XFGVIRT(ICoreWebView2BasicAuthenticationResponse, put_Password)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Password )(
            ICoreWebView2BasicAuthenticationResponse * This,
            /* [in] */ LPCWSTR password);

        END_INTERFACE
    } ICoreWebView2BasicAuthenticationResponseVtbl;

    interface ICoreWebView2BasicAuthenticationResponse
    {
        CONST_VTBL struct ICoreWebView2BasicAuthenticationResponseVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BasicAuthenticationResponse_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2BrowserProcessExitedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BrowserProcessExitedEventArgs = {0x1f00663f,0xaf8c,0x4782,{0x9c,0xdd,0xdd,0x01,0xc5,0x2e,0x34,0xcb}};

    typedef struct ICoreWebView2BrowserProcessExitedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BrowserProcessExitedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BrowserProcessExitedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BrowserProcessExitedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BrowserProcessExitedEventArgs, get_BrowserProcessExitKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessExitKind )(
            ICoreWebView2BrowserProcessExitedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND *browserProcessExitKind);

        DECLSPEC_XFGVIRT(ICoreWebView2BrowserProcessExitedEventArgs, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2BrowserProcessExitedEventArgs * This,
            /* [retval][out] */ UINT32 *value);

        END_INTERFACE
    } ICoreWebView2BrowserProcessExitedEventArgsVtbl;

    interface ICoreWebView2BrowserProcessExitedEventArgs
    {
        CONST_VTBL struct ICoreWebView2BrowserProcessExitedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BrowserProcessExitedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BrowserProcessExitedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2BrowserProcessExitedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2BrowserProcessExitedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BrowserProcessExitedEventHandler = {0xfa504257,0xa216,0x4911,{0xa8,0x60,0xfe,0x88,0x25,0x71,0x28,0x61}};

    typedef struct ICoreWebView2BrowserProcessExitedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BrowserProcessExitedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BrowserProcessExitedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BrowserProcessExitedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BrowserProcessExitedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2BrowserProcessExitedEventHandler * This,
            /* [in] */ ICoreWebView2Environment *sender,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2BrowserProcessExitedEventHandlerVtbl;

    interface ICoreWebView2BrowserProcessExitedEventHandler
    {
        CONST_VTBL struct ICoreWebView2BrowserProcessExitedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BrowserProcessExitedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2BytesReceivedChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2BytesReceivedChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2BytesReceivedChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2BytesReceivedChangedEventHandler = {0x828e8ab6,0xd94c,0x4264,{0x9c,0xef,0x52,0x17,0x17,0x0d,0x62,0x51}};

    typedef struct ICoreWebView2BytesReceivedChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2BytesReceivedChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2BytesReceivedChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2BytesReceivedChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2BytesReceivedChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2BytesReceivedChangedEventHandler * This,
            /* [in] */ ICoreWebView2DownloadOperation *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2BytesReceivedChangedEventHandlerVtbl;

    interface ICoreWebView2BytesReceivedChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2BytesReceivedChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2BytesReceivedChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CompositionController_INTERFACE_DEFINED__
#define __ICoreWebView2CompositionController_INTERFACE_DEFINED__

/* interface ICoreWebView2CompositionController */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CompositionController = {0x3df9b733,0xb9ae,0x4a15,{0x86,0xb4,0xeb,0x9e,0xe9,0x82,0x64,0x69}};

    typedef struct ICoreWebView2CompositionControllerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CompositionController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CompositionController * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CompositionController * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_RootVisualTarget)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootVisualTarget )(
            ICoreWebView2CompositionController * This,
            /* [retval][out] */ IUnknown **target);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, put_RootVisualTarget)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RootVisualTarget )(
            ICoreWebView2CompositionController * This,
            /* [in] */ IUnknown *target);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, SendMouseInput)
        HRESULT ( STDMETHODCALLTYPE *SendMouseInput )(
            ICoreWebView2CompositionController * This,
            /* [in] */ COREWEBVIEW2_MOUSE_EVENT_KIND eventKind,
            /* [in] */ COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS virtualKeys,
            /* [in] */ UINT32 mouseData,
            /* [in] */ POINT point);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, SendPointerInput)
        HRESULT ( STDMETHODCALLTYPE *SendPointerInput )(
            ICoreWebView2CompositionController * This,
            /* [in] */ COREWEBVIEW2_POINTER_EVENT_KIND eventKind,
            /* [in] */ ICoreWebView2PointerInfo *pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_Cursor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cursor )(
            ICoreWebView2CompositionController * This,
            /* [retval][out] */ HCURSOR *cursor);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_SystemCursorId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemCursorId )(
            ICoreWebView2CompositionController * This,
            /* [retval][out] */ UINT32 *systemCursorId);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, add_CursorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_CursorChanged )(
            ICoreWebView2CompositionController * This,
            /* [in] */ ICoreWebView2CursorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, remove_CursorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_CursorChanged )(
            ICoreWebView2CompositionController * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2CompositionControllerVtbl;

    interface ICoreWebView2CompositionController
    {
        CONST_VTBL struct ICoreWebView2CompositionControllerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CompositionController_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CompositionController2_INTERFACE_DEFINED__
#define __ICoreWebView2CompositionController2_INTERFACE_DEFINED__

/* interface ICoreWebView2CompositionController2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CompositionController2 = {0x0b6a3d24,0x49cb,0x4806,{0xba,0x20,0xb5,0xe0,0x73,0x4a,0x7b,0x26}};

    typedef struct ICoreWebView2CompositionController2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CompositionController2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CompositionController2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_RootVisualTarget)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootVisualTarget )(
            ICoreWebView2CompositionController2 * This,
            /* [retval][out] */ IUnknown **target);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, put_RootVisualTarget)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RootVisualTarget )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ IUnknown *target);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, SendMouseInput)
        HRESULT ( STDMETHODCALLTYPE *SendMouseInput )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ COREWEBVIEW2_MOUSE_EVENT_KIND eventKind,
            /* [in] */ COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS virtualKeys,
            /* [in] */ UINT32 mouseData,
            /* [in] */ POINT point);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, SendPointerInput)
        HRESULT ( STDMETHODCALLTYPE *SendPointerInput )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ COREWEBVIEW2_POINTER_EVENT_KIND eventKind,
            /* [in] */ ICoreWebView2PointerInfo *pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_Cursor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cursor )(
            ICoreWebView2CompositionController2 * This,
            /* [retval][out] */ HCURSOR *cursor);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, get_SystemCursorId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemCursorId )(
            ICoreWebView2CompositionController2 * This,
            /* [retval][out] */ UINT32 *systemCursorId);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, add_CursorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_CursorChanged )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ ICoreWebView2CursorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController, remove_CursorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_CursorChanged )(
            ICoreWebView2CompositionController2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2CompositionController2, get_AutomationProvider)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutomationProvider )(
            ICoreWebView2CompositionController2 * This,
            /* [retval][out] */ IUnknown **provider);

        END_INTERFACE
    } ICoreWebView2CompositionController2Vtbl;

    interface ICoreWebView2CompositionController2
    {
        CONST_VTBL struct ICoreWebView2CompositionController2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CompositionController2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Controller_INTERFACE_DEFINED__
#define __ICoreWebView2Controller_INTERFACE_DEFINED__

/* interface ICoreWebView2Controller */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Controller = {0x4d00c0d1,0x9434,0x4eb6,{0x80,0x78,0x86,0x97,0xa5,0x60,0x33,0x4f}};

    typedef struct ICoreWebView2ControllerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Controller * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Controller * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Controller * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_IsVisible)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVisible )(
            ICoreWebView2Controller * This,
            /* [retval][out] */ BOOL *isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_IsVisible)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVisible )(
            ICoreWebView2Controller * This,
            /* [in] */ BOOL isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_Bounds)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
            ICoreWebView2Controller * This,
            /* [retval][out] */ RECT *bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_Bounds)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
            ICoreWebView2Controller * This,
            /* [in] */ RECT bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ZoomFactor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
            ICoreWebView2Controller * This,
            /* [retval][out] */ double *zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ZoomFactor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomFactor )(
            ICoreWebView2Controller * This,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ZoomFactorChanged )(
            ICoreWebView2Controller * This,
            /* [in] */ ICoreWebView2ZoomFactorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ZoomFactorChanged )(
            ICoreWebView2Controller * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, SetBoundsAndZoomFactor)
        HRESULT ( STDMETHODCALLTYPE *SetBoundsAndZoomFactor )(
            ICoreWebView2Controller * This,
            /* [in] */ RECT bounds,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, MoveFocus)
        HRESULT ( STDMETHODCALLTYPE *MoveFocus )(
            ICoreWebView2Controller * This,
            /* [in] */ COREWEBVIEW2_MOVE_FOCUS_REASON reason);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *add_MoveFocusRequested )(
            ICoreWebView2Controller * This,
            /* [in] */ ICoreWebView2MoveFocusRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_MoveFocusRequested )(
            ICoreWebView2Controller * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *add_GotFocus )(
            ICoreWebView2Controller * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )(
            ICoreWebView2Controller * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *add_LostFocus )(
            ICoreWebView2Controller * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )(
            ICoreWebView2Controller * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *add_AcceleratorKeyPressed )(
            ICoreWebView2Controller * This,
            /* [in] */ ICoreWebView2AcceleratorKeyPressedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *remove_AcceleratorKeyPressed )(
            ICoreWebView2Controller * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ParentWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentWindow )(
            ICoreWebView2Controller * This,
            /* [retval][out] */ HWND *parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ParentWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParentWindow )(
            ICoreWebView2Controller * This,
            /* [in] */ HWND parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, NotifyParentWindowPositionChanged)
        HRESULT ( STDMETHODCALLTYPE *NotifyParentWindowPositionChanged )(
            ICoreWebView2Controller * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, Close)
        HRESULT ( STDMETHODCALLTYPE *Close )(
            ICoreWebView2Controller * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_CoreWebView2)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CoreWebView2 )(
            ICoreWebView2Controller * This,
            /* [retval][out] */ ICoreWebView2 **coreWebView2);

        END_INTERFACE
    } ICoreWebView2ControllerVtbl;

    interface ICoreWebView2Controller
    {
        CONST_VTBL struct ICoreWebView2ControllerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Controller_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Controller2_INTERFACE_DEFINED__
#define __ICoreWebView2Controller2_INTERFACE_DEFINED__

/* interface ICoreWebView2Controller2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Controller2 = {0xc979903e,0xd4ca,0x4228,{0x92,0xeb,0x47,0xee,0x3f,0xa9,0x6e,0xab}};

    typedef struct ICoreWebView2Controller2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Controller2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Controller2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Controller2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_IsVisible)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVisible )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ BOOL *isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_IsVisible)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVisible )(
            ICoreWebView2Controller2 * This,
            /* [in] */ BOOL isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_Bounds)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ RECT *bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_Bounds)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
            ICoreWebView2Controller2 * This,
            /* [in] */ RECT bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ZoomFactor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ double *zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ZoomFactor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomFactor )(
            ICoreWebView2Controller2 * This,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ZoomFactorChanged )(
            ICoreWebView2Controller2 * This,
            /* [in] */ ICoreWebView2ZoomFactorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ZoomFactorChanged )(
            ICoreWebView2Controller2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, SetBoundsAndZoomFactor)
        HRESULT ( STDMETHODCALLTYPE *SetBoundsAndZoomFactor )(
            ICoreWebView2Controller2 * This,
            /* [in] */ RECT bounds,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, MoveFocus)
        HRESULT ( STDMETHODCALLTYPE *MoveFocus )(
            ICoreWebView2Controller2 * This,
            /* [in] */ COREWEBVIEW2_MOVE_FOCUS_REASON reason);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *add_MoveFocusRequested )(
            ICoreWebView2Controller2 * This,
            /* [in] */ ICoreWebView2MoveFocusRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_MoveFocusRequested )(
            ICoreWebView2Controller2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *add_GotFocus )(
            ICoreWebView2Controller2 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )(
            ICoreWebView2Controller2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *add_LostFocus )(
            ICoreWebView2Controller2 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )(
            ICoreWebView2Controller2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *add_AcceleratorKeyPressed )(
            ICoreWebView2Controller2 * This,
            /* [in] */ ICoreWebView2AcceleratorKeyPressedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *remove_AcceleratorKeyPressed )(
            ICoreWebView2Controller2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ParentWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentWindow )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ HWND *parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ParentWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParentWindow )(
            ICoreWebView2Controller2 * This,
            /* [in] */ HWND parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, NotifyParentWindowPositionChanged)
        HRESULT ( STDMETHODCALLTYPE *NotifyParentWindowPositionChanged )(
            ICoreWebView2Controller2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, Close)
        HRESULT ( STDMETHODCALLTYPE *Close )(
            ICoreWebView2Controller2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_CoreWebView2)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CoreWebView2 )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ ICoreWebView2 **coreWebView2);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, get_DefaultBackgroundColor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColor )(
            ICoreWebView2Controller2 * This,
            /* [retval][out] */ COREWEBVIEW2_COLOR *backgroundColor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, put_DefaultBackgroundColor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultBackgroundColor )(
            ICoreWebView2Controller2 * This,
            /* [in] */ COREWEBVIEW2_COLOR backgroundColor);

        END_INTERFACE
    } ICoreWebView2Controller2Vtbl;

    interface ICoreWebView2Controller2
    {
        CONST_VTBL struct ICoreWebView2Controller2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Controller2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Controller3_INTERFACE_DEFINED__
#define __ICoreWebView2Controller3_INTERFACE_DEFINED__

/* interface ICoreWebView2Controller3 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Controller3 = {0xf9614724,0x5d2b,0x41dc,{0xae,0xf7,0x73,0xd6,0x2b,0x51,0x54,0x3b}};

    typedef struct ICoreWebView2Controller3Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Controller3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Controller3 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Controller3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_IsVisible)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVisible )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ BOOL *isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_IsVisible)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVisible )(
            ICoreWebView2Controller3 * This,
            /* [in] */ BOOL isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_Bounds)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ RECT *bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_Bounds)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
            ICoreWebView2Controller3 * This,
            /* [in] */ RECT bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ZoomFactor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ double *zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ZoomFactor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomFactor )(
            ICoreWebView2Controller3 * This,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ZoomFactorChanged )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2ZoomFactorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ZoomFactorChanged )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, SetBoundsAndZoomFactor)
        HRESULT ( STDMETHODCALLTYPE *SetBoundsAndZoomFactor )(
            ICoreWebView2Controller3 * This,
            /* [in] */ RECT bounds,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, MoveFocus)
        HRESULT ( STDMETHODCALLTYPE *MoveFocus )(
            ICoreWebView2Controller3 * This,
            /* [in] */ COREWEBVIEW2_MOVE_FOCUS_REASON reason);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *add_MoveFocusRequested )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2MoveFocusRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_MoveFocusRequested )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *add_GotFocus )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *add_LostFocus )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *add_AcceleratorKeyPressed )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2AcceleratorKeyPressedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *remove_AcceleratorKeyPressed )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ParentWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentWindow )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ HWND *parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ParentWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParentWindow )(
            ICoreWebView2Controller3 * This,
            /* [in] */ HWND parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, NotifyParentWindowPositionChanged)
        HRESULT ( STDMETHODCALLTYPE *NotifyParentWindowPositionChanged )(
            ICoreWebView2Controller3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, Close)
        HRESULT ( STDMETHODCALLTYPE *Close )(
            ICoreWebView2Controller3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_CoreWebView2)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CoreWebView2 )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ ICoreWebView2 **coreWebView2);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, get_DefaultBackgroundColor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColor )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ COREWEBVIEW2_COLOR *backgroundColor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, put_DefaultBackgroundColor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultBackgroundColor )(
            ICoreWebView2Controller3 * This,
            /* [in] */ COREWEBVIEW2_COLOR backgroundColor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_RasterizationScale)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RasterizationScale )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ double *scale);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_RasterizationScale)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RasterizationScale )(
            ICoreWebView2Controller3 * This,
            /* [in] */ double scale);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_ShouldDetectMonitorScaleChanges)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDetectMonitorScaleChanges )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_ShouldDetectMonitorScaleChanges)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldDetectMonitorScaleChanges )(
            ICoreWebView2Controller3 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, add_RasterizationScaleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_RasterizationScaleChanged )(
            ICoreWebView2Controller3 * This,
            /* [in] */ ICoreWebView2RasterizationScaleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, remove_RasterizationScaleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_RasterizationScaleChanged )(
            ICoreWebView2Controller3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_BoundsMode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoundsMode )(
            ICoreWebView2Controller3 * This,
            /* [retval][out] */ COREWEBVIEW2_BOUNDS_MODE *boundsMode);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_BoundsMode)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoundsMode )(
            ICoreWebView2Controller3 * This,
            /* [in] */ COREWEBVIEW2_BOUNDS_MODE boundsMode);

        END_INTERFACE
    } ICoreWebView2Controller3Vtbl;

    interface ICoreWebView2Controller3
    {
        CONST_VTBL struct ICoreWebView2Controller3Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Controller3_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Controller4_INTERFACE_DEFINED__
#define __ICoreWebView2Controller4_INTERFACE_DEFINED__

/* interface ICoreWebView2Controller4 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Controller4 = {0x97d418d5,0xa426,0x4e49,{0xa1,0x51,0xe1,0xa1,0x0f,0x32,0x7d,0x9e}};

    typedef struct ICoreWebView2Controller4Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Controller4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Controller4 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Controller4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_IsVisible)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVisible )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ BOOL *isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_IsVisible)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVisible )(
            ICoreWebView2Controller4 * This,
            /* [in] */ BOOL isVisible);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_Bounds)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ RECT *bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_Bounds)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
            ICoreWebView2Controller4 * This,
            /* [in] */ RECT bounds);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ZoomFactor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ double *zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ZoomFactor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomFactor )(
            ICoreWebView2Controller4 * This,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ZoomFactorChanged )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2ZoomFactorChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_ZoomFactorChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ZoomFactorChanged )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, SetBoundsAndZoomFactor)
        HRESULT ( STDMETHODCALLTYPE *SetBoundsAndZoomFactor )(
            ICoreWebView2Controller4 * This,
            /* [in] */ RECT bounds,
            /* [in] */ double zoomFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, MoveFocus)
        HRESULT ( STDMETHODCALLTYPE *MoveFocus )(
            ICoreWebView2Controller4 * This,
            /* [in] */ COREWEBVIEW2_MOVE_FOCUS_REASON reason);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *add_MoveFocusRequested )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2MoveFocusRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_MoveFocusRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_MoveFocusRequested )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *add_GotFocus )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_GotFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *add_LostFocus )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2FocusChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_LostFocus)
        HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, add_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *add_AcceleratorKeyPressed )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2AcceleratorKeyPressedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, remove_AcceleratorKeyPressed)
        HRESULT ( STDMETHODCALLTYPE *remove_AcceleratorKeyPressed )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_ParentWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentWindow )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ HWND *parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, put_ParentWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParentWindow )(
            ICoreWebView2Controller4 * This,
            /* [in] */ HWND parentWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, NotifyParentWindowPositionChanged)
        HRESULT ( STDMETHODCALLTYPE *NotifyParentWindowPositionChanged )(
            ICoreWebView2Controller4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, Close)
        HRESULT ( STDMETHODCALLTYPE *Close )(
            ICoreWebView2Controller4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller, get_CoreWebView2)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CoreWebView2 )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ ICoreWebView2 **coreWebView2);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, get_DefaultBackgroundColor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColor )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ COREWEBVIEW2_COLOR *backgroundColor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller2, put_DefaultBackgroundColor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultBackgroundColor )(
            ICoreWebView2Controller4 * This,
            /* [in] */ COREWEBVIEW2_COLOR backgroundColor);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_RasterizationScale)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RasterizationScale )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ double *scale);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_RasterizationScale)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RasterizationScale )(
            ICoreWebView2Controller4 * This,
            /* [in] */ double scale);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_ShouldDetectMonitorScaleChanges)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDetectMonitorScaleChanges )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_ShouldDetectMonitorScaleChanges)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldDetectMonitorScaleChanges )(
            ICoreWebView2Controller4 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, add_RasterizationScaleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_RasterizationScaleChanged )(
            ICoreWebView2Controller4 * This,
            /* [in] */ ICoreWebView2RasterizationScaleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, remove_RasterizationScaleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_RasterizationScaleChanged )(
            ICoreWebView2Controller4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, get_BoundsMode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoundsMode )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ COREWEBVIEW2_BOUNDS_MODE *boundsMode);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller3, put_BoundsMode)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoundsMode )(
            ICoreWebView2Controller4 * This,
            /* [in] */ COREWEBVIEW2_BOUNDS_MODE boundsMode);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller4, get_AllowExternalDrop)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowExternalDrop )(
            ICoreWebView2Controller4 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Controller4, put_AllowExternalDrop)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowExternalDrop )(
            ICoreWebView2Controller4 * This,
            /* [in] */ BOOL value);

        END_INTERFACE
    } ICoreWebView2Controller4Vtbl;

    interface ICoreWebView2Controller4
    {
        CONST_VTBL struct ICoreWebView2Controller4Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Controller4_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ControllerOptions_INTERFACE_DEFINED__
#define __ICoreWebView2ControllerOptions_INTERFACE_DEFINED__

/* interface ICoreWebView2ControllerOptions */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ControllerOptions = {0x12aae616,0x8ccb,0x44ec,{0xbc,0xb3,0xeb,0x18,0x31,0x88,0x16,0x35}};

    typedef struct ICoreWebView2ControllerOptionsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ControllerOptions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ControllerOptions * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ControllerOptions * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ControllerOptions, get_ProfileName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProfileName )(
            ICoreWebView2ControllerOptions * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ControllerOptions, put_ProfileName)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProfileName )(
            ICoreWebView2ControllerOptions * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2ControllerOptions, get_IsInPrivateModeEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInPrivateModeEnabled )(
            ICoreWebView2ControllerOptions * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ControllerOptions, put_IsInPrivateModeEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsInPrivateModeEnabled )(
            ICoreWebView2ControllerOptions * This,
            /* [in] */ BOOL value);

        END_INTERFACE
    } ICoreWebView2ControllerOptionsVtbl;

    interface ICoreWebView2ControllerOptions
    {
        CONST_VTBL struct ICoreWebView2ControllerOptionsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ControllerOptions_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ContentLoadingEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContentLoadingEventArgs = {0x0c8a1275,0x9b6b,0x4901,{0x87,0xad,0x70,0xdf,0x25,0xba,0xfa,0x6e}};

    typedef struct ICoreWebView2ContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContentLoadingEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContentLoadingEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContentLoadingEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContentLoadingEventArgs, get_IsErrorPage)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsErrorPage )(
            ICoreWebView2ContentLoadingEventArgs * This,
            /* [retval][out] */ BOOL *isErrorPage);

        DECLSPEC_XFGVIRT(ICoreWebView2ContentLoadingEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2ContentLoadingEventArgs * This,
            /* [retval][out] */ UINT64 *navigationId);

        END_INTERFACE
    } ICoreWebView2ContentLoadingEventArgsVtbl;

    interface ICoreWebView2ContentLoadingEventArgs
    {
        CONST_VTBL struct ICoreWebView2ContentLoadingEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContentLoadingEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContentLoadingEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ContentLoadingEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ContentLoadingEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContentLoadingEventHandler = {0x364471e7,0xf2be,0x4910,{0xbd,0xba,0xd7,0x20,0x77,0xd5,0x1c,0x4b}};

    typedef struct ICoreWebView2ContentLoadingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContentLoadingEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContentLoadingEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContentLoadingEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContentLoadingEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ContentLoadingEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ContentLoadingEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ContentLoadingEventHandlerVtbl;

    interface ICoreWebView2ContentLoadingEventHandler
    {
        CONST_VTBL struct ICoreWebView2ContentLoadingEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContentLoadingEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ContextMenuRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContextMenuRequestedEventArgs = {0xa1d309ee,0xc03f,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2ContextMenuRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContextMenuRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContextMenuRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, get_MenuItems)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MenuItems )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2ContextMenuItemCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, get_ContextMenuTarget)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContextMenuTarget )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2ContextMenuTarget **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, get_Location)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Location )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, put_SelectedCommandId)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedCommandId )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [in] */ INT32 value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, get_SelectedCommandId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedCommandId )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ INT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2ContextMenuRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2ContextMenuRequestedEventArgsVtbl;

    interface ICoreWebView2ContextMenuRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2ContextMenuRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContextMenuRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ContextMenuRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ContextMenuRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContextMenuRequestedEventHandler = {0x04d3fe1d,0xab87,0x42fb,{0xa8,0x98,0xda,0x24,0x1d,0x35,0xb6,0x3c}};

    typedef struct ICoreWebView2ContextMenuRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContextMenuRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContextMenuRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContextMenuRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ContextMenuRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ContextMenuRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ContextMenuRequestedEventHandlerVtbl;

    interface ICoreWebView2ContextMenuRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ContextMenuRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContextMenuRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Cookie_INTERFACE_DEFINED__
#define __ICoreWebView2Cookie_INTERFACE_DEFINED__

/* interface ICoreWebView2Cookie */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Cookie = {0xAD26D6BE,0x1486,0x43E6,{0xBF,0x87,0xA2,0x03,0x40,0x06,0xCA,0x21}};

    typedef struct ICoreWebView2CookieVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Cookie * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Cookie * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Cookie * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ LPWSTR *name);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_Value)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, put_Value)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )(
            ICoreWebView2Cookie * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_Domain)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Domain )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ LPWSTR *domain);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_Path)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ LPWSTR *path);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_Expires)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expires )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ double *expires);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, put_Expires)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expires )(
            ICoreWebView2Cookie * This,
            /* [in] */ double expires);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_IsHttpOnly)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHttpOnly )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ BOOL *isHttpOnly);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, put_IsHttpOnly)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHttpOnly )(
            ICoreWebView2Cookie * This,
            /* [in] */ BOOL isHttpOnly);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_SameSite)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SameSite )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ COREWEBVIEW2_COOKIE_SAME_SITE_KIND *sameSite);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, put_SameSite)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SameSite )(
            ICoreWebView2Cookie * This,
            /* [in] */ COREWEBVIEW2_COOKIE_SAME_SITE_KIND sameSite);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_IsSecure)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSecure )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ BOOL *isSecure);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, put_IsSecure)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSecure )(
            ICoreWebView2Cookie * This,
            /* [in] */ BOOL isSecure);

        DECLSPEC_XFGVIRT(ICoreWebView2Cookie, get_IsSession)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSession )(
            ICoreWebView2Cookie * This,
            /* [retval][out] */ BOOL *isSession);

        END_INTERFACE
    } ICoreWebView2CookieVtbl;

    interface ICoreWebView2Cookie
    {
        CONST_VTBL struct ICoreWebView2CookieVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Cookie_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CookieList_INTERFACE_DEFINED__
#define __ICoreWebView2CookieList_INTERFACE_DEFINED__

/* interface ICoreWebView2CookieList */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CookieList = {0xF7F6F714,0x5D2A,0x43C6,{0x95,0x03,0x34,0x6E,0xCE,0x02,0xD1,0x86}};

    typedef struct ICoreWebView2CookieListVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CookieList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CookieList * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CookieList * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieList, get_Count)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )(
            ICoreWebView2CookieList * This,
            /* [retval][out] */ UINT *count);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieList, GetValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *GetValueAtIndex )(
            ICoreWebView2CookieList * This,
            /* [in] */ UINT index,
            /* [retval][out] */ ICoreWebView2Cookie **cookie);

        END_INTERFACE
    } ICoreWebView2CookieListVtbl;

    interface ICoreWebView2CookieList
    {
        CONST_VTBL struct ICoreWebView2CookieListVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CookieList_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CookieManager_INTERFACE_DEFINED__
#define __ICoreWebView2CookieManager_INTERFACE_DEFINED__

/* interface ICoreWebView2CookieManager */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CookieManager = {0x177CD9E7,0xB6F5,0x451A,{0x94,0xA0,0x5D,0x7A,0x3A,0x4C,0x41,0x41}};

    typedef struct ICoreWebView2CookieManagerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CookieManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CookieManager * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CookieManager * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, CreateCookie)
        HRESULT ( STDMETHODCALLTYPE *CreateCookie )(
            ICoreWebView2CookieManager * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ LPCWSTR value,
            /* [in] */ LPCWSTR domain,
            /* [in] */ LPCWSTR path,
            /* [retval][out] */ ICoreWebView2Cookie **cookie);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, CopyCookie)
        HRESULT ( STDMETHODCALLTYPE *CopyCookie )(
            ICoreWebView2CookieManager * This,
            /* [in] */ ICoreWebView2Cookie *cookieParam,
            /* [retval][out] */ ICoreWebView2Cookie **cookie);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, GetCookies)
        HRESULT ( STDMETHODCALLTYPE *GetCookies )(
            ICoreWebView2CookieManager * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ ICoreWebView2GetCookiesCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, AddOrUpdateCookie)
        HRESULT ( STDMETHODCALLTYPE *AddOrUpdateCookie )(
            ICoreWebView2CookieManager * This,
            /* [in] */ ICoreWebView2Cookie *cookie);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, DeleteCookie)
        HRESULT ( STDMETHODCALLTYPE *DeleteCookie )(
            ICoreWebView2CookieManager * This,
            /* [in] */ ICoreWebView2Cookie *cookie);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, DeleteCookies)
        HRESULT ( STDMETHODCALLTYPE *DeleteCookies )(
            ICoreWebView2CookieManager * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, DeleteCookiesWithDomainAndPath)
        HRESULT ( STDMETHODCALLTYPE *DeleteCookiesWithDomainAndPath )(
            ICoreWebView2CookieManager * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ LPCWSTR domain,
            /* [in] */ LPCWSTR path);

        DECLSPEC_XFGVIRT(ICoreWebView2CookieManager, DeleteAllCookies)
        HRESULT ( STDMETHODCALLTYPE *DeleteAllCookies )(
            ICoreWebView2CookieManager * This);

        END_INTERFACE
    } ICoreWebView2CookieManagerVtbl;

    interface ICoreWebView2CookieManager
    {
        CONST_VTBL struct ICoreWebView2CookieManagerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CookieManager_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Certificate_INTERFACE_DEFINED__
#define __ICoreWebView2Certificate_INTERFACE_DEFINED__

/* interface ICoreWebView2Certificate */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Certificate = {0xC5FB2FCE,0x1CAC,0x4AEE,{0x9C,0x79,0x5E,0xD0,0x36,0x2E,0xAA,0xE0}};

    typedef struct ICoreWebView2CertificateVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Certificate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Certificate * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Certificate * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_Subject)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_Issuer)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Issuer )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_ValidFrom)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidFrom )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ double *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_ValidTo)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidTo )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ double *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_DerEncodedSerialNumber)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerEncodedSerialNumber )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_DisplayName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, ToPemEncoding)
        HRESULT ( STDMETHODCALLTYPE *ToPemEncoding )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ LPWSTR *pemEncodedData);

        DECLSPEC_XFGVIRT(ICoreWebView2Certificate, get_PemEncodedIssuerCertificateChain)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PemEncodedIssuerCertificateChain )(
            ICoreWebView2Certificate * This,
            /* [retval][out] */ ICoreWebView2StringCollection **value);

        END_INTERFACE
    } ICoreWebView2CertificateVtbl;

    interface ICoreWebView2Certificate
    {
        CONST_VTBL struct ICoreWebView2CertificateVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Certificate_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificate_INTERFACE_DEFINED__
#define __ICoreWebView2ClientCertificate_INTERFACE_DEFINED__

/* interface ICoreWebView2ClientCertificate */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClientCertificate = {0xe7188076,0xbcc3,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2ClientCertificateVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClientCertificate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClientCertificate * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClientCertificate * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_Subject)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_Issuer)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Issuer )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_ValidFrom)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidFrom )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ double *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_ValidTo)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidTo )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ double *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_DerEncodedSerialNumber)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerEncodedSerialNumber )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_DisplayName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, ToPemEncoding)
        HRESULT ( STDMETHODCALLTYPE *ToPemEncoding )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ LPWSTR *pemEncodedData);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_PemEncodedIssuerCertificateChain)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PemEncodedIssuerCertificateChain )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ ICoreWebView2StringCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificate, get_Kind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )(
            ICoreWebView2ClientCertificate * This,
            /* [retval][out] */ COREWEBVIEW2_CLIENT_CERTIFICATE_KIND *value);

        END_INTERFACE
    } ICoreWebView2ClientCertificateVtbl;

    interface ICoreWebView2ClientCertificate
    {
        CONST_VTBL struct ICoreWebView2ClientCertificateVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClientCertificate_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2StringCollection_INTERFACE_DEFINED__
#define __ICoreWebView2StringCollection_INTERFACE_DEFINED__

/* interface ICoreWebView2StringCollection */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2StringCollection = {0xf41f3f8a,0xbcc3,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2StringCollectionVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2StringCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2StringCollection * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2StringCollection * This);

        DECLSPEC_XFGVIRT(ICoreWebView2StringCollection, get_Count)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )(
            ICoreWebView2StringCollection * This,
            /* [retval][out] */ UINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2StringCollection, GetValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *GetValueAtIndex )(
            ICoreWebView2StringCollection * This,
            /* [in] */ UINT index,
            /* [retval][out] */ LPWSTR *value);

        END_INTERFACE
    } ICoreWebView2StringCollectionVtbl;

    interface ICoreWebView2StringCollection
    {
        CONST_VTBL struct ICoreWebView2StringCollectionVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2StringCollection_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClearBrowsingDataCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ClearBrowsingDataCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ClearBrowsingDataCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClearBrowsingDataCompletedHandler = {0xe9710a06,0x1d1d,0x49b2,{0x82,0x34,0x22,0x6f,0x35,0x84,0x6a,0xe5}};

    typedef struct ICoreWebView2ClearBrowsingDataCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClearBrowsingDataCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClearBrowsingDataCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClearBrowsingDataCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClearBrowsingDataCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ClearBrowsingDataCompletedHandler * This,
            /* [in] */ HRESULT errorCode);

        END_INTERFACE
    } ICoreWebView2ClearBrowsingDataCompletedHandlerVtbl;

    interface ICoreWebView2ClearBrowsingDataCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2ClearBrowsingDataCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClearBrowsingDataCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateCollection_INTERFACE_DEFINED__
#define __ICoreWebView2ClientCertificateCollection_INTERFACE_DEFINED__

/* interface ICoreWebView2ClientCertificateCollection */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClientCertificateCollection = {0xef5674d2,0xbcc3,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2ClientCertificateCollectionVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClientCertificateCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClientCertificateCollection * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClientCertificateCollection * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateCollection, get_Count)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )(
            ICoreWebView2ClientCertificateCollection * This,
            /* [retval][out] */ UINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateCollection, GetValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *GetValueAtIndex )(
            ICoreWebView2ClientCertificateCollection * This,
            /* [in] */ UINT index,
            /* [retval][out] */ ICoreWebView2ClientCertificate **certificate);

        END_INTERFACE
    } ICoreWebView2ClientCertificateCollectionVtbl;

    interface ICoreWebView2ClientCertificateCollection
    {
        CONST_VTBL struct ICoreWebView2ClientCertificateCollectionVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClientCertificateCollection_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ClientCertificateRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClientCertificateRequestedEventArgs = {0xbc59db28,0xbcc3,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2ClientCertificateRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_Host)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Host )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_Port)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Port )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ int *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_IsProxy)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsProxy )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_AllowedCertificateAuthorities)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedCertificateAuthorities )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2StringCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_MutuallyTrustedCertificates)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MutuallyTrustedCertificates )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2ClientCertificateCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_SelectedCertificate)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedCertificate )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2ClientCertificate **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, put_SelectedCertificate)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedCertificate )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [in] */ ICoreWebView2ClientCertificate *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_Cancel)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, put_Cancel)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2ClientCertificateRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2ClientCertificateRequestedEventArgsVtbl;

    interface ICoreWebView2ClientCertificateRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2ClientCertificateRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClientCertificateRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClientCertificateRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ClientCertificateRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ClientCertificateRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClientCertificateRequestedEventHandler = {0xd7175ba2,0xbcc3,0x11eb,{0x85,0x29,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2ClientCertificateRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClientCertificateRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClientCertificateRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClientCertificateRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClientCertificateRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ClientCertificateRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ClientCertificateRequestedEventHandlerVtbl;

    interface ICoreWebView2ClientCertificateRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ClientCertificateRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClientCertificateRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuItem_INTERFACE_DEFINED__
#define __ICoreWebView2ContextMenuItem_INTERFACE_DEFINED__

/* interface ICoreWebView2ContextMenuItem */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContextMenuItem = {0x7aed49e3,0xa93f,0x497a,{0x81,0x1c,0x74,0x9c,0x6b,0x6b,0x6c,0x65}};

    typedef struct ICoreWebView2ContextMenuItemVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContextMenuItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContextMenuItem * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContextMenuItem * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_Label)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Label )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_CommandId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CommandId )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ INT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_ShortcutKeyDescription)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShortcutKeyDescription )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_Icon)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Icon )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ IStream **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_Kind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, put_IsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsEnabled )(
            ICoreWebView2ContextMenuItem * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_IsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, put_IsChecked)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsChecked )(
            ICoreWebView2ContextMenuItem * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_IsChecked)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsChecked )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, get_Children)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Children )(
            ICoreWebView2ContextMenuItem * This,
            /* [retval][out] */ ICoreWebView2ContextMenuItemCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, add_CustomItemSelected)
        HRESULT ( STDMETHODCALLTYPE *add_CustomItemSelected )(
            ICoreWebView2ContextMenuItem * This,
            /* [in] */ ICoreWebView2CustomItemSelectedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItem, remove_CustomItemSelected)
        HRESULT ( STDMETHODCALLTYPE *remove_CustomItemSelected )(
            ICoreWebView2ContextMenuItem * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2ContextMenuItemVtbl;

    interface ICoreWebView2ContextMenuItem
    {
        CONST_VTBL struct ICoreWebView2ContextMenuItemVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContextMenuItem_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuItemCollection_INTERFACE_DEFINED__
#define __ICoreWebView2ContextMenuItemCollection_INTERFACE_DEFINED__

/* interface ICoreWebView2ContextMenuItemCollection */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContextMenuItemCollection = {0xf562a2f5,0xc415,0x45cf,{0xb9,0x09,0xd4,0xb7,0xc1,0xe2,0x76,0xd3}};

    typedef struct ICoreWebView2ContextMenuItemCollectionVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContextMenuItemCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContextMenuItemCollection * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContextMenuItemCollection * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItemCollection, get_Count)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )(
            ICoreWebView2ContextMenuItemCollection * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItemCollection, GetValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *GetValueAtIndex )(
            ICoreWebView2ContextMenuItemCollection * This,
            /* [in] */ UINT32 index,
            /* [retval][out] */ ICoreWebView2ContextMenuItem **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItemCollection, RemoveValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *RemoveValueAtIndex )(
            ICoreWebView2ContextMenuItemCollection * This,
            /* [in] */ UINT32 index);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuItemCollection, InsertValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *InsertValueAtIndex )(
            ICoreWebView2ContextMenuItemCollection * This,
            /* [in] */ UINT32 index,
            /* [in] */ ICoreWebView2ContextMenuItem *value);

        END_INTERFACE
    } ICoreWebView2ContextMenuItemCollectionVtbl;

    interface ICoreWebView2ContextMenuItemCollection
    {
        CONST_VTBL struct ICoreWebView2ContextMenuItemCollectionVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContextMenuItemCollection_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__
#define __ICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__

/* interface ICoreWebView2ContextMenuTarget */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContextMenuTarget = {0xb8611d99,0xeed6,0x4f3f,{0x90,0x2c,0xa1,0x98,0x50,0x2a,0xd4,0x72}};

    typedef struct ICoreWebView2ContextMenuTargetVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContextMenuTarget * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContextMenuTarget * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContextMenuTarget * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_Kind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_IsEditable)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEditable )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_IsRequestedForMainFrame)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRequestedForMainFrame )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_PageUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PageUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_FrameUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_HasLinkUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasLinkUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_LinkUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinkUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_HasLinkText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasLinkText )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_LinkText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinkText )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_HasSourceUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasSourceUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_SourceUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceUri )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_HasSelection)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasSelection )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ContextMenuTarget, get_SelectionText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionText )(
            ICoreWebView2ContextMenuTarget * This,
            /* [retval][out] */ LPWSTR *value);

        END_INTERFACE
    } ICoreWebView2ContextMenuTargetVtbl;

    interface ICoreWebView2ContextMenuTarget
    {
        CONST_VTBL struct ICoreWebView2ContextMenuTargetVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContextMenuTarget_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler = {0x3B40AAC6,0xACFE,0x4FFD,{0x82,0x11,0xF6,0x07,0xB9,0x6E,0x2D,0x5B}};

    typedef struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler * This,
            /* [in] */ HRESULT errorCode);

        END_INTERFACE
    } ICoreWebView2ClearServerCertificateErrorActionsCompletedHandlerVtbl;

    interface ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2ClearServerCertificateErrorActionsCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler = {0x02fab84b,0x1428,0x4fb7,{0xad,0x45,0x1b,0x2e,0x64,0x73,0x61,0x84}};

    typedef struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler * This,
            HRESULT errorCode,
            ICoreWebView2CompositionController *webView);

        END_INTERFACE
    } ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandlerVtbl;

    interface ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CreateCoreWebView2ControllerCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CreateCoreWebView2ControllerCompletedHandler = {0x6c4819f3,0xc9b7,0x4260,{0x81,0x27,0xc9,0xf5,0xbd,0xe7,0xf6,0x8c}};

    typedef struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CreateCoreWebView2ControllerCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler * This,
            HRESULT errorCode,
            ICoreWebView2Controller *createdController);

        END_INTERFACE
    } ICoreWebView2CreateCoreWebView2ControllerCompletedHandlerVtbl;

    interface ICoreWebView2CreateCoreWebView2ControllerCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2CreateCoreWebView2ControllerCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CreateCoreWebView2ControllerCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler = {0x4e8a3389,0xc9d8,0x4bd2,{0xb6,0xb5,0x12,0x4f,0xee,0x6c,0xc1,0x4d}};

    typedef struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler * This,
            HRESULT errorCode,
            ICoreWebView2Environment *createdEnvironment);

        END_INTERFACE
    } ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandlerVtbl;

    interface ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ContainsFullScreenElementChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ContainsFullScreenElementChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ContainsFullScreenElementChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ContainsFullScreenElementChangedEventHandler = {0xe45d98b1,0xafef,0x45be,{0x8b,0xaf,0x6c,0x77,0x28,0x86,0x7f,0x73}};

    typedef struct ICoreWebView2ContainsFullScreenElementChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ContainsFullScreenElementChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ContainsFullScreenElementChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ContainsFullScreenElementChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ContainsFullScreenElementChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ContainsFullScreenElementChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2ContainsFullScreenElementChangedEventHandlerVtbl;

    interface ICoreWebView2ContainsFullScreenElementChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ContainsFullScreenElementChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ContainsFullScreenElementChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CursorChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CursorChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CursorChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CursorChangedEventHandler = {0x9da43ccc,0x26e1,0x4dad,{0xb5,0x6c,0xd8,0x96,0x1c,0x94,0xc5,0x71}};

    typedef struct ICoreWebView2CursorChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CursorChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CursorChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CursorChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CursorChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CursorChangedEventHandler * This,
            /* [in] */ ICoreWebView2CompositionController *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2CursorChangedEventHandlerVtbl;

    interface ICoreWebView2CursorChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2CursorChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CursorChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2CustomItemSelectedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2CustomItemSelectedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2CustomItemSelectedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2CustomItemSelectedEventHandler = {0x49e1d0bc,0xfe9e,0x4481,{0xb7,0xc2,0x32,0x32,0x4a,0xa2,0x19,0x98}};

    typedef struct ICoreWebView2CustomItemSelectedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2CustomItemSelectedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2CustomItemSelectedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2CustomItemSelectedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2CustomItemSelectedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2CustomItemSelectedEventHandler * This,
            /* [in] */ ICoreWebView2ContextMenuItem *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2CustomItemSelectedEventHandlerVtbl;

    interface ICoreWebView2CustomItemSelectedEventHandler
    {
        CONST_VTBL struct ICoreWebView2CustomItemSelectedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2CustomItemSelectedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DocumentTitleChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2DocumentTitleChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2DocumentTitleChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DocumentTitleChangedEventHandler = {0xf5f2b923,0x953e,0x4042,{0x9f,0x95,0xf3,0xa1,0x18,0xe1,0xaf,0xd4}};

    typedef struct ICoreWebView2DocumentTitleChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DocumentTitleChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DocumentTitleChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DocumentTitleChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DocumentTitleChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2DocumentTitleChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2DocumentTitleChangedEventHandlerVtbl;

    interface ICoreWebView2DocumentTitleChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2DocumentTitleChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DocumentTitleChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2DOMContentLoadedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DOMContentLoadedEventArgs = {0x16B1E21A,0xC503,0x44F2,{0x84,0xC9,0x70,0xAB,0xA5,0x03,0x12,0x83}};

    typedef struct ICoreWebView2DOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DOMContentLoadedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DOMContentLoadedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DOMContentLoadedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DOMContentLoadedEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2DOMContentLoadedEventArgs * This,
            /* [retval][out] */ UINT64 *navigationId);

        END_INTERFACE
    } ICoreWebView2DOMContentLoadedEventArgsVtbl;

    interface ICoreWebView2DOMContentLoadedEventArgs
    {
        CONST_VTBL struct ICoreWebView2DOMContentLoadedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DOMContentLoadedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DOMContentLoadedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2DOMContentLoadedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2DOMContentLoadedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DOMContentLoadedEventHandler = {0x4BAC7E9C,0x199E,0x49ED,{0x87,0xED,0x24,0x93,0x03,0xAC,0xF0,0x19}};

    typedef struct ICoreWebView2DOMContentLoadedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DOMContentLoadedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DOMContentLoadedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DOMContentLoadedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DOMContentLoadedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2DOMContentLoadedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2DOMContentLoadedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2DOMContentLoadedEventHandlerVtbl;

    interface ICoreWebView2DOMContentLoadedEventHandler
    {
        CONST_VTBL struct ICoreWebView2DOMContentLoadedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DOMContentLoadedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Deferral_INTERFACE_DEFINED__
#define __ICoreWebView2Deferral_INTERFACE_DEFINED__

/* interface ICoreWebView2Deferral */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Deferral = {0xc10e7f7b,0xb585,0x46f0,{0xa6,0x23,0x8b,0xef,0xbf,0x3e,0x4e,0xe0}};

    typedef struct ICoreWebView2DeferralVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Deferral * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Deferral * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Deferral * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Deferral, Complete)
        HRESULT ( STDMETHODCALLTYPE *Complete )(
            ICoreWebView2Deferral * This);

        END_INTERFACE
    } ICoreWebView2DeferralVtbl;

    interface ICoreWebView2Deferral
    {
        CONST_VTBL struct ICoreWebView2DeferralVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Deferral_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DevToolsProtocolEventReceivedEventArgs = {0x653c2959,0xbb3a,0x4377,{0x86,0x32,0xb5,0x8a,0xda,0x4e,0x66,0xc4}};

    typedef struct ICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceivedEventArgs, get_ParameterObjectAsJson)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterObjectAsJson )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs * This,
            /* [retval][out] */ LPWSTR *parameterObjectAsJson);

        END_INTERFACE
    } ICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl;

    interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs
    {
        CONST_VTBL struct ICoreWebView2DevToolsProtocolEventReceivedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 = {0x2DC4959D,0x1494,0x4393,{0x95,0xBA,0xBE,0xA4,0xCB,0x9E,0xBD,0x1B}};

    typedef struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceivedEventArgs, get_ParameterObjectAsJson)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterObjectAsJson )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *parameterObjectAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceivedEventArgs2, get_SessionId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SessionId )(
            ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *sessionId);

        END_INTERFACE
    } ICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl;

    interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs2
    {
        CONST_VTBL struct ICoreWebView2DevToolsProtocolEventReceivedEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2DevToolsProtocolEventReceivedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DevToolsProtocolEventReceivedEventHandler = {0xe2fda4be,0x5456,0x406c,{0xa2,0x61,0x3d,0x45,0x21,0x38,0x36,0x2c}};

    typedef struct ICoreWebView2DevToolsProtocolEventReceivedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DevToolsProtocolEventReceivedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DevToolsProtocolEventReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DevToolsProtocolEventReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceivedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2DevToolsProtocolEventReceivedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2DevToolsProtocolEventReceivedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2DevToolsProtocolEventReceivedEventHandlerVtbl;

    interface ICoreWebView2DevToolsProtocolEventReceivedEventHandler
    {
        CONST_VTBL struct ICoreWebView2DevToolsProtocolEventReceivedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DevToolsProtocolEventReceivedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__
#define __ICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__

/* interface ICoreWebView2DevToolsProtocolEventReceiver */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DevToolsProtocolEventReceiver = {0xb32ca51a,0x8371,0x45e9,{0x93,0x17,0xaf,0x02,0x1d,0x08,0x03,0x67}};

    typedef struct ICoreWebView2DevToolsProtocolEventReceiverVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DevToolsProtocolEventReceiver * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DevToolsProtocolEventReceiver * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DevToolsProtocolEventReceiver * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceiver, add_DevToolsProtocolEventReceived)
        HRESULT ( STDMETHODCALLTYPE *add_DevToolsProtocolEventReceived )(
            ICoreWebView2DevToolsProtocolEventReceiver * This,
            /* [in] */ ICoreWebView2DevToolsProtocolEventReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2DevToolsProtocolEventReceiver, remove_DevToolsProtocolEventReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_DevToolsProtocolEventReceived )(
            ICoreWebView2DevToolsProtocolEventReceiver * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2DevToolsProtocolEventReceiverVtbl;

    interface ICoreWebView2DevToolsProtocolEventReceiver
    {
        CONST_VTBL struct ICoreWebView2DevToolsProtocolEventReceiverVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DevToolsProtocolEventReceiver_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DownloadOperation_INTERFACE_DEFINED__
#define __ICoreWebView2DownloadOperation_INTERFACE_DEFINED__

/* interface ICoreWebView2DownloadOperation */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DownloadOperation = {0x3d6b6cf2,0xafe1,0x44c7,{0xa9,0x95,0xc6,0x51,0x17,0x71,0x43,0x36}};

    typedef struct ICoreWebView2DownloadOperationVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DownloadOperation * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DownloadOperation * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, add_BytesReceivedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_BytesReceivedChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ ICoreWebView2BytesReceivedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, remove_BytesReceivedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_BytesReceivedChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, add_EstimatedEndTimeChanged)
        HRESULT ( STDMETHODCALLTYPE *add_EstimatedEndTimeChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ ICoreWebView2EstimatedEndTimeChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, remove_EstimatedEndTimeChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_EstimatedEndTimeChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, add_StateChanged)
        HRESULT ( STDMETHODCALLTYPE *add_StateChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ ICoreWebView2StateChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, remove_StateChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_StateChanged )(
            ICoreWebView2DownloadOperation * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_ContentDisposition)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentDisposition )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ LPWSTR *contentDisposition);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_MimeType)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MimeType )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ LPWSTR *mimeType);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_TotalBytesToReceive)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalBytesToReceive )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ INT64 *totalBytesToReceive);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_BytesReceived)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BytesReceived )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ INT64 *bytesReceived);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_EstimatedEndTime)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EstimatedEndTime )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ LPWSTR *estimatedEndTime);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_ResultFilePath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResultFilePath )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ LPWSTR *resultFilePath);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_State)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ COREWEBVIEW2_DOWNLOAD_STATE *downloadState);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_InterruptReason)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterruptReason )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON *interruptReason);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, Cancel)
        HRESULT ( STDMETHODCALLTYPE *Cancel )(
            ICoreWebView2DownloadOperation * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, Pause)
        HRESULT ( STDMETHODCALLTYPE *Pause )(
            ICoreWebView2DownloadOperation * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2DownloadOperation * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadOperation, get_CanResume)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanResume )(
            ICoreWebView2DownloadOperation * This,
            /* [retval][out] */ BOOL *canResume);

        END_INTERFACE
    } ICoreWebView2DownloadOperationVtbl;

    interface ICoreWebView2DownloadOperation
    {
        CONST_VTBL struct ICoreWebView2DownloadOperationVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DownloadOperation_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2DownloadStartingEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DownloadStartingEventArgs = {0xe99bbe21,0x43e9,0x4544,{0xa7,0x32,0x28,0x27,0x64,0xea,0xfa,0x60}};

    typedef struct ICoreWebView2DownloadStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DownloadStartingEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DownloadStartingEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, get_DownloadOperation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadOperation )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [retval][out] */ ICoreWebView2DownloadOperation **downloadOperation);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, get_Cancel)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [retval][out] */ BOOL *cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, put_Cancel)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [in] */ BOOL cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, get_ResultFilePath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResultFilePath )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [retval][out] */ LPWSTR *resultFilePath);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, put_ResultFilePath)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ResultFilePath )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [in] */ LPCWSTR resultFilePath);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [retval][out] */ BOOL *handled);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [in] */ BOOL handled);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2DownloadStartingEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2DownloadStartingEventArgsVtbl;

    interface ICoreWebView2DownloadStartingEventArgs
    {
        CONST_VTBL struct ICoreWebView2DownloadStartingEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DownloadStartingEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2DownloadStartingEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2DownloadStartingEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2DownloadStartingEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2DownloadStartingEventHandler = {0xefedc989,0xc396,0x41ca,{0x83,0xf7,0x07,0xf8,0x45,0xa5,0x57,0x24}};

    typedef struct ICoreWebView2DownloadStartingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2DownloadStartingEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2DownloadStartingEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2DownloadStartingEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2DownloadStartingEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2DownloadStartingEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2DownloadStartingEventArgs *args);

        END_INTERFACE
    } ICoreWebView2DownloadStartingEventHandlerVtbl;

    interface ICoreWebView2DownloadStartingEventHandler
    {
        CONST_VTBL struct ICoreWebView2DownloadStartingEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2DownloadStartingEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment_INTERFACE_DEFINED__
#define __ICoreWebView2Environment_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment = {0xb96d755e,0x0319,0x4e92,{0xa2,0x96,0x23,0x43,0x6f,0x46,0xa1,0xfc}};

    typedef struct ICoreWebView2EnvironmentVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2EnvironmentVtbl;

    interface ICoreWebView2Environment
    {
        CONST_VTBL struct ICoreWebView2EnvironmentVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment2_INTERFACE_DEFINED__
#define __ICoreWebView2Environment2_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment2 = {0x41F3632B,0x5EF4,0x404F,{0xAD,0x82,0x2D,0x60,0x6C,0x5A,0x9A,0x21}};

    typedef struct ICoreWebView2Environment2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment2 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment2 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment2 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment2 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment2 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        END_INTERFACE
    } ICoreWebView2Environment2Vtbl;

    interface ICoreWebView2Environment2
    {
        CONST_VTBL struct ICoreWebView2Environment2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment3_INTERFACE_DEFINED__
#define __ICoreWebView2Environment3_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment3 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment3 = {0x80a22ae3,0xbe7c,0x4ce2,{0xaf,0xe1,0x5a,0x50,0x05,0x6c,0xde,0xeb}};

    typedef struct ICoreWebView2Environment3Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment3 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment3 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment3 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment3 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment3 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment3 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment3 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment3 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        END_INTERFACE
    } ICoreWebView2Environment3Vtbl;

    interface ICoreWebView2Environment3
    {
        CONST_VTBL struct ICoreWebView2Environment3Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment3_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment4_INTERFACE_DEFINED__
#define __ICoreWebView2Environment4_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment4 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment4 = {0x20944379,0x6dcf,0x41d6,{0xa0,0xa0,0xab,0xc0,0xfc,0x50,0xde,0x0d}};

    typedef struct ICoreWebView2Environment4Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment4 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment4 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment4 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment4 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment4 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment4 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment4 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment4 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment4 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment4 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        END_INTERFACE
    } ICoreWebView2Environment4Vtbl;

    interface ICoreWebView2Environment4
    {
        CONST_VTBL struct ICoreWebView2Environment4Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment4_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment5_INTERFACE_DEFINED__
#define __ICoreWebView2Environment5_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment5 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment5 = {0x319e423d,0xe0d7,0x4b8d,{0x92,0x54,0xae,0x94,0x75,0xde,0x9b,0x17}};

    typedef struct ICoreWebView2Environment5Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment5 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment5 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment5 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment5 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment5 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment5 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment5 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment5 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment5 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment5 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment5 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment5 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2Environment5Vtbl;

    interface ICoreWebView2Environment5
    {
        CONST_VTBL struct ICoreWebView2Environment5Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment5_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment6_INTERFACE_DEFINED__
#define __ICoreWebView2Environment6_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment6 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment6 = {0xe59ee362,0xacbd,0x4857,{0x9a,0x8e,0xd3,0x64,0x4d,0x94,0x59,0xa9}};

    typedef struct ICoreWebView2Environment6Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment6 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment6 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment6 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment6 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment6 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment6 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment6 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment6 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment6 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment6 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment6 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment6, CreatePrintSettings)
        HRESULT ( STDMETHODCALLTYPE *CreatePrintSettings )(
            ICoreWebView2Environment6 * This,
            /* [retval][out] */ ICoreWebView2PrintSettings **printSettings);

        END_INTERFACE
    } ICoreWebView2Environment6Vtbl;

    interface ICoreWebView2Environment6
    {
        CONST_VTBL struct ICoreWebView2Environment6Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment6_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment7_INTERFACE_DEFINED__
#define __ICoreWebView2Environment7_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment7 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment7 = {0x43C22296,0x3BBD,0x43A4,{0x9C,0x00,0x5C,0x0D,0xF6,0xDD,0x29,0xA2}};

    typedef struct ICoreWebView2Environment7Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment7 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment7 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment7 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment7 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment7 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment7 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment7 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment7 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment7 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment7 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment7 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment6, CreatePrintSettings)
        HRESULT ( STDMETHODCALLTYPE *CreatePrintSettings )(
            ICoreWebView2Environment7 * This,
            /* [retval][out] */ ICoreWebView2PrintSettings **printSettings);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment7, get_UserDataFolder)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDataFolder )(
            ICoreWebView2Environment7 * This,
            /* [retval][out] */ LPWSTR *value);

        END_INTERFACE
    } ICoreWebView2Environment7Vtbl;

    interface ICoreWebView2Environment7
    {
        CONST_VTBL struct ICoreWebView2Environment7Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment7_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment8_INTERFACE_DEFINED__
#define __ICoreWebView2Environment8_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment8 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment8 = {0xD6EB91DD,0xC3D2,0x45E5,{0xBD,0x29,0x6D,0xC2,0xBC,0x4D,0xE9,0xCF}};

    typedef struct ICoreWebView2Environment8Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment8 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment8 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment8 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment8 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment8 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment8 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment8 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment8 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment8 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment8 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment8 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment8 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment6, CreatePrintSettings)
        HRESULT ( STDMETHODCALLTYPE *CreatePrintSettings )(
            ICoreWebView2Environment8 * This,
            /* [retval][out] */ ICoreWebView2PrintSettings **printSettings);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment7, get_UserDataFolder)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDataFolder )(
            ICoreWebView2Environment8 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, add_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessInfosChanged )(
            ICoreWebView2Environment8 * This,
            /* [in] */ ICoreWebView2ProcessInfosChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, remove_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessInfosChanged )(
            ICoreWebView2Environment8 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, GetProcessInfos)
        HRESULT ( STDMETHODCALLTYPE *GetProcessInfos )(
            ICoreWebView2Environment8 * This,
            /* [retval][out] */ ICoreWebView2ProcessInfoCollection **value);

        END_INTERFACE
    } ICoreWebView2Environment8Vtbl;

    interface ICoreWebView2Environment8
    {
        CONST_VTBL struct ICoreWebView2Environment8Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment8_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment9_INTERFACE_DEFINED__
#define __ICoreWebView2Environment9_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment9 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment9 = {0xf06f41bf,0x4b5a,0x49d8,{0xb9,0xf6,0xfa,0x16,0xcd,0x29,0xf2,0x74}};

    typedef struct ICoreWebView2Environment9Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment9 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment9 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment9 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment9 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment9 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment9 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment9 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment9 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment9 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment9 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment9 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment9 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment6, CreatePrintSettings)
        HRESULT ( STDMETHODCALLTYPE *CreatePrintSettings )(
            ICoreWebView2Environment9 * This,
            /* [retval][out] */ ICoreWebView2PrintSettings **printSettings);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment7, get_UserDataFolder)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDataFolder )(
            ICoreWebView2Environment9 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, add_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessInfosChanged )(
            ICoreWebView2Environment9 * This,
            /* [in] */ ICoreWebView2ProcessInfosChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, remove_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessInfosChanged )(
            ICoreWebView2Environment9 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, GetProcessInfos)
        HRESULT ( STDMETHODCALLTYPE *GetProcessInfos )(
            ICoreWebView2Environment9 * This,
            /* [retval][out] */ ICoreWebView2ProcessInfoCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment9, CreateContextMenuItem)
        HRESULT ( STDMETHODCALLTYPE *CreateContextMenuItem )(
            ICoreWebView2Environment9 * This,
            /* [in] */ LPCWSTR label,
            /* [in] */ IStream *iconStream,
            /* [in] */ COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND kind,
            /* [retval][out] */ ICoreWebView2ContextMenuItem **item);

        END_INTERFACE
    } ICoreWebView2Environment9Vtbl;

    interface ICoreWebView2Environment9
    {
        CONST_VTBL struct ICoreWebView2Environment9Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment9_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Environment10_INTERFACE_DEFINED__
#define __ICoreWebView2Environment10_INTERFACE_DEFINED__

/* interface ICoreWebView2Environment10 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Environment10 = {0xee0eb9df,0x6f12,0x46ce,{0xb5,0x3f,0x3f,0x47,0xb9,0xc9,0x28,0xe0}};

    typedef struct ICoreWebView2Environment10Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Environment10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Environment10 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Environment10 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateCoreWebView2Controller)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2Controller )(
            ICoreWebView2Environment10 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, CreateWebResourceResponse)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceResponse )(
            ICoreWebView2Environment10 * This,
            /* [in] */ IStream *content,
            /* [in] */ int statusCode,
            /* [in] */ LPCWSTR reasonPhrase,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, get_BrowserVersionString)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserVersionString )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ LPWSTR *versionInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, add_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *add_NewBrowserVersionAvailable )(
            ICoreWebView2Environment10 * This,
            /* [in] */ ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment, remove_NewBrowserVersionAvailable)
        HRESULT ( STDMETHODCALLTYPE *remove_NewBrowserVersionAvailable )(
            ICoreWebView2Environment10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment2, CreateWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *CreateWebResourceRequest )(
            ICoreWebView2Environment10 * This,
            /* [in] */ LPCWSTR uri,
            /* [in] */ LPCWSTR method,
            /* [in] */ IStream *postData,
            /* [in] */ LPCWSTR headers,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2CompositionController)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionController )(
            ICoreWebView2Environment10 * This,
            HWND parentWindow,
            ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment3, CreateCoreWebView2PointerInfo)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2PointerInfo )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ ICoreWebView2PointerInfo **pointerInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment4, GetAutomationProviderForWindow)
        HRESULT ( STDMETHODCALLTYPE *GetAutomationProviderForWindow )(
            ICoreWebView2Environment10 * This,
            /* [in] */ HWND hwnd,
            /* [retval][out] */ IUnknown **provider);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, add_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *add_BrowserProcessExited )(
            ICoreWebView2Environment10 * This,
            /* [in] */ ICoreWebView2BrowserProcessExitedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment5, remove_BrowserProcessExited)
        HRESULT ( STDMETHODCALLTYPE *remove_BrowserProcessExited )(
            ICoreWebView2Environment10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment6, CreatePrintSettings)
        HRESULT ( STDMETHODCALLTYPE *CreatePrintSettings )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ ICoreWebView2PrintSettings **printSettings);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment7, get_UserDataFolder)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDataFolder )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, add_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessInfosChanged )(
            ICoreWebView2Environment10 * This,
            /* [in] */ ICoreWebView2ProcessInfosChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, remove_ProcessInfosChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessInfosChanged )(
            ICoreWebView2Environment10 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment8, GetProcessInfos)
        HRESULT ( STDMETHODCALLTYPE *GetProcessInfos )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ ICoreWebView2ProcessInfoCollection **value);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment9, CreateContextMenuItem)
        HRESULT ( STDMETHODCALLTYPE *CreateContextMenuItem )(
            ICoreWebView2Environment10 * This,
            /* [in] */ LPCWSTR label,
            /* [in] */ IStream *iconStream,
            /* [in] */ COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND kind,
            /* [retval][out] */ ICoreWebView2ContextMenuItem **item);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment10, CreateCoreWebView2ControllerOptions)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2ControllerOptions )(
            ICoreWebView2Environment10 * This,
            /* [retval][out] */ ICoreWebView2ControllerOptions **options);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment10, CreateCoreWebView2ControllerWithOptions)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2ControllerWithOptions )(
            ICoreWebView2Environment10 * This,
            /* [in] */ HWND parentWindow,
            /* [in] */ ICoreWebView2ControllerOptions *options,
            /* [in] */ ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Environment10, CreateCoreWebView2CompositionControllerWithOptions)
        HRESULT ( STDMETHODCALLTYPE *CreateCoreWebView2CompositionControllerWithOptions )(
            ICoreWebView2Environment10 * This,
            /* [in] */ HWND parentWindow,
            /* [in] */ ICoreWebView2ControllerOptions *options,
            /* [in] */ ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler *handler);

        END_INTERFACE
    } ICoreWebView2Environment10Vtbl;

    interface ICoreWebView2Environment10
    {
        CONST_VTBL struct ICoreWebView2Environment10Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Environment10_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__
#define __ICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__

/* interface ICoreWebView2EnvironmentOptions */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2EnvironmentOptions = {0x2fde08a8,0x1e9a,0x4766,{0x8c,0x05,0x95,0xa9,0xce,0xb9,0xd1,0xc5}};

    typedef struct ICoreWebView2EnvironmentOptionsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2EnvironmentOptions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2EnvironmentOptions * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2EnvironmentOptions * This);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, get_AdditionalBrowserArguments)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalBrowserArguments )(
            ICoreWebView2EnvironmentOptions * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, put_AdditionalBrowserArguments)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalBrowserArguments )(
            ICoreWebView2EnvironmentOptions * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, get_Language)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )(
            ICoreWebView2EnvironmentOptions * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, put_Language)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Language )(
            ICoreWebView2EnvironmentOptions * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, get_TargetCompatibleBrowserVersion)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetCompatibleBrowserVersion )(
            ICoreWebView2EnvironmentOptions * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, put_TargetCompatibleBrowserVersion)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetCompatibleBrowserVersion )(
            ICoreWebView2EnvironmentOptions * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, get_AllowSingleSignOnUsingOSPrimaryAccount)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowSingleSignOnUsingOSPrimaryAccount )(
            ICoreWebView2EnvironmentOptions * This,
            /* [retval][out] */ BOOL *allow);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions, put_AllowSingleSignOnUsingOSPrimaryAccount)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowSingleSignOnUsingOSPrimaryAccount )(
            ICoreWebView2EnvironmentOptions * This,
            /* [in] */ BOOL allow);

        END_INTERFACE
    } ICoreWebView2EnvironmentOptionsVtbl;

    interface ICoreWebView2EnvironmentOptions
    {
        CONST_VTBL struct ICoreWebView2EnvironmentOptionsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2EnvironmentOptions_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__
#define __ICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__

/* interface ICoreWebView2EnvironmentOptions2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2EnvironmentOptions2 = {0xFF85C98A,0x1BA7,0x4A6B,{0x90,0xC8,0x2B,0x75,0x2C,0x89,0xE9,0xE2}};

    typedef struct ICoreWebView2EnvironmentOptions2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2EnvironmentOptions2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2EnvironmentOptions2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2EnvironmentOptions2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions2, get_ExclusiveUserDataFolderAccess)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExclusiveUserDataFolderAccess )(
            ICoreWebView2EnvironmentOptions2 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2EnvironmentOptions2, put_ExclusiveUserDataFolderAccess)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExclusiveUserDataFolderAccess )(
            ICoreWebView2EnvironmentOptions2 * This,
            /* [in] */ BOOL value);

        END_INTERFACE
    } ICoreWebView2EnvironmentOptions2Vtbl;

    interface ICoreWebView2EnvironmentOptions2
    {
        CONST_VTBL struct ICoreWebView2EnvironmentOptions2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2EnvironmentOptions2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2EstimatedEndTimeChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2EstimatedEndTimeChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2EstimatedEndTimeChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2EstimatedEndTimeChangedEventHandler = {0x28f0d425,0x93fe,0x4e63,{0x9f,0x8d,0x2a,0xee,0xc6,0xd3,0xba,0x1e}};

    typedef struct ICoreWebView2EstimatedEndTimeChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2EstimatedEndTimeChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2EstimatedEndTimeChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2EstimatedEndTimeChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2EstimatedEndTimeChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2EstimatedEndTimeChangedEventHandler * This,
            /* [in] */ ICoreWebView2DownloadOperation *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2EstimatedEndTimeChangedEventHandlerVtbl;

    interface ICoreWebView2EstimatedEndTimeChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2EstimatedEndTimeChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2EstimatedEndTimeChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ExecuteScriptCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ExecuteScriptCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ExecuteScriptCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ExecuteScriptCompletedHandler = {0x49511172,0xcc67,0x4bca,{0x99,0x23,0x13,0x71,0x12,0xf4,0xc4,0xcc}};

    typedef struct ICoreWebView2ExecuteScriptCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ExecuteScriptCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ExecuteScriptCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ExecuteScriptCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ExecuteScriptCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ExecuteScriptCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            /* [in] */ LPCWSTR resultObjectAsJson);

        END_INTERFACE
    } ICoreWebView2ExecuteScriptCompletedHandlerVtbl;

    interface ICoreWebView2ExecuteScriptCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2ExecuteScriptCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ExecuteScriptCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Frame_INTERFACE_DEFINED__
#define __ICoreWebView2Frame_INTERFACE_DEFINED__

/* interface ICoreWebView2Frame */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Frame = {0xf1131a5e,0x9ba9,0x11eb,{0xa8,0xb3,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2FrameVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Frame * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Frame * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Frame * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2Frame * This,
            /* [retval][out] */ LPWSTR *name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *add_NameChanged )(
            ICoreWebView2Frame * This,
            /* [in] */ ICoreWebView2FrameNameChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_NameChanged )(
            ICoreWebView2Frame * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, AddHostObjectToScriptWithOrigins)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScriptWithOrigins )(
            ICoreWebView2Frame * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object,
            /* [in] */ UINT32 originsCount,
            /* [size_is][in] */ LPCWSTR *origins);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2Frame * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *add_Destroyed )(
            ICoreWebView2Frame * This,
            /* [in] */ ICoreWebView2FrameDestroyedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *remove_Destroyed )(
            ICoreWebView2Frame * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, IsDestroyed)
        HRESULT ( STDMETHODCALLTYPE *IsDestroyed )(
            ICoreWebView2Frame * This,
            /* [retval][out] */ BOOL *destroyed);

        END_INTERFACE
    } ICoreWebView2FrameVtbl;

    interface ICoreWebView2Frame
    {
        CONST_VTBL struct ICoreWebView2FrameVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Frame_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Frame2_INTERFACE_DEFINED__
#define __ICoreWebView2Frame2_INTERFACE_DEFINED__

/* interface ICoreWebView2Frame2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Frame2 = {0x7a6a5834,0xd185,0x4dbf,{0xb6,0x3f,0x4a,0x9b,0xc4,0x31,0x07,0xd4}};

    typedef struct ICoreWebView2Frame2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Frame2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Frame2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Frame2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2Frame2 * This,
            /* [retval][out] */ LPWSTR *name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *add_NameChanged )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameNameChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_NameChanged )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, AddHostObjectToScriptWithOrigins)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScriptWithOrigins )(
            ICoreWebView2Frame2 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object,
            /* [in] */ UINT32 originsCount,
            /* [size_is][in] */ LPCWSTR *origins);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2Frame2 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *add_Destroyed )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameDestroyedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *remove_Destroyed )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, IsDestroyed)
        HRESULT ( STDMETHODCALLTYPE *IsDestroyed )(
            ICoreWebView2Frame2 * This,
            /* [retval][out] */ BOOL *destroyed);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameNavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameNavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameDOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2Frame2 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2Frame2 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2Frame2 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2Frame2 * This,
            /* [in] */ ICoreWebView2FrameWebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2Frame2 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2Frame2Vtbl;

    interface ICoreWebView2Frame2
    {
        CONST_VTBL struct ICoreWebView2Frame2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Frame2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Frame3_INTERFACE_DEFINED__
#define __ICoreWebView2Frame3_INTERFACE_DEFINED__

/* interface ICoreWebView2Frame3 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Frame3 = {0xb50d82cc,0xcc28,0x481d,{0x96,0x14,0xcb,0x04,0x88,0x95,0xe6,0xa0}};

    typedef struct ICoreWebView2Frame3Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Frame3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Frame3 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Frame3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2Frame3 * This,
            /* [retval][out] */ LPWSTR *name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *add_NameChanged )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameNameChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_NameChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_NameChanged )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, AddHostObjectToScriptWithOrigins)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScriptWithOrigins )(
            ICoreWebView2Frame3 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object,
            /* [in] */ UINT32 originsCount,
            /* [size_is][in] */ LPCWSTR *origins);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2Frame3 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, add_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *add_Destroyed )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameDestroyedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, remove_Destroyed)
        HRESULT ( STDMETHODCALLTYPE *remove_Destroyed )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame, IsDestroyed)
        HRESULT ( STDMETHODCALLTYPE *IsDestroyed )(
            ICoreWebView2Frame3 * This,
            /* [retval][out] */ BOOL *destroyed);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameNavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameNavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameDOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2Frame3 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2Frame3 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2Frame3 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FrameWebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame3, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2Frame3 * This,
            /* [in] */ ICoreWebView2FramePermissionRequestedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2Frame3, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2Frame3 * This,
            /* [in] */ EventRegistrationToken token);

        END_INTERFACE
    } ICoreWebView2Frame3Vtbl;

    interface ICoreWebView2Frame3
    {
        CONST_VTBL struct ICoreWebView2Frame3Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Frame3_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameContentLoadingEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameContentLoadingEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameContentLoadingEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameContentLoadingEventHandler = {0x0d6156f2,0xd332,0x49a7,{0x9e,0x03,0x7d,0x8f,0x2f,0xee,0xee,0x54}};

    typedef struct ICoreWebView2FrameContentLoadingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameContentLoadingEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameContentLoadingEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameContentLoadingEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameContentLoadingEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameContentLoadingEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2ContentLoadingEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameContentLoadingEventHandlerVtbl;

    interface ICoreWebView2FrameContentLoadingEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameContentLoadingEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameContentLoadingEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameCreatedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameCreatedEventArgs = {0x4d6e7b5e,0x9baa,0x11eb,{0xa8,0xb3,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2FrameCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameCreatedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameCreatedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameCreatedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameCreatedEventArgs, get_Frame)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Frame )(
            ICoreWebView2FrameCreatedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Frame **frame);

        END_INTERFACE
    } ICoreWebView2FrameCreatedEventArgsVtbl;

    interface ICoreWebView2FrameCreatedEventArgs
    {
        CONST_VTBL struct ICoreWebView2FrameCreatedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameCreatedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameCreatedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameCreatedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameCreatedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameCreatedEventHandler = {0x38059770,0x9baa,0x11eb,{0xa8,0xb3,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2FrameCreatedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameCreatedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameCreatedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameCreatedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameCreatedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameCreatedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2FrameCreatedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameCreatedEventHandlerVtbl;

    interface ICoreWebView2FrameCreatedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameCreatedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameCreatedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameDestroyedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameDestroyedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameDestroyedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameDestroyedEventHandler = {0x59dd7b4c,0x9baa,0x11eb,{0xa8,0xb3,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2FrameDestroyedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameDestroyedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameDestroyedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameDestroyedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameDestroyedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameDestroyedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2FrameDestroyedEventHandlerVtbl;

    interface ICoreWebView2FrameDestroyedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameDestroyedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameDestroyedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameDOMContentLoadedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameDOMContentLoadedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameDOMContentLoadedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameDOMContentLoadedEventHandler = {0x38d9520d,0x340f,0x4d1e,{0xa7,0x75,0x43,0xfc,0xe9,0x75,0x36,0x83}};

    typedef struct ICoreWebView2FrameDOMContentLoadedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameDOMContentLoadedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameDOMContentLoadedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameDOMContentLoadedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameDOMContentLoadedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameDOMContentLoadedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2DOMContentLoadedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameDOMContentLoadedEventHandlerVtbl;

    interface ICoreWebView2FrameDOMContentLoadedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameDOMContentLoadedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameDOMContentLoadedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameNameChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameNameChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameNameChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameNameChangedEventHandler = {0x435c7dc8,0x9baa,0x11eb,{0xa8,0xb3,0x02,0x42,0xac,0x13,0x00,0x03}};

    typedef struct ICoreWebView2FrameNameChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameNameChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameNameChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameNameChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameNameChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameNameChangedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2FrameNameChangedEventHandlerVtbl;

    interface ICoreWebView2FrameNameChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameNameChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameNameChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameNavigationCompletedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameNavigationCompletedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameNavigationCompletedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameNavigationCompletedEventHandler = {0x609302ad,0x0e36,0x4f9a,{0xa2,0x10,0x6a,0x45,0x27,0x28,0x42,0xa9}};

    typedef struct ICoreWebView2FrameNavigationCompletedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameNavigationCompletedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameNavigationCompletedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameNavigationCompletedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameNavigationCompletedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameNavigationCompletedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2NavigationCompletedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameNavigationCompletedEventHandlerVtbl;

    interface ICoreWebView2FrameNavigationCompletedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameNavigationCompletedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameNavigationCompletedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameNavigationStartingEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameNavigationStartingEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameNavigationStartingEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameNavigationStartingEventHandler = {0xe79908bf,0x2d5d,0x4968,{0x83,0xdb,0x26,0x3f,0xea,0x2c,0x1d,0xa3}};

    typedef struct ICoreWebView2FrameNavigationStartingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameNavigationStartingEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameNavigationStartingEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameNavigationStartingEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameNavigationStartingEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameNavigationStartingEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2NavigationStartingEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameNavigationStartingEventHandlerVtbl;

    interface ICoreWebView2FrameNavigationStartingEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameNavigationStartingEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameNavigationStartingEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FramePermissionRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FramePermissionRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FramePermissionRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FramePermissionRequestedEventHandler = {0x845d0edd,0x8bd8,0x429b,{0x99,0x15,0x48,0x21,0x78,0x9f,0x23,0xe9}};

    typedef struct ICoreWebView2FramePermissionRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FramePermissionRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FramePermissionRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FramePermissionRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FramePermissionRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FramePermissionRequestedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2PermissionRequestedEventArgs2 *args);

        END_INTERFACE
    } ICoreWebView2FramePermissionRequestedEventHandlerVtbl;

    interface ICoreWebView2FramePermissionRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FramePermissionRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FramePermissionRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameWebMessageReceivedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FrameWebMessageReceivedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameWebMessageReceivedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameWebMessageReceivedEventHandler = {0xe371e005,0x6d1d,0x4517,{0x93,0x4b,0xa8,0xf1,0x62,0x9c,0x62,0xa5}};

    typedef struct ICoreWebView2FrameWebMessageReceivedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameWebMessageReceivedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameWebMessageReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameWebMessageReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameWebMessageReceivedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FrameWebMessageReceivedEventHandler * This,
            /* [in] */ ICoreWebView2Frame *sender,
            /* [in] */ ICoreWebView2WebMessageReceivedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2FrameWebMessageReceivedEventHandlerVtbl;

    interface ICoreWebView2FrameWebMessageReceivedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FrameWebMessageReceivedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameWebMessageReceivedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameInfo_INTERFACE_DEFINED__
#define __ICoreWebView2FrameInfo_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameInfo */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameInfo = {0xda86b8a1,0xbdf3,0x4f11,{0x99,0x55,0x52,0x8c,0xef,0xa5,0x97,0x27}};

    typedef struct ICoreWebView2FrameInfoVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameInfo * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameInfo * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfo, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2FrameInfo * This,
            /* [retval][out] */ LPWSTR *name);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfo, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2FrameInfo * This,
            /* [retval][out] */ LPWSTR *source);

        END_INTERFACE
    } ICoreWebView2FrameInfoVtbl;

    interface ICoreWebView2FrameInfo
    {
        CONST_VTBL struct ICoreWebView2FrameInfoVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameInfo_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameInfoCollection_INTERFACE_DEFINED__
#define __ICoreWebView2FrameInfoCollection_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameInfoCollection */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameInfoCollection = {0x8f834154,0xd38e,0x4d90,{0xaf,0xfb,0x68,0x00,0xa7,0x27,0x28,0x39}};

    typedef struct ICoreWebView2FrameInfoCollectionVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameInfoCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameInfoCollection * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameInfoCollection * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfoCollection, GetIterator)
        HRESULT ( STDMETHODCALLTYPE *GetIterator )(
            ICoreWebView2FrameInfoCollection * This,
            /* [retval][out] */ ICoreWebView2FrameInfoCollectionIterator **iterator);

        END_INTERFACE
    } ICoreWebView2FrameInfoCollectionVtbl;

    interface ICoreWebView2FrameInfoCollection
    {
        CONST_VTBL struct ICoreWebView2FrameInfoCollectionVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameInfoCollection_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FrameInfoCollectionIterator_INTERFACE_DEFINED__
#define __ICoreWebView2FrameInfoCollectionIterator_INTERFACE_DEFINED__

/* interface ICoreWebView2FrameInfoCollectionIterator */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FrameInfoCollectionIterator = {0x1bf89e2d,0x1b2b,0x4629,{0xb2,0x8f,0x05,0x09,0x9b,0x41,0xbb,0x03}};

    typedef struct ICoreWebView2FrameInfoCollectionIteratorVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FrameInfoCollectionIterator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FrameInfoCollectionIterator * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FrameInfoCollectionIterator * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfoCollectionIterator, get_HasCurrent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(
            ICoreWebView2FrameInfoCollectionIterator * This,
            /* [retval][out] */ BOOL *hasCurrent);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfoCollectionIterator, GetCurrent)
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )(
            ICoreWebView2FrameInfoCollectionIterator * This,
            /* [retval][out] */ ICoreWebView2FrameInfo **frameInfo);

        DECLSPEC_XFGVIRT(ICoreWebView2FrameInfoCollectionIterator, MoveNext)
        HRESULT ( STDMETHODCALLTYPE *MoveNext )(
            ICoreWebView2FrameInfoCollectionIterator * This,
            /* [retval][out] */ BOOL *hasNext);

        END_INTERFACE
    } ICoreWebView2FrameInfoCollectionIteratorVtbl;

    interface ICoreWebView2FrameInfoCollectionIterator
    {
        CONST_VTBL struct ICoreWebView2FrameInfoCollectionIteratorVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FrameInfoCollectionIterator_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2FocusChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2FocusChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2FocusChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2FocusChangedEventHandler = {0x05ea24bd,0x6452,0x4926,{0x90,0x14,0x4b,0x82,0xb4,0x98,0x13,0x5d}};

    typedef struct ICoreWebView2FocusChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2FocusChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2FocusChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2FocusChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2FocusChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2FocusChangedEventHandler * This,
            /* [in] */ ICoreWebView2Controller *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2FocusChangedEventHandlerVtbl;

    interface ICoreWebView2FocusChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2FocusChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2FocusChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2GetCookiesCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2GetCookiesCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2GetCookiesCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2GetCookiesCompletedHandler = {0x5A4F5069,0x5C15,0x47C3,{0x86,0x46,0xF4,0xDE,0x1C,0x11,0x66,0x70}};

    typedef struct ICoreWebView2GetCookiesCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2GetCookiesCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2GetCookiesCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2GetCookiesCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2GetCookiesCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2GetCookiesCompletedHandler * This,
            HRESULT result,
            ICoreWebView2CookieList *cookieList);

        END_INTERFACE
    } ICoreWebView2GetCookiesCompletedHandlerVtbl;

    interface ICoreWebView2GetCookiesCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2GetCookiesCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2GetCookiesCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2HistoryChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2HistoryChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2HistoryChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2HistoryChangedEventHandler = {0xc79a420c,0xefd9,0x4058,{0x92,0x95,0x3e,0x8b,0x4b,0xca,0xb6,0x45}};

    typedef struct ICoreWebView2HistoryChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2HistoryChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2HistoryChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2HistoryChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2HistoryChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2HistoryChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2HistoryChangedEventHandlerVtbl;

    interface ICoreWebView2HistoryChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2HistoryChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2HistoryChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__
#define __ICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__

/* interface ICoreWebView2HttpHeadersCollectionIterator */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2HttpHeadersCollectionIterator = {0x0702fc30,0xf43b,0x47bb,{0xab,0x52,0xa4,0x2c,0xb5,0x52,0xad,0x9f}};

    typedef struct ICoreWebView2HttpHeadersCollectionIteratorVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2HttpHeadersCollectionIterator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2HttpHeadersCollectionIterator * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2HttpHeadersCollectionIterator * This);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpHeadersCollectionIterator, GetCurrentHeader)
        HRESULT ( STDMETHODCALLTYPE *GetCurrentHeader )(
            ICoreWebView2HttpHeadersCollectionIterator * This,
            /* [out] */ LPWSTR *name,
            /* [out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpHeadersCollectionIterator, get_HasCurrentHeader)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrentHeader )(
            ICoreWebView2HttpHeadersCollectionIterator * This,
            /* [retval][out] */ BOOL *hasCurrent);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpHeadersCollectionIterator, MoveNext)
        HRESULT ( STDMETHODCALLTYPE *MoveNext )(
            ICoreWebView2HttpHeadersCollectionIterator * This,
            /* [retval][out] */ BOOL *hasNext);

        END_INTERFACE
    } ICoreWebView2HttpHeadersCollectionIteratorVtbl;

    interface ICoreWebView2HttpHeadersCollectionIterator
    {
        CONST_VTBL struct ICoreWebView2HttpHeadersCollectionIteratorVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2HttpHeadersCollectionIterator_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__
#define __ICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__

/* interface ICoreWebView2HttpRequestHeaders */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2HttpRequestHeaders = {0xe86cac0e,0x5523,0x465c,{0xb5,0x36,0x8f,0xb9,0xfc,0x8c,0x8c,0x60}};

    typedef struct ICoreWebView2HttpRequestHeadersVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2HttpRequestHeaders * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2HttpRequestHeaders * This);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, GetHeader)
        HRESULT ( STDMETHODCALLTYPE *GetHeader )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, GetHeaders)
        HRESULT ( STDMETHODCALLTYPE *GetHeaders )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ ICoreWebView2HttpHeadersCollectionIterator **iterator);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, Contains)
        HRESULT ( STDMETHODCALLTYPE *Contains )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ BOOL *contains);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, SetHeader)
        HRESULT ( STDMETHODCALLTYPE *SetHeader )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, RemoveHeader)
        HRESULT ( STDMETHODCALLTYPE *RemoveHeader )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpRequestHeaders, GetIterator)
        HRESULT ( STDMETHODCALLTYPE *GetIterator )(
            ICoreWebView2HttpRequestHeaders * This,
            /* [retval][out] */ ICoreWebView2HttpHeadersCollectionIterator **iterator);

        END_INTERFACE
    } ICoreWebView2HttpRequestHeadersVtbl;

    interface ICoreWebView2HttpRequestHeaders
    {
        CONST_VTBL struct ICoreWebView2HttpRequestHeadersVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2HttpRequestHeaders_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__
#define __ICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__

/* interface ICoreWebView2HttpResponseHeaders */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2HttpResponseHeaders = {0x03c5ff5a,0x9b45,0x4a88,{0x88,0x1c,0x89,0xa9,0xf3,0x28,0x61,0x9c}};

    typedef struct ICoreWebView2HttpResponseHeadersVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2HttpResponseHeaders * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2HttpResponseHeaders * This);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpResponseHeaders, AppendHeader)
        HRESULT ( STDMETHODCALLTYPE *AppendHeader )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpResponseHeaders, Contains)
        HRESULT ( STDMETHODCALLTYPE *Contains )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ BOOL *contains);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpResponseHeaders, GetHeader)
        HRESULT ( STDMETHODCALLTYPE *GetHeader )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpResponseHeaders, GetHeaders)
        HRESULT ( STDMETHODCALLTYPE *GetHeaders )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [in] */ LPCWSTR name,
            /* [retval][out] */ ICoreWebView2HttpHeadersCollectionIterator **iterator);

        DECLSPEC_XFGVIRT(ICoreWebView2HttpResponseHeaders, GetIterator)
        HRESULT ( STDMETHODCALLTYPE *GetIterator )(
            ICoreWebView2HttpResponseHeaders * This,
            /* [retval][out] */ ICoreWebView2HttpHeadersCollectionIterator **iterator);

        END_INTERFACE
    } ICoreWebView2HttpResponseHeadersVtbl;

    interface ICoreWebView2HttpResponseHeaders
    {
        CONST_VTBL struct ICoreWebView2HttpResponseHeadersVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2HttpResponseHeaders_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler = {0x3117da26,0xae13,0x438d,{0xbd,0x46,0xed,0xbe,0xb2,0xc4,0xce,0x81}};

    typedef struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandlerVtbl;

    interface ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2MoveFocusRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2MoveFocusRequestedEventArgs = {0x2d6aa13b,0x3839,0x4a15,{0x92,0xfc,0xd8,0x8b,0x3c,0x0d,0x9c,0x9d}};

    typedef struct ICoreWebView2MoveFocusRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2MoveFocusRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2MoveFocusRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2MoveFocusRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2MoveFocusRequestedEventArgs, get_Reason)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Reason )(
            ICoreWebView2MoveFocusRequestedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_MOVE_FOCUS_REASON *reason);

        DECLSPEC_XFGVIRT(ICoreWebView2MoveFocusRequestedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2MoveFocusRequestedEventArgs * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2MoveFocusRequestedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2MoveFocusRequestedEventArgs * This,
            /* [in] */ BOOL value);

        END_INTERFACE
    } ICoreWebView2MoveFocusRequestedEventArgsVtbl;

    interface ICoreWebView2MoveFocusRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2MoveFocusRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2MoveFocusRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2MoveFocusRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2MoveFocusRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2MoveFocusRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2MoveFocusRequestedEventHandler = {0x69035451,0x6dc7,0x4cb8,{0x9b,0xce,0xb2,0xbd,0x70,0xad,0x28,0x9f}};

    typedef struct ICoreWebView2MoveFocusRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2MoveFocusRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2MoveFocusRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2MoveFocusRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2MoveFocusRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2MoveFocusRequestedEventHandler * This,
            /* [in] */ ICoreWebView2Controller *sender,
            /* [in] */ ICoreWebView2MoveFocusRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2MoveFocusRequestedEventHandlerVtbl;

    interface ICoreWebView2MoveFocusRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2MoveFocusRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2MoveFocusRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationCompletedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationCompletedEventArgs = {0x30d68b7d,0x20d9,0x4752,{0xa9,0xca,0xec,0x84,0x48,0xfb,0xb5,0xc1}};

    typedef struct ICoreWebView2NavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationCompletedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationCompletedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationCompletedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_IsSuccess)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuccess )(
            ICoreWebView2NavigationCompletedEventArgs * This,
            /* [retval][out] */ BOOL *isSuccess);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_WebErrorStatus)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )(
            ICoreWebView2NavigationCompletedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_WEB_ERROR_STATUS *webErrorStatus);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2NavigationCompletedEventArgs * This,
            /* [retval][out] */ UINT64 *navigationId);

        END_INTERFACE
    } ICoreWebView2NavigationCompletedEventArgsVtbl;

    interface ICoreWebView2NavigationCompletedEventArgs
    {
        CONST_VTBL struct ICoreWebView2NavigationCompletedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationCompletedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationCompletedEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationCompletedEventArgs2 = {0xFDF8B738,0xEE1E,0x4DB2,{0xA3,0x29,0x8D,0x7D,0x7B,0x74,0xD7,0x92}};

    typedef struct ICoreWebView2NavigationCompletedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationCompletedEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationCompletedEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationCompletedEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_IsSuccess)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuccess )(
            ICoreWebView2NavigationCompletedEventArgs2 * This,
            /* [retval][out] */ BOOL *isSuccess);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_WebErrorStatus)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )(
            ICoreWebView2NavigationCompletedEventArgs2 * This,
            /* [retval][out] */ COREWEBVIEW2_WEB_ERROR_STATUS *webErrorStatus);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2NavigationCompletedEventArgs2 * This,
            /* [retval][out] */ UINT64 *navigationId);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventArgs2, get_HttpStatusCode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HttpStatusCode )(
            ICoreWebView2NavigationCompletedEventArgs2 * This,
            /* [retval][out] */ int *http_status_code);

        END_INTERFACE
    } ICoreWebView2NavigationCompletedEventArgs2Vtbl;

    interface ICoreWebView2NavigationCompletedEventArgs2
    {
        CONST_VTBL struct ICoreWebView2NavigationCompletedEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationCompletedEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationCompletedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationCompletedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationCompletedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationCompletedEventHandler = {0xd33a35bf,0x1c49,0x4f98,{0x93,0xab,0x00,0x6e,0x05,0x33,0xfe,0x1c}};

    typedef struct ICoreWebView2NavigationCompletedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationCompletedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationCompletedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationCompletedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationCompletedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2NavigationCompletedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2NavigationCompletedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2NavigationCompletedEventHandlerVtbl;

    interface ICoreWebView2NavigationCompletedEventHandler
    {
        CONST_VTBL struct ICoreWebView2NavigationCompletedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationCompletedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationStartingEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationStartingEventArgs = {0x5b495469,0xe119,0x438a,{0x9b,0x18,0x76,0x04,0xf2,0x5f,0x2e,0x49}};

    typedef struct ICoreWebView2NavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationStartingEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationStartingEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_IsRedirected)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRedirected )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ BOOL *isRedirected);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_RequestHeaders)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestHeaders )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ ICoreWebView2HttpRequestHeaders **requestHeaders);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_Cancel)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ BOOL *cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, put_Cancel)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [in] */ BOOL cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2NavigationStartingEventArgs * This,
            /* [retval][out] */ UINT64 *navigationId);

        END_INTERFACE
    } ICoreWebView2NavigationStartingEventArgsVtbl;

    interface ICoreWebView2NavigationStartingEventArgs
    {
        CONST_VTBL struct ICoreWebView2NavigationStartingEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationStartingEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationStartingEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationStartingEventArgs2 = {0x9086BE93,0x91AA,0x472D,{0xA7,0xE0,0x57,0x9F,0x2B,0xA0,0x06,0xAD}};

    typedef struct ICoreWebView2NavigationStartingEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationStartingEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationStartingEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_IsRedirected)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRedirected )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ BOOL *isRedirected);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_RequestHeaders)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestHeaders )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2HttpRequestHeaders **requestHeaders);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_Cancel)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ BOOL *cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, put_Cancel)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [in] */ BOOL cancel);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs, get_NavigationId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationId )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ UINT64 *navigationId);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs2, get_AdditionalAllowedFrameAncestors)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalAllowedFrameAncestors )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventArgs2, put_AdditionalAllowedFrameAncestors)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalAllowedFrameAncestors )(
            ICoreWebView2NavigationStartingEventArgs2 * This,
            /* [in] */ LPCWSTR value);

        END_INTERFACE
    } ICoreWebView2NavigationStartingEventArgs2Vtbl;

    interface ICoreWebView2NavigationStartingEventArgs2
    {
        CONST_VTBL struct ICoreWebView2NavigationStartingEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationStartingEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NavigationStartingEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2NavigationStartingEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2NavigationStartingEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NavigationStartingEventHandler = {0x9adbe429,0xf36d,0x432b,{0x9d,0xdc,0xf8,0x88,0x1f,0xbd,0x76,0xe3}};

    typedef struct ICoreWebView2NavigationStartingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NavigationStartingEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NavigationStartingEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NavigationStartingEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NavigationStartingEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2NavigationStartingEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2NavigationStartingEventArgs *args);

        END_INTERFACE
    } ICoreWebView2NavigationStartingEventHandlerVtbl;

    interface ICoreWebView2NavigationStartingEventHandler
    {
        CONST_VTBL struct ICoreWebView2NavigationStartingEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NavigationStartingEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NewBrowserVersionAvailableEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2NewBrowserVersionAvailableEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2NewBrowserVersionAvailableEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NewBrowserVersionAvailableEventHandler = {0xf9a2976e,0xd34e,0x44fc,{0xad,0xee,0x81,0xb6,0xb5,0x7c,0xa9,0x14}};

    typedef struct ICoreWebView2NewBrowserVersionAvailableEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NewBrowserVersionAvailableEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NewBrowserVersionAvailableEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NewBrowserVersionAvailableEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NewBrowserVersionAvailableEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2NewBrowserVersionAvailableEventHandler * This,
            /* [in] */ ICoreWebView2Environment *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2NewBrowserVersionAvailableEventHandlerVtbl;

    interface ICoreWebView2NewBrowserVersionAvailableEventHandler
    {
        CONST_VTBL struct ICoreWebView2NewBrowserVersionAvailableEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NewBrowserVersionAvailableEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2NewWindowRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NewWindowRequestedEventArgs = {0x34acb11c,0xfc37,0x4418,{0x91,0x32,0xf9,0xc2,0x1d,0x1e,0xaf,0xb9}};

    typedef struct ICoreWebView2NewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NewWindowRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NewWindowRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, put_NewWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NewWindow )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [in] */ ICoreWebView2 *newWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_NewWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewWindow )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2 **newWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [in] */ BOOL handled);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ BOOL *handled);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_WindowFeatures)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowFeatures )(
            ICoreWebView2NewWindowRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2WindowFeatures **value);

        END_INTERFACE
    } ICoreWebView2NewWindowRequestedEventArgsVtbl;

    interface ICoreWebView2NewWindowRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2NewWindowRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NewWindowRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2NewWindowRequestedEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NewWindowRequestedEventArgs2 = {0xbbc7baed,0x74c6,0x4c92,{0xb6,0x3a,0x7f,0x5a,0xea,0xe0,0x3d,0xe3}};

    typedef struct ICoreWebView2NewWindowRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, put_NewWindow)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NewWindow )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [in] */ ICoreWebView2 *newWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_NewWindow)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewWindow )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2 **newWindow);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [in] */ BOOL handled);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ BOOL *handled);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs, get_WindowFeatures)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowFeatures )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2WindowFeatures **value);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventArgs2, get_Name)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )(
            ICoreWebView2NewWindowRequestedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *value);

        END_INTERFACE
    } ICoreWebView2NewWindowRequestedEventArgs2Vtbl;

    interface ICoreWebView2NewWindowRequestedEventArgs2
    {
        CONST_VTBL struct ICoreWebView2NewWindowRequestedEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NewWindowRequestedEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2NewWindowRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2NewWindowRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2NewWindowRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2NewWindowRequestedEventHandler = {0xd4c185fe,0xc81c,0x4989,{0x97,0xaf,0x2d,0x3f,0xa7,0xab,0x56,0x51}};

    typedef struct ICoreWebView2NewWindowRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2NewWindowRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2NewWindowRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2NewWindowRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2NewWindowRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2NewWindowRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2NewWindowRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2NewWindowRequestedEventHandlerVtbl;

    interface ICoreWebView2NewWindowRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2NewWindowRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2NewWindowRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2PermissionRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PermissionRequestedEventArgs = {0x973ae2ef,0xff18,0x4894,{0x8f,0xb2,0x3c,0x75,0x8f,0x04,0x68,0x10}};

    typedef struct ICoreWebView2PermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PermissionRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PermissionRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_PermissionKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionKind )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_PERMISSION_KIND *permissionKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_State)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_PERMISSION_STATE *state);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, put_State)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_State )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [in] */ COREWEBVIEW2_PERMISSION_STATE state);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2PermissionRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2PermissionRequestedEventArgsVtbl;

    interface ICoreWebView2PermissionRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2PermissionRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PermissionRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2PermissionRequestedEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PermissionRequestedEventArgs2 = {0x74d7127f,0x9de6,0x4200,{0x87,0x34,0x42,0xd6,0xfb,0x4f,0xf7,0x41}};

    typedef struct ICoreWebView2PermissionRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PermissionRequestedEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PermissionRequestedEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_PermissionKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionKind )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ COREWEBVIEW2_PERMISSION_KIND *permissionKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_IsUserInitiated)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserInitiated )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ BOOL *isUserInitiated);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, get_State)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ COREWEBVIEW2_PERMISSION_STATE *state);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, put_State)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_State )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [in] */ COREWEBVIEW2_PERMISSION_STATE state);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs2, get_Handled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [retval][out] */ BOOL *handled);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventArgs2, put_Handled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )(
            ICoreWebView2PermissionRequestedEventArgs2 * This,
            /* [in] */ BOOL handled);

        END_INTERFACE
    } ICoreWebView2PermissionRequestedEventArgs2Vtbl;

    interface ICoreWebView2PermissionRequestedEventArgs2
    {
        CONST_VTBL struct ICoreWebView2PermissionRequestedEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PermissionRequestedEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PermissionRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2PermissionRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2PermissionRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PermissionRequestedEventHandler = {0x15e1c6a3,0xc72a,0x4df3,{0x91,0xd7,0xd0,0x97,0xfb,0xec,0x6b,0xfd}};

    typedef struct ICoreWebView2PermissionRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PermissionRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PermissionRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PermissionRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PermissionRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2PermissionRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2PermissionRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2PermissionRequestedEventHandlerVtbl;

    interface ICoreWebView2PermissionRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2PermissionRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PermissionRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PointerInfo_INTERFACE_DEFINED__
#define __ICoreWebView2PointerInfo_INTERFACE_DEFINED__

/* interface ICoreWebView2PointerInfo */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PointerInfo = {0xe6995887,0xd10d,0x4f5d,{0x93,0x59,0x4c,0xe4,0x6e,0x4f,0x96,0xb9}};

    typedef struct ICoreWebView2PointerInfoVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PointerInfo * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PointerInfo * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PointerKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerKind )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ DWORD *pointerKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PointerKind)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PointerKind )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ DWORD pointerKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PointerId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerId )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *pointerId);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PointerId)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PointerId )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 pointerId);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_FrameId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameId )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *frameId);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_FrameId)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameId )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 frameId);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PointerFlags)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerFlags )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *pointerFlags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PointerFlags)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PointerFlags )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 pointerFlags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PointerDeviceRect)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerDeviceRect )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ RECT *pointerDeviceRect);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PointerDeviceRect)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PointerDeviceRect )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ RECT pointerDeviceRect);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_DisplayRect)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayRect )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ RECT *displayRect);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_DisplayRect)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayRect )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ RECT displayRect);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PixelLocation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PixelLocation )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ POINT *pixelLocation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PixelLocation)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PixelLocation )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ POINT pixelLocation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_HimetricLocation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HimetricLocation )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ POINT *himetricLocation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_HimetricLocation)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HimetricLocation )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ POINT himetricLocation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PixelLocationRaw)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PixelLocationRaw )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ POINT *pixelLocationRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PixelLocationRaw)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PixelLocationRaw )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ POINT pixelLocationRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_HimetricLocationRaw)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HimetricLocationRaw )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ POINT *himetricLocationRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_HimetricLocationRaw)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HimetricLocationRaw )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ POINT himetricLocationRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_Time)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Time )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ DWORD *time);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_Time)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Time )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ DWORD time);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_HistoryCount)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HistoryCount )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *historyCount);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_HistoryCount)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HistoryCount )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 historyCount);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_InputData)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputData )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ INT32 *inputData);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_InputData)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InputData )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ INT32 inputData);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_KeyStates)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyStates )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ DWORD *keyStates);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_KeyStates)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyStates )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ DWORD keyStates);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PerformanceCount)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PerformanceCount )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT64 *performanceCount);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PerformanceCount)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PerformanceCount )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT64 performanceCount);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_ButtonChangeKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ButtonChangeKind )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ INT32 *buttonChangeKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_ButtonChangeKind)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ButtonChangeKind )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ INT32 buttonChangeKind);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenFlags)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenFlags )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *penFLags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenFlags)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenFlags )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 penFLags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenMask)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenMask )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *penMask);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenMask)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenMask )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 penMask);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenPressure)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenPressure )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *penPressure);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenPressure)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenPressure )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 penPressure);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenRotation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenRotation )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *penRotation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenRotation)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenRotation )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 penRotation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenTiltX)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenTiltX )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ INT32 *penTiltX);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenTiltX)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenTiltX )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ INT32 penTiltX);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_PenTiltY)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenTiltY )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ INT32 *penTiltY);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_PenTiltY)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenTiltY )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ INT32 penTiltY);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchFlags)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchFlags )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *touchFlags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchFlags)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchFlags )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 touchFlags);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchMask)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchMask )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *touchMask);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchMask)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchMask )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 touchMask);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchContact)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchContact )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ RECT *touchContact);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchContact)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchContact )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ RECT touchContact);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchContactRaw)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchContactRaw )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ RECT *touchContactRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchContactRaw)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchContactRaw )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ RECT touchContactRaw);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchOrientation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchOrientation )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *touchOrientation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchOrientation)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchOrientation )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 touchOrientation);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, get_TouchPressure)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TouchPressure )(
            ICoreWebView2PointerInfo * This,
            /* [retval][out] */ UINT32 *touchPressure);

        DECLSPEC_XFGVIRT(ICoreWebView2PointerInfo, put_TouchPressure)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TouchPressure )(
            ICoreWebView2PointerInfo * This,
            /* [in] */ UINT32 touchPressure);

        END_INTERFACE
    } ICoreWebView2PointerInfoVtbl;

    interface ICoreWebView2PointerInfo
    {
        CONST_VTBL struct ICoreWebView2PointerInfoVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PointerInfo_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PrintSettings_INTERFACE_DEFINED__
#define __ICoreWebView2PrintSettings_INTERFACE_DEFINED__

/* interface ICoreWebView2PrintSettings */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PrintSettings = {0x377f3721,0xc74e,0x48ca,{0x8d,0xb1,0xdf,0x68,0xe5,0x1d,0x60,0xe2}};

    typedef struct ICoreWebView2PrintSettingsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PrintSettings * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PrintSettings * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_Orientation)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ COREWEBVIEW2_PRINT_ORIENTATION *orientation);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_Orientation)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ COREWEBVIEW2_PRINT_ORIENTATION orientation);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_ScaleFactor)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *scaleFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_ScaleFactor)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double scaleFactor);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_PageWidth)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PageWidth )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *pageWidth);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_PageWidth)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PageWidth )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double pageWidth);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_PageHeight)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PageHeight )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *pageHeight);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_PageHeight)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PageHeight )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double pageHeight);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_MarginTop)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MarginTop )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *marginTop);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_MarginTop)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MarginTop )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double marginTop);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_MarginBottom)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MarginBottom )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *marginBottom);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_MarginBottom)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MarginBottom )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double marginBottom);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_MarginLeft)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MarginLeft )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *marginLeft);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_MarginLeft)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MarginLeft )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double marginLeft);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_MarginRight)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MarginRight )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ double *marginRight);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_MarginRight)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MarginRight )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ double marginRight);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_ShouldPrintBackgrounds)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldPrintBackgrounds )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ BOOL *shouldPrintBackgrounds);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_ShouldPrintBackgrounds)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldPrintBackgrounds )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ BOOL shouldPrintBackgrounds);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_ShouldPrintSelectionOnly)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldPrintSelectionOnly )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ BOOL *shouldPrintSelectionOnly);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_ShouldPrintSelectionOnly)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldPrintSelectionOnly )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ BOOL shouldPrintSelectionOnly);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_ShouldPrintHeaderAndFooter)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldPrintHeaderAndFooter )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ BOOL *shouldPrintHeaderAndFooter);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_ShouldPrintHeaderAndFooter)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldPrintHeaderAndFooter )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ BOOL shouldPrintHeaderAndFooter);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_HeaderTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTitle )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ LPWSTR *headerTitle);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_HeaderTitle)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTitle )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ LPCWSTR headerTitle);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, get_FooterUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterUri )(
            ICoreWebView2PrintSettings * This,
            /* [retval][out] */ LPWSTR *footerUri);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintSettings, put_FooterUri)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FooterUri )(
            ICoreWebView2PrintSettings * This,
            /* [in] */ LPCWSTR footerUri);

        END_INTERFACE
    } ICoreWebView2PrintSettingsVtbl;

    interface ICoreWebView2PrintSettings
    {
        CONST_VTBL struct ICoreWebView2PrintSettingsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PrintSettings_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2PrintToPdfCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2PrintToPdfCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2PrintToPdfCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2PrintToPdfCompletedHandler = {0xccf1ef04,0xfd8e,0x4d5f,{0xb2,0xde,0x09,0x83,0xe4,0x1b,0x8c,0x36}};

    typedef struct ICoreWebView2PrintToPdfCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2PrintToPdfCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2PrintToPdfCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2PrintToPdfCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2PrintToPdfCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2PrintToPdfCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            BOOL isSuccessful);

        END_INTERFACE
    } ICoreWebView2PrintToPdfCompletedHandlerVtbl;

    interface ICoreWebView2PrintToPdfCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2PrintToPdfCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2PrintToPdfCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessFailedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessFailedEventArgs = {0x8155a9a4,0x1474,0x4a86,{0x8c,0xae,0x15,0x1b,0x0f,0xa6,0xb8,0xca}};

    typedef struct ICoreWebView2ProcessFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessFailedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessFailedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessFailedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs, get_ProcessFailedKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessFailedKind )(
            ICoreWebView2ProcessFailedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_PROCESS_FAILED_KIND *processFailedKind);

        END_INTERFACE
    } ICoreWebView2ProcessFailedEventArgsVtbl;

    interface ICoreWebView2ProcessFailedEventArgs
    {
        CONST_VTBL struct ICoreWebView2ProcessFailedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessFailedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessFailedEventArgs2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessFailedEventArgs2 = {0x4dab9422,0x46fa,0x4c3e,{0xa5,0xd2,0x41,0xd2,0x07,0x1d,0x36,0x80}};

    typedef struct ICoreWebView2ProcessFailedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessFailedEventArgs2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessFailedEventArgs2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs, get_ProcessFailedKind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessFailedKind )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [retval][out] */ COREWEBVIEW2_PROCESS_FAILED_KIND *processFailedKind);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs2, get_Reason)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Reason )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [retval][out] */ COREWEBVIEW2_PROCESS_FAILED_REASON *reason);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs2, get_ExitCode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitCode )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [retval][out] */ int *exitCode);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs2, get_ProcessDescription)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessDescription )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [retval][out] */ LPWSTR *processDescription);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventArgs2, get_FrameInfosForFailedProcess)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameInfosForFailedProcess )(
            ICoreWebView2ProcessFailedEventArgs2 * This,
            /* [retval][out] */ ICoreWebView2FrameInfoCollection **frames);

        END_INTERFACE
    } ICoreWebView2ProcessFailedEventArgs2Vtbl;

    interface ICoreWebView2ProcessFailedEventArgs2
    {
        CONST_VTBL struct ICoreWebView2ProcessFailedEventArgs2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessFailedEventArgs2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessFailedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessFailedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessFailedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessFailedEventHandler = {0x79e0aea4,0x990b,0x42d9,{0xaa,0x1d,0x0f,0xcc,0x2e,0x5b,0xc7,0xf1}};

    typedef struct ICoreWebView2ProcessFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessFailedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessFailedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessFailedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessFailedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ProcessFailedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ProcessFailedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ProcessFailedEventHandlerVtbl;

    interface ICoreWebView2ProcessFailedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ProcessFailedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessFailedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Profile_INTERFACE_DEFINED__
#define __ICoreWebView2Profile_INTERFACE_DEFINED__

/* interface ICoreWebView2Profile */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Profile = {0x79110ad3,0xcd5d,0x4373,{0x8b,0xc3,0xc6,0x06,0x58,0xf1,0x7a,0x5f}};

    typedef struct ICoreWebView2ProfileVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Profile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Profile * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Profile * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_ProfileName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProfileName )(
            ICoreWebView2Profile * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_IsInPrivateModeEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInPrivateModeEnabled )(
            ICoreWebView2Profile * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_ProfilePath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProfilePath )(
            ICoreWebView2Profile * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_DefaultDownloadFolderPath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadFolderPath )(
            ICoreWebView2Profile * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, put_DefaultDownloadFolderPath)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadFolderPath )(
            ICoreWebView2Profile * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_PreferredColorScheme)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredColorScheme )(
            ICoreWebView2Profile * This,
            /* [retval][out] */ COREWEBVIEW2_PREFERRED_COLOR_SCHEME *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, put_PreferredColorScheme)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredColorScheme )(
            ICoreWebView2Profile * This,
            /* [in] */ COREWEBVIEW2_PREFERRED_COLOR_SCHEME value);

        END_INTERFACE
    } ICoreWebView2ProfileVtbl;

    interface ICoreWebView2Profile
    {
        CONST_VTBL struct ICoreWebView2ProfileVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Profile_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Profile2_INTERFACE_DEFINED__
#define __ICoreWebView2Profile2_INTERFACE_DEFINED__

/* interface ICoreWebView2Profile2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Profile2 = {0xfa740d4b,0x5eae,0x4344,{0xa8,0xad,0x74,0xbe,0x31,0x92,0x53,0x97}};

    typedef struct ICoreWebView2Profile2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Profile2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Profile2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Profile2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_ProfileName)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProfileName )(
            ICoreWebView2Profile2 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_IsInPrivateModeEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInPrivateModeEnabled )(
            ICoreWebView2Profile2 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_ProfilePath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProfilePath )(
            ICoreWebView2Profile2 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_DefaultDownloadFolderPath)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadFolderPath )(
            ICoreWebView2Profile2 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, put_DefaultDownloadFolderPath)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadFolderPath )(
            ICoreWebView2Profile2 * This,
            /* [in] */ LPCWSTR value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, get_PreferredColorScheme)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredColorScheme )(
            ICoreWebView2Profile2 * This,
            /* [retval][out] */ COREWEBVIEW2_PREFERRED_COLOR_SCHEME *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile, put_PreferredColorScheme)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredColorScheme )(
            ICoreWebView2Profile2 * This,
            /* [in] */ COREWEBVIEW2_PREFERRED_COLOR_SCHEME value);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile2, ClearBrowsingData)
        HRESULT ( STDMETHODCALLTYPE *ClearBrowsingData )(
            ICoreWebView2Profile2 * This,
            /* [in] */ COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds,
            /* [in] */ ICoreWebView2ClearBrowsingDataCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile2, ClearBrowsingDataInTimeRange)
        HRESULT ( STDMETHODCALLTYPE *ClearBrowsingDataInTimeRange )(
            ICoreWebView2Profile2 * This,
            /* [in] */ COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds,
            /* [in] */ double startTime,
            /* [in] */ double endTime,
            /* [in] */ ICoreWebView2ClearBrowsingDataCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2Profile2, ClearBrowsingDataAll)
        HRESULT ( STDMETHODCALLTYPE *ClearBrowsingDataAll )(
            ICoreWebView2Profile2 * This,
            /* [in] */ ICoreWebView2ClearBrowsingDataCompletedHandler *handler);

        END_INTERFACE
    } ICoreWebView2Profile2Vtbl;

    interface ICoreWebView2Profile2
    {
        CONST_VTBL struct ICoreWebView2Profile2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Profile2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2RasterizationScaleChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2RasterizationScaleChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2RasterizationScaleChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2RasterizationScaleChangedEventHandler = {0x9c98c8b1,0xac53,0x427e,{0xa3,0x45,0x30,0x49,0xb5,0x52,0x4b,0xbe}};

    typedef struct ICoreWebView2RasterizationScaleChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2RasterizationScaleChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2RasterizationScaleChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2RasterizationScaleChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2RasterizationScaleChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2RasterizationScaleChangedEventHandler * This,
            /* [in] */ ICoreWebView2Controller *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2RasterizationScaleChangedEventHandlerVtbl;

    interface ICoreWebView2RasterizationScaleChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2RasterizationScaleChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2RasterizationScaleChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ServerCertificateErrorDetectedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ServerCertificateErrorDetectedEventArgs = {0x012193ED,0x7C13,0x48FF,{0x96,0x9D,0xA8,0x4C,0x1F,0x43,0x2A,0x14}};

    typedef struct ICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, get_ErrorStatus)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorStatus )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_WEB_ERROR_STATUS *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, get_RequestUri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestUri )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, get_ServerCertificate)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerCertificate )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Certificate **value);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, get_Action)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Action )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, put_Action)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Action )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [in] */ COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION value);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2ServerCertificateErrorDetectedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl;

    interface ICoreWebView2ServerCertificateErrorDetectedEventArgs
    {
        CONST_VTBL struct ICoreWebView2ServerCertificateErrorDetectedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ServerCertificateErrorDetectedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ServerCertificateErrorDetectedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ServerCertificateErrorDetectedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ServerCertificateErrorDetectedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ServerCertificateErrorDetectedEventHandler = {0x969B3A26,0xD85E,0x4795,{0x81,0x99,0xFE,0xF5,0x73,0x44,0xDA,0x22}};

    typedef struct ICoreWebView2ServerCertificateErrorDetectedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ServerCertificateErrorDetectedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ServerCertificateErrorDetectedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ServerCertificateErrorDetectedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ServerCertificateErrorDetectedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ServerCertificateErrorDetectedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ServerCertificateErrorDetectedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ServerCertificateErrorDetectedEventHandlerVtbl;

    interface ICoreWebView2ServerCertificateErrorDetectedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ServerCertificateErrorDetectedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ServerCertificateErrorDetectedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2ScriptDialogOpeningEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ScriptDialogOpeningEventArgs = {0x7390bb70,0xabe0,0x4843,{0x95,0x29,0xf1,0x43,0xb3,0x1b,0x03,0xd6}};

    typedef struct ICoreWebView2ScriptDialogOpeningEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, get_Kind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_SCRIPT_DIALOG_KIND *kind);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, get_Message)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Message )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ LPWSTR *message);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, Accept)
        HRESULT ( STDMETHODCALLTYPE *Accept )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, get_DefaultText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultText )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ LPWSTR *defaultText);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, get_ResultText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResultText )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ LPWSTR *resultText);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, put_ResultText)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ResultText )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [in] */ LPCWSTR resultText);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2ScriptDialogOpeningEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        END_INTERFACE
    } ICoreWebView2ScriptDialogOpeningEventArgsVtbl;

    interface ICoreWebView2ScriptDialogOpeningEventArgs
    {
        CONST_VTBL struct ICoreWebView2ScriptDialogOpeningEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ScriptDialogOpeningEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ScriptDialogOpeningEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ScriptDialogOpeningEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ScriptDialogOpeningEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ScriptDialogOpeningEventHandler = {0xef381bf9,0xafa8,0x4e37,{0x91,0xc4,0x8a,0xc4,0x85,0x24,0xbd,0xfb}};

    typedef struct ICoreWebView2ScriptDialogOpeningEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ScriptDialogOpeningEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ScriptDialogOpeningEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ScriptDialogOpeningEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ScriptDialogOpeningEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ScriptDialogOpeningEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventArgs *args);

        END_INTERFACE
    } ICoreWebView2ScriptDialogOpeningEventHandlerVtbl;

    interface ICoreWebView2ScriptDialogOpeningEventHandler
    {
        CONST_VTBL struct ICoreWebView2ScriptDialogOpeningEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ScriptDialogOpeningEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings_INTERFACE_DEFINED__
#define __ICoreWebView2Settings_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings = {0xe562e4f0,0xd7fa,0x43ac,{0x8d,0x71,0xc0,0x51,0x50,0x49,0x9f,0x00}};

    typedef struct ICoreWebView2SettingsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings * This,
            /* [in] */ BOOL enabled);

        END_INTERFACE
    } ICoreWebView2SettingsVtbl;

    interface ICoreWebView2Settings
    {
        CONST_VTBL struct ICoreWebView2SettingsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings2_INTERFACE_DEFINED__
#define __ICoreWebView2Settings2_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings2 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings2 = {0xee9a0f68,0xf46c,0x4e32,{0xac,0x23,0xef,0x8c,0xac,0x22,0x4d,0x2a}};

    typedef struct ICoreWebView2Settings2Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings2 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings2 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings2 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings2 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings2 * This,
            /* [in] */ LPCWSTR userAgent);

        END_INTERFACE
    } ICoreWebView2Settings2Vtbl;

    interface ICoreWebView2Settings2
    {
        CONST_VTBL struct ICoreWebView2Settings2Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings2_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings3_INTERFACE_DEFINED__
#define __ICoreWebView2Settings3_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings3 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings3 = {0xfdb5ab74,0xaf33,0x4854,{0x84,0xf0,0x0a,0x63,0x1d,0xeb,0x5e,0xba}};

    typedef struct ICoreWebView2Settings3Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings3 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings3 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings3 * This,
            /* [in] */ LPCWSTR userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, get_AreBrowserAcceleratorKeysEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings3 * This,
            /* [retval][out] */ BOOL *areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, put_AreBrowserAcceleratorKeysEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings3 * This,
            /* [in] */ BOOL areBrowserAcceleratorKeysEnabled);

        END_INTERFACE
    } ICoreWebView2Settings3Vtbl;

    interface ICoreWebView2Settings3
    {
        CONST_VTBL struct ICoreWebView2Settings3Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings3_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings4_INTERFACE_DEFINED__
#define __ICoreWebView2Settings4_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings4 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings4 = {0xcb56846c,0x4168,0x4d53,{0xb0,0x4f,0x03,0xb6,0xd6,0x79,0x6f,0xf2}};

    typedef struct ICoreWebView2Settings4Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings4 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings4 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings4 * This,
            /* [in] */ LPCWSTR userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, get_AreBrowserAcceleratorKeysEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, put_AreBrowserAcceleratorKeysEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsPasswordAutosaveEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsPasswordAutosaveEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsGeneralAutofillEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings4 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsGeneralAutofillEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings4 * This,
            /* [in] */ BOOL value);

        END_INTERFACE
    } ICoreWebView2Settings4Vtbl;

    interface ICoreWebView2Settings4
    {
        CONST_VTBL struct ICoreWebView2Settings4Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings4_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings5_INTERFACE_DEFINED__
#define __ICoreWebView2Settings5_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings5 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings5 = {0x183e7052,0x1d03,0x43a0,{0xab,0x99,0x98,0xe0,0x43,0xb6,0x6b,0x39}};

    typedef struct ICoreWebView2Settings5Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings5 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings5 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings5 * This,
            /* [in] */ LPCWSTR userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, get_AreBrowserAcceleratorKeysEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, put_AreBrowserAcceleratorKeysEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsPasswordAutosaveEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsPasswordAutosaveEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsGeneralAutofillEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsGeneralAutofillEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, get_IsPinchZoomEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPinchZoomEnabled )(
            ICoreWebView2Settings5 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, put_IsPinchZoomEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPinchZoomEnabled )(
            ICoreWebView2Settings5 * This,
            /* [in] */ BOOL enabled);

        END_INTERFACE
    } ICoreWebView2Settings5Vtbl;

    interface ICoreWebView2Settings5
    {
        CONST_VTBL struct ICoreWebView2Settings5Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings5_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings6_INTERFACE_DEFINED__
#define __ICoreWebView2Settings6_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings6 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings6 = {0x11cb3acd,0x9bc8,0x43b8,{0x83,0xbf,0xf4,0x07,0x53,0x71,0x4f,0x87}};

    typedef struct ICoreWebView2Settings6Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings6 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings6 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings6 * This,
            /* [in] */ LPCWSTR userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, get_AreBrowserAcceleratorKeysEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, put_AreBrowserAcceleratorKeysEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsPasswordAutosaveEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsPasswordAutosaveEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsGeneralAutofillEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsGeneralAutofillEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, get_IsPinchZoomEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPinchZoomEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, put_IsPinchZoomEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPinchZoomEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings6, get_IsSwipeNavigationEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSwipeNavigationEnabled )(
            ICoreWebView2Settings6 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings6, put_IsSwipeNavigationEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSwipeNavigationEnabled )(
            ICoreWebView2Settings6 * This,
            /* [in] */ BOOL enabled);

        END_INTERFACE
    } ICoreWebView2Settings6Vtbl;

    interface ICoreWebView2Settings6
    {
        CONST_VTBL struct ICoreWebView2Settings6Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings6_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2Settings7_INTERFACE_DEFINED__
#define __ICoreWebView2Settings7_INTERFACE_DEFINED__

/* interface ICoreWebView2Settings7 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2Settings7 = {0x488dc902,0x35ef,0x42d2,{0xbc,0x7d,0x94,0xb6,0x5c,0x4b,0xc4,0x9c}};

    typedef struct ICoreWebView2Settings7Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2Settings7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2Settings7 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2Settings7 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsScriptEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScriptEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsScriptEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScriptEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL isScriptEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsWebMessageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWebMessageEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsWebMessageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsWebMessageEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL isWebMessageEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultScriptDialogsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultScriptDialogsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultScriptDialogsEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL areDefaultScriptDialogsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsStatusBarEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStatusBarEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsStatusBarEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStatusBarEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL isStatusBarEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDevToolsEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDevToolsEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDevToolsEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDevToolsEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL areDevToolsEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreDefaultContextMenusEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreDefaultContextMenusEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreDefaultContextMenusEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_AreHostObjectsAllowed)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreHostObjectsAllowed )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_AreHostObjectsAllowed)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreHostObjectsAllowed )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL allowed);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsZoomControlEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomControlEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsZoomControlEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomControlEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, get_IsBuiltInErrorPageEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings, put_IsBuiltInErrorPageEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBuiltInErrorPageEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, get_UserAgent)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ LPWSTR *userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings2, put_UserAgent)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserAgent )(
            ICoreWebView2Settings7 * This,
            /* [in] */ LPCWSTR userAgent);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, get_AreBrowserAcceleratorKeysEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings3, put_AreBrowserAcceleratorKeysEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreBrowserAcceleratorKeysEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL areBrowserAcceleratorKeysEnabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsPasswordAutosaveEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsPasswordAutosaveEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPasswordAutosaveEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, get_IsGeneralAutofillEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings4, put_IsGeneralAutofillEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsGeneralAutofillEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, get_IsPinchZoomEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPinchZoomEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings5, put_IsPinchZoomEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPinchZoomEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings6, get_IsSwipeNavigationEnabled)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSwipeNavigationEnabled )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ BOOL *enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings6, put_IsSwipeNavigationEnabled)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSwipeNavigationEnabled )(
            ICoreWebView2Settings7 * This,
            /* [in] */ BOOL enabled);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings7, get_HiddenPdfToolbarItems)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HiddenPdfToolbarItems )(
            ICoreWebView2Settings7 * This,
            /* [retval][out] */ COREWEBVIEW2_PDF_TOOLBAR_ITEMS *hidden_pdf_toolbar_items);

        DECLSPEC_XFGVIRT(ICoreWebView2Settings7, put_HiddenPdfToolbarItems)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HiddenPdfToolbarItems )(
            ICoreWebView2Settings7 * This,
            /* [in] */ COREWEBVIEW2_PDF_TOOLBAR_ITEMS hidden_pdf_toolbar_items);

        END_INTERFACE
    } ICoreWebView2Settings7Vtbl;

    interface ICoreWebView2Settings7
    {
        CONST_VTBL struct ICoreWebView2Settings7Vtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2Settings7_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2SourceChangedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2SourceChangedEventArgs = {0x31e0e545,0x1dba,0x4266,{0x89,0x14,0xf6,0x38,0x48,0xa1,0xf7,0xd7}};

    typedef struct ICoreWebView2SourceChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2SourceChangedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2SourceChangedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2SourceChangedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2SourceChangedEventArgs, get_IsNewDocument)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsNewDocument )(
            ICoreWebView2SourceChangedEventArgs * This,
            /* [retval][out] */ BOOL *isNewDocument);

        END_INTERFACE
    } ICoreWebView2SourceChangedEventArgsVtbl;

    interface ICoreWebView2SourceChangedEventArgs
    {
        CONST_VTBL struct ICoreWebView2SourceChangedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2SourceChangedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2SourceChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2SourceChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2SourceChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2SourceChangedEventHandler = {0x3c067f9f,0x5388,0x4772,{0x8b,0x48,0x79,0xf7,0xef,0x1a,0xb3,0x7c}};

    typedef struct ICoreWebView2SourceChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2SourceChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2SourceChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2SourceChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2SourceChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2SourceChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2SourceChangedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2SourceChangedEventHandlerVtbl;

    interface ICoreWebView2SourceChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2SourceChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2SourceChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2StateChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2StateChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2StateChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2StateChangedEventHandler = {0x81336594,0x7ede,0x4ba9,{0xbf,0x71,0xac,0xf0,0xa9,0x5b,0x58,0xdd}};

    typedef struct ICoreWebView2StateChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2StateChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2StateChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2StateChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2StateChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2StateChangedEventHandler * This,
            /* [in] */ ICoreWebView2DownloadOperation *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2StateChangedEventHandlerVtbl;

    interface ICoreWebView2StateChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2StateChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2StateChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2StatusBarTextChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2StatusBarTextChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2StatusBarTextChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2StatusBarTextChangedEventHandler = {0xA5E3B0D0,0x10DF,0x4156,{0xBF,0xAD,0x3B,0x43,0x86,0x7A,0xCA,0xC6}};

    typedef struct ICoreWebView2StatusBarTextChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2StatusBarTextChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2StatusBarTextChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2StatusBarTextChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2StatusBarTextChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2StatusBarTextChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2StatusBarTextChangedEventHandlerVtbl;

    interface ICoreWebView2StatusBarTextChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2StatusBarTextChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2StatusBarTextChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2TrySuspendCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2TrySuspendCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2TrySuspendCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2TrySuspendCompletedHandler = {0x00F206A7,0x9D17,0x4605,{0x91,0xF6,0x4E,0x8E,0x4D,0xE1,0x92,0xE3}};

    typedef struct ICoreWebView2TrySuspendCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2TrySuspendCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2TrySuspendCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2TrySuspendCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2TrySuspendCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2TrySuspendCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            /* [in] */ BOOL isSuccessful);

        END_INTERFACE
    } ICoreWebView2TrySuspendCompletedHandlerVtbl;

    interface ICoreWebView2TrySuspendCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2TrySuspendCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2TrySuspendCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2WebMessageReceivedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebMessageReceivedEventArgs = {0x0f99a40c,0xe962,0x4207,{0x9e,0x92,0xe3,0xd5,0x42,0xef,0xf8,0x49}};

    typedef struct ICoreWebView2WebMessageReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebMessageReceivedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebMessageReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebMessageReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebMessageReceivedEventArgs, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2WebMessageReceivedEventArgs * This,
            /* [retval][out] */ LPWSTR *source);

        DECLSPEC_XFGVIRT(ICoreWebView2WebMessageReceivedEventArgs, get_WebMessageAsJson)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WebMessageAsJson )(
            ICoreWebView2WebMessageReceivedEventArgs * This,
            /* [retval][out] */ LPWSTR *webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2WebMessageReceivedEventArgs, TryGetWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *TryGetWebMessageAsString )(
            ICoreWebView2WebMessageReceivedEventArgs * This,
            /* [retval][out] */ LPWSTR *webMessageAsString);

        END_INTERFACE
    } ICoreWebView2WebMessageReceivedEventArgsVtbl;

    interface ICoreWebView2WebMessageReceivedEventArgs
    {
        CONST_VTBL struct ICoreWebView2WebMessageReceivedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebMessageReceivedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebMessageReceivedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2WebMessageReceivedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2WebMessageReceivedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebMessageReceivedEventHandler = {0x57213f19,0x00e6,0x49fa,{0x8e,0x07,0x89,0x8e,0xa0,0x1e,0xcb,0xd2}};

    typedef struct ICoreWebView2WebMessageReceivedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebMessageReceivedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebMessageReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebMessageReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebMessageReceivedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2WebMessageReceivedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2WebMessageReceivedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2WebMessageReceivedEventHandlerVtbl;

    interface ICoreWebView2WebMessageReceivedEventHandler
    {
        CONST_VTBL struct ICoreWebView2WebMessageReceivedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebMessageReceivedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequest_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceRequest_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceRequest */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceRequest = {0x97055cd4,0x512c,0x4264,{0x8b,0x5f,0xe3,0xf4,0x46,0xce,0xa6,0xa5}};

    typedef struct ICoreWebView2WebResourceRequestVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceRequest * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceRequest * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceRequest * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, get_Uri)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )(
            ICoreWebView2WebResourceRequest * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, put_Uri)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Uri )(
            ICoreWebView2WebResourceRequest * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, get_Method)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Method )(
            ICoreWebView2WebResourceRequest * This,
            /* [retval][out] */ LPWSTR *method);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, put_Method)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Method )(
            ICoreWebView2WebResourceRequest * This,
            /* [in] */ LPCWSTR method);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, get_Content)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )(
            ICoreWebView2WebResourceRequest * This,
            /* [retval][out] */ IStream **content);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, put_Content)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )(
            ICoreWebView2WebResourceRequest * This,
            /* [in] */ IStream *content);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequest, get_Headers)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Headers )(
            ICoreWebView2WebResourceRequest * This,
            /* [retval][out] */ ICoreWebView2HttpRequestHeaders **headers);

        END_INTERFACE
    } ICoreWebView2WebResourceRequestVtbl;

    interface ICoreWebView2WebResourceRequest
    {
        CONST_VTBL struct ICoreWebView2WebResourceRequestVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceRequest_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceRequestedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceRequestedEventArgs = {0x453e667f,0x12c7,0x49d4,{0xbe,0x6d,0xdd,0xbe,0x79,0x56,0xf5,0x7a}};

    typedef struct ICoreWebView2WebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceRequestedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventArgs, get_Request)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventArgs, get_Response)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Response )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2WebResourceResponse **response);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventArgs, put_Response)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Response )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [in] */ ICoreWebView2WebResourceResponse *response);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventArgs, GetDeferral)
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [retval][out] */ ICoreWebView2Deferral **deferral);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventArgs, get_ResourceContext)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResourceContext )(
            ICoreWebView2WebResourceRequestedEventArgs * This,
            /* [retval][out] */ COREWEBVIEW2_WEB_RESOURCE_CONTEXT *context);

        END_INTERFACE
    } ICoreWebView2WebResourceRequestedEventArgsVtbl;

    interface ICoreWebView2WebResourceRequestedEventArgs
    {
        CONST_VTBL struct ICoreWebView2WebResourceRequestedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceRequestedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceRequestedEventHandler = {0xab00b74c,0x15f1,0x4646,{0x80,0xe8,0xe7,0x63,0x41,0xd2,0x5d,0x71}};

    typedef struct ICoreWebView2WebResourceRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2WebResourceRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2WebResourceRequestedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2WebResourceRequestedEventHandlerVtbl;

    interface ICoreWebView2WebResourceRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2WebResourceRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponse_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceResponse_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceResponse */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceResponse = {0xaafcc94f,0xfa27,0x48fd,{0x97,0xdf,0x83,0x0e,0xf7,0x5a,0xae,0xc9}};

    typedef struct ICoreWebView2WebResourceResponseVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceResponse * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceResponse * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceResponse * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, get_Content)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )(
            ICoreWebView2WebResourceResponse * This,
            /* [retval][out] */ IStream **content);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, put_Content)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )(
            ICoreWebView2WebResourceResponse * This,
            /* [in] */ IStream *content);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, get_Headers)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Headers )(
            ICoreWebView2WebResourceResponse * This,
            /* [retval][out] */ ICoreWebView2HttpResponseHeaders **headers);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, get_StatusCode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusCode )(
            ICoreWebView2WebResourceResponse * This,
            /* [retval][out] */ int *statusCode);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, put_StatusCode)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StatusCode )(
            ICoreWebView2WebResourceResponse * This,
            /* [in] */ int statusCode);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, get_ReasonPhrase)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReasonPhrase )(
            ICoreWebView2WebResourceResponse * This,
            /* [retval][out] */ LPWSTR *reasonPhrase);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponse, put_ReasonPhrase)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ReasonPhrase )(
            ICoreWebView2WebResourceResponse * This,
            /* [in] */ LPCWSTR reasonPhrase);

        END_INTERFACE
    } ICoreWebView2WebResourceResponseVtbl;

    interface ICoreWebView2WebResourceResponse
    {
        CONST_VTBL struct ICoreWebView2WebResourceResponseVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceResponse_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseReceivedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceResponseReceivedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceResponseReceivedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceResponseReceivedEventHandler = {0x7DE9898A,0x24F5,0x40C3,{0xA2,0xDE,0xD4,0xF4,0x58,0xE6,0x98,0x28}};

    typedef struct ICoreWebView2WebResourceResponseReceivedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceResponseReceivedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceResponseReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceResponseReceivedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseReceivedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2WebResourceResponseReceivedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventArgs *args);

        END_INTERFACE
    } ICoreWebView2WebResourceResponseReceivedEventHandlerVtbl;

    interface ICoreWebView2WebResourceResponseReceivedEventHandler
    {
        CONST_VTBL struct ICoreWebView2WebResourceResponseReceivedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceResponseReceivedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceResponseReceivedEventArgs */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceResponseReceivedEventArgs = {0xD1DB483D,0x6796,0x4B8B,{0x80,0xFC,0x13,0x71,0x2B,0xB7,0x16,0xF4}};

    typedef struct ICoreWebView2WebResourceResponseReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceResponseReceivedEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceResponseReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceResponseReceivedEventArgs * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseReceivedEventArgs, get_Request)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )(
            ICoreWebView2WebResourceResponseReceivedEventArgs * This,
            /* [retval][out] */ ICoreWebView2WebResourceRequest **request);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseReceivedEventArgs, get_Response)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Response )(
            ICoreWebView2WebResourceResponseReceivedEventArgs * This,
            /* [retval][out] */ ICoreWebView2WebResourceResponseView **response);

        END_INTERFACE
    } ICoreWebView2WebResourceResponseReceivedEventArgsVtbl;

    interface ICoreWebView2WebResourceResponseReceivedEventArgs
    {
        CONST_VTBL struct ICoreWebView2WebResourceResponseReceivedEventArgsVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceResponseReceivedEventArgs_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceResponseView */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceResponseView = {0x79701053,0x7759,0x4162,{0x8F,0x7D,0xF1,0xB3,0xF0,0x84,0x92,0x8D}};

    typedef struct ICoreWebView2WebResourceResponseViewVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceResponseView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceResponseView * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceResponseView * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseView, get_Headers)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Headers )(
            ICoreWebView2WebResourceResponseView * This,
            /* [retval][out] */ ICoreWebView2HttpResponseHeaders **headers);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseView, get_StatusCode)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusCode )(
            ICoreWebView2WebResourceResponseView * This,
            /* [retval][out] */ int *statusCode);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseView, get_ReasonPhrase)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReasonPhrase )(
            ICoreWebView2WebResourceResponseView * This,
            /* [retval][out] */ LPWSTR *reasonPhrase);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseView, GetContent)
        HRESULT ( STDMETHODCALLTYPE *GetContent )(
            ICoreWebView2WebResourceResponseView * This,
            /* [in] */ ICoreWebView2WebResourceResponseViewGetContentCompletedHandler *handler);

        END_INTERFACE
    } ICoreWebView2WebResourceResponseViewVtbl;

    interface ICoreWebView2WebResourceResponseView
    {
        CONST_VTBL struct ICoreWebView2WebResourceResponseViewVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceResponseView_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_INTERFACE_DEFINED__
#define __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2WebResourceResponseViewGetContentCompletedHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WebResourceResponseViewGetContentCompletedHandler = {0x875738E1,0x9FA2,0x40E3,{0x8B,0x74,0x2E,0x89,0x72,0xDD,0x6F,0xE7}};

    typedef struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WebResourceResponseViewGetContentCompletedHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WebResourceResponseViewGetContentCompletedHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WebResourceResponseViewGetContentCompletedHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WebResourceResponseViewGetContentCompletedHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2WebResourceResponseViewGetContentCompletedHandler * This,
            /* [in] */ HRESULT errorCode,
            /* [in] */ IStream *content);

        END_INTERFACE
    } ICoreWebView2WebResourceResponseViewGetContentCompletedHandlerVtbl;

    interface ICoreWebView2WebResourceResponseViewGetContentCompletedHandler
    {
        CONST_VTBL struct ICoreWebView2WebResourceResponseViewGetContentCompletedHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WebResourceResponseViewGetContentCompletedHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WindowCloseRequestedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2WindowCloseRequestedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2WindowCloseRequestedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WindowCloseRequestedEventHandler = {0x5c19e9e0,0x092f,0x486b,{0xaf,0xfa,0xca,0x82,0x31,0x91,0x30,0x39}};

    typedef struct ICoreWebView2WindowCloseRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WindowCloseRequestedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WindowCloseRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WindowCloseRequestedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowCloseRequestedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2WindowCloseRequestedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2WindowCloseRequestedEventHandlerVtbl;

    interface ICoreWebView2WindowCloseRequestedEventHandler
    {
        CONST_VTBL struct ICoreWebView2WindowCloseRequestedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WindowCloseRequestedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2WindowFeatures_INTERFACE_DEFINED__
#define __ICoreWebView2WindowFeatures_INTERFACE_DEFINED__

/* interface ICoreWebView2WindowFeatures */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2WindowFeatures = {0x5eaf559f,0xb46e,0x4397,{0x88,0x60,0xe4,0x22,0xf2,0x87,0xff,0x1e}};

    typedef struct ICoreWebView2WindowFeaturesVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2WindowFeatures * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2WindowFeatures * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2WindowFeatures * This);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_HasPosition)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasPosition )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_HasSize)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasSize )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_Left)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Left )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_Top)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Top )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_Height)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_Width)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_ShouldDisplayMenuBar)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDisplayMenuBar )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_ShouldDisplayStatus)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDisplayStatus )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_ShouldDisplayToolbar)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDisplayToolbar )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2WindowFeatures, get_ShouldDisplayScrollBars)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDisplayScrollBars )(
            ICoreWebView2WindowFeatures * This,
            /* [retval][out] */ BOOL *value);

        END_INTERFACE
    } ICoreWebView2WindowFeaturesVtbl;

    interface ICoreWebView2WindowFeatures
    {
        CONST_VTBL struct ICoreWebView2WindowFeaturesVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2WindowFeatures_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ZoomFactorChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ZoomFactorChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ZoomFactorChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ZoomFactorChangedEventHandler = {0xb52d71d6,0xc4df,0x4543,{0xa9,0x0c,0x64,0xa3,0xe6,0x0f,0x38,0xcb}};

    typedef struct ICoreWebView2ZoomFactorChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ZoomFactorChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ZoomFactorChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ZoomFactorChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ZoomFactorChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ZoomFactorChangedEventHandler * This,
            /* [in] */ ICoreWebView2Controller *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2ZoomFactorChangedEventHandlerVtbl;

    interface ICoreWebView2ZoomFactorChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ZoomFactorChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ZoomFactorChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2IsMutedChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2IsMutedChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2IsMutedChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2IsMutedChangedEventHandler = {0x57D90347,0xCD0E,0x4952,{0xA4,0xA2,0x74,0x83,0xA2,0x75,0x6F,0x08}};

    typedef struct ICoreWebView2IsMutedChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2IsMutedChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2IsMutedChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2IsMutedChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2IsMutedChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2IsMutedChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2IsMutedChangedEventHandlerVtbl;

    interface ICoreWebView2IsMutedChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2IsMutedChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2IsMutedChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2IsDocumentPlayingAudioChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2IsDocumentPlayingAudioChangedEventHandler = {0x5DEF109A,0x2F4B,0x49FA,{0xB7,0xF6,0x11,0xC3,0x9E,0x51,0x33,0x28}};

    typedef struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2IsDocumentPlayingAudioChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2IsDocumentPlayingAudioChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2IsDocumentPlayingAudioChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2IsDocumentPlayingAudioChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2IsDocumentPlayingAudioChangedEventHandler * This,
            /* [in] */ ICoreWebView2 *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2IsDocumentPlayingAudioChangedEventHandlerVtbl;

    interface ICoreWebView2IsDocumentPlayingAudioChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2IsDocumentPlayingAudioChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2IsDocumentPlayingAudioChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfo_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessInfo_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessInfo */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessInfo = {0x84FA7612,0x3F3D,0x4FBF,{0x88,0x9D,0xFA,0xD0,0x00,0x49,0x2D,0x72}};

    typedef struct ICoreWebView2ProcessInfoVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessInfo * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessInfo * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessInfo, get_ProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessId )(
            ICoreWebView2ProcessInfo * This,
            /* [retval][out] */ INT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessInfo, get_Kind)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )(
            ICoreWebView2ProcessInfo * This,
            /* [retval][out] */ COREWEBVIEW2_PROCESS_KIND *kind);

        END_INTERFACE
    } ICoreWebView2ProcessInfoVtbl;

    interface ICoreWebView2ProcessInfo
    {
        CONST_VTBL struct ICoreWebView2ProcessInfoVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessInfo_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfoCollection_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessInfoCollection_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessInfoCollection */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessInfoCollection = {0x402B99CD,0xA0CC,0x4FA5,{0xB7,0xA5,0x51,0xD8,0x6A,0x1D,0x23,0x39}};

    typedef struct ICoreWebView2ProcessInfoCollectionVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessInfoCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessInfoCollection * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessInfoCollection * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessInfoCollection, get_Count)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )(
            ICoreWebView2ProcessInfoCollection * This,
            /* [retval][out] */ UINT *count);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessInfoCollection, GetValueAtIndex)
        HRESULT ( STDMETHODCALLTYPE *GetValueAtIndex )(
            ICoreWebView2ProcessInfoCollection * This,
            /* [in] */ UINT32 index,
            /* [retval][out] */ ICoreWebView2ProcessInfo **processInfo);

        END_INTERFACE
    } ICoreWebView2ProcessInfoCollectionVtbl;

    interface ICoreWebView2ProcessInfoCollection
    {
        CONST_VTBL struct ICoreWebView2ProcessInfoCollectionVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessInfoCollection_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2ProcessInfosChangedEventHandler_INTERFACE_DEFINED__
#define __ICoreWebView2ProcessInfosChangedEventHandler_INTERFACE_DEFINED__

/* interface ICoreWebView2ProcessInfosChangedEventHandler */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2ProcessInfosChangedEventHandler = {0xF4AF0C39,0x44B9,0x40E9,{0x8B,0x11,0x04,0x84,0xCF,0xB9,0xE0,0xA1}};

    typedef struct ICoreWebView2ProcessInfosChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2ProcessInfosChangedEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2ProcessInfosChangedEventHandler * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2ProcessInfosChangedEventHandler * This);

        DECLSPEC_XFGVIRT(ICoreWebView2ProcessInfosChangedEventHandler, Invoke)
        HRESULT ( STDMETHODCALLTYPE *Invoke )(
            ICoreWebView2ProcessInfosChangedEventHandler * This,
            /* [in] */ ICoreWebView2Environment *sender,
            /* [in] */ IUnknown *args);

        END_INTERFACE
    } ICoreWebView2ProcessInfosChangedEventHandlerVtbl;

    interface ICoreWebView2ProcessInfosChangedEventHandler
    {
        CONST_VTBL struct ICoreWebView2ProcessInfosChangedEventHandlerVtbl *lpVtbl;
    };



#endif 	/* __ICoreWebView2ProcessInfosChangedEventHandler_INTERFACE_DEFINED__ */

#ifndef __ICoreWebView2_14_INTERFACE_DEFINED__
#define __ICoreWebView2_14_INTERFACE_DEFINED__

/* interface ICoreWebView2_14 */
/* [unique][object][uuid] */

EXTERN_C __declspec(selectany) const IID IID_ICoreWebView2_14 = {0x6DAA4F10,0x4A90,0x4753,{0x88,0x98,0x77,0xC5,0xDF,0x53,0x41,0x65}};

    typedef struct ICoreWebView2_14Vtbl
    {
        BEGIN_INTERFACE

        DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
            ICoreWebView2_14 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */
            _COM_Outptr_  void **ppvObject);

        DECLSPEC_XFGVIRT(IUnknown, AddRef)
        ULONG ( STDMETHODCALLTYPE *AddRef )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(IUnknown, Release)
        ULONG ( STDMETHODCALLTYPE *Release )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Settings)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Settings )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ ICoreWebView2Settings **settings);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_Source)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ LPWSTR *uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, Navigate)
        HRESULT ( STDMETHODCALLTYPE *Navigate )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR uri);

        DECLSPEC_XFGVIRT(ICoreWebView2, NavigateToString)
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR htmlContent);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ContentLoadingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContentLoading)
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *add_SourceChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2SourceChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_SourceChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_SourceChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *add_HistoryChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2HistoryChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_HistoryChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_HistoryChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2NavigationStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2NavigationCompletedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_FrameNavigationCompleted)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *add_ScriptDialogOpening )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ScriptDialogOpening)
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptDialogOpening )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2PermissionRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_PermissionRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *add_ProcessFailed )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ProcessFailedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ProcessFailed)
        HRESULT ( STDMETHODCALLTYPE *remove_ProcessFailed )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *AddScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveScriptToExecuteOnDocumentCreated)
        HRESULT ( STDMETHODCALLTYPE *RemoveScriptToExecuteOnDocumentCreated )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR id);

        DECLSPEC_XFGVIRT(ICoreWebView2, ExecuteScript)
        HRESULT ( STDMETHODCALLTYPE *ExecuteScript )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR javaScript,
            /* [in] */ ICoreWebView2ExecuteScriptCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, CapturePreview)
        HRESULT ( STDMETHODCALLTYPE *CapturePreview )(
            ICoreWebView2_14 * This,
            /* [in] */ COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,
            /* [in] */ IStream *imageStream,
            /* [in] */ ICoreWebView2CapturePreviewCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, Reload)
        HRESULT ( STDMETHODCALLTYPE *Reload )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsJson)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsJson )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR webMessageAsJson);

        DECLSPEC_XFGVIRT(ICoreWebView2, PostWebMessageAsString)
        HRESULT ( STDMETHODCALLTYPE *PostWebMessageAsString )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR webMessageAsString);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebMessageReceived )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2WebMessageReceivedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebMessageReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebMessageReceived )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, CallDevToolsProtocolMethod)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethod )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_BrowserProcessId)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserProcessId )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ UINT32 *value);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoBack)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *canGoBack);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_CanGoForward)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *canGoForward);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoBack)
        HRESULT ( STDMETHODCALLTYPE *GoBack )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GoForward)
        HRESULT ( STDMETHODCALLTYPE *GoForward )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, GetDevToolsProtocolEventReceiver)
        HRESULT ( STDMETHODCALLTYPE *GetDevToolsProtocolEventReceiver )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR eventName,
            /* [retval][out] */ ICoreWebView2DevToolsProtocolEventReceiver **receiver);

        DECLSPEC_XFGVIRT(ICoreWebView2, Stop)
        HRESULT ( STDMETHODCALLTYPE *Stop )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2NewWindowRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_NewWindowRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *add_DocumentTitleChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_DocumentTitleChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_DocumentTitleChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_DocumentTitle)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ LPWSTR *title);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddHostObjectToScript)
        HRESULT ( STDMETHODCALLTYPE *AddHostObjectToScript )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR name,
            /* [in] */ VARIANT *object);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveHostObjectFromScript)
        HRESULT ( STDMETHODCALLTYPE *RemoveHostObjectFromScript )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR name);

        DECLSPEC_XFGVIRT(ICoreWebView2, OpenDevToolsWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenDevToolsWindow )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_ContainsFullScreenElementChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, get_ContainsFullScreenElement)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *containsFullScreenElement);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2WebResourceRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WebResourceRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2, AddWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *AddWebResourceRequestedFilter )(
            ICoreWebView2_14 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, RemoveWebResourceRequestedFilter)
        HRESULT ( STDMETHODCALLTYPE *RemoveWebResourceRequestedFilter )(
            ICoreWebView2_14 * This,
            /* [in] */ const LPCWSTR uri,
            /* [in] */ const COREWEBVIEW2_WEB_RESOURCE_CONTEXT resourceContext);

        DECLSPEC_XFGVIRT(ICoreWebView2, add_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *add_WindowCloseRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2, remove_WindowCloseRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_WindowCloseRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *add_WebResourceResponseReceived )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2WebResourceResponseReceivedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_WebResourceResponseReceived)
        HRESULT ( STDMETHODCALLTYPE *remove_WebResourceResponseReceived )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, NavigateWithWebResourceRequest)
        HRESULT ( STDMETHODCALLTYPE *NavigateWithWebResourceRequest )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2WebResourceRequest *request);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, add_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2DOMContentLoadedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, remove_DOMContentLoaded)
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_CookieManager)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CookieManager )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ ICoreWebView2CookieManager **cookieManager);

        DECLSPEC_XFGVIRT(ICoreWebView2_2, get_Environment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Environment )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ ICoreWebView2Environment **environment);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, TrySuspend)
        HRESULT ( STDMETHODCALLTYPE *TrySuspend )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2TrySuspendCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, Resume)
        HRESULT ( STDMETHODCALLTYPE *Resume )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, get_IsSuspended)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuspended )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *isSuspended);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, SetVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *SetVirtualHostNameToFolderMapping )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR hostName,
            /* [in] */ LPCWSTR folderPath,
            /* [in] */ COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);

        DECLSPEC_XFGVIRT(ICoreWebView2_3, ClearVirtualHostNameToFolderMapping)
        HRESULT ( STDMETHODCALLTYPE *ClearVirtualHostNameToFolderMapping )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR hostName);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *add_FrameCreated )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2FrameCreatedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_FrameCreated)
        HRESULT ( STDMETHODCALLTYPE *remove_FrameCreated )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, add_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *add_DownloadStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2DownloadStartingEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_4, remove_DownloadStarting)
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadStarting )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, add_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ClientCertificateRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ClientCertificateRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_5, remove_ClientCertificateRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ClientCertificateRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_6, OpenTaskManagerWindow)
        HRESULT ( STDMETHODCALLTYPE *OpenTaskManagerWindow )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_7, PrintToPdf)
        HRESULT ( STDMETHODCALLTYPE *PrintToPdf )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR resultFilePath,
            /* [in] */ ICoreWebView2PrintSettings *printSettings,
            /* [in] */ ICoreWebView2PrintToPdfCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsMutedChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2IsMutedChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsMutedChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsMutedChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsMuted)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, put_IsMuted)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
            ICoreWebView2_14 * This,
            /* [in] */ BOOL value);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, add_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2IsDocumentPlayingAudioChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, remove_IsDocumentPlayingAudioChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDocumentPlayingAudioChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_8, get_IsDocumentPlayingAudio)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDocumentPlayingAudio )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, add_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *add_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler *handler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, remove_IsDefaultDownloadDialogOpenChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_IsDefaultDownloadDialogOpenChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_IsDefaultDownloadDialogOpen)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultDownloadDialogOpen )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ BOOL *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, OpenDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *OpenDefaultDownloadDialog )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, CloseDefaultDownloadDialog)
        HRESULT ( STDMETHODCALLTYPE *CloseDefaultDownloadDialog )(
            ICoreWebView2_14 * This);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogCornerAlignment)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogCornerAlignment)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogCornerAlignment )(
            ICoreWebView2_14 * This,
            /* [in] */ COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, get_DefaultDownloadDialogMargin)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultDownloadDialogMargin )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ POINT *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_9, put_DefaultDownloadDialogMargin)
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultDownloadDialogMargin )(
            ICoreWebView2_14 * This,
            /* [in] */ POINT value);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, add_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *add_BasicAuthenticationRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2BasicAuthenticationRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_10, remove_BasicAuthenticationRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_BasicAuthenticationRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, CallDevToolsProtocolMethodForSession)
        HRESULT ( STDMETHODCALLTYPE *CallDevToolsProtocolMethodForSession )(
            ICoreWebView2_14 * This,
            /* [in] */ LPCWSTR sessionId,
            /* [in] */ LPCWSTR methodName,
            /* [in] */ LPCWSTR parametersAsJson,
            /* [in] */ ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, add_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ContextMenuRequestedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_11, remove_ContextMenuRequested)
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuRequested )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, add_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *add_StatusBarTextChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2StatusBarTextChangedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, remove_StatusBarTextChanged)
        HRESULT ( STDMETHODCALLTYPE *remove_StatusBarTextChanged )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_12, get_StatusBarText)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBarText )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ LPWSTR *value);

        DECLSPEC_XFGVIRT(ICoreWebView2_13, get_Profile)
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Profile )(
            ICoreWebView2_14 * This,
            /* [retval][out] */ ICoreWebView2Profile **value);

        DECLSPEC_XFGVIRT(ICoreWebView2_14, add_ServerCertificateErrorDetected)
        HRESULT ( STDMETHODCALLTYPE *add_ServerCertificateErrorDetected )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ServerCertificateErrorDetectedEventHandler *eventHandler,
            /* [out] */ EventRegistrationToken *token);

        DECLSPEC_XFGVIRT(ICoreWebView2_14, remove_ServerCertificateErrorDetected)
        HRESULT ( STDMETHODCALLTYPE *remove_ServerCertificateErrorDetected )(
            ICoreWebView2_14 * This,
            /* [in] */ EventRegistrationToken token);

        DECLSPEC_XFGVIRT(ICoreWebView2_14, ClearServerCertificateErrorActions)
        HRESULT ( STDMETHODCALLTYPE *ClearServerCertificateErrorActions )(
            ICoreWebView2_14 * This,
            /* [in] */ ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler *handler);

        END_INTERFACE
    } ICoreWebView2_14Vtbl;

    interface ICoreWebView2_14
    {
        CONST_VTBL struct ICoreWebView2_14Vtbl *lpVtbl;
    };

#endif 	/* __ICoreWebView2_14_INTERFACE_DEFINED__ */

#endif /* __WebView2_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

#define ICoreWebView2WebMessageReceivedEventArgs_TryGetWebMessageAsString(This,webMessageAsString)	\
    ( (This)->lpVtbl -> TryGetWebMessageAsString(This,webMessageAsString) )

#define ICoreWebView2_PostWebMessageAsString(This,webMessageAsString)	\
    ( (This)->lpVtbl -> PostWebMessageAsString(This,webMessageAsString) )

#define ICoreWebView2Controller2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )

#define ICoreWebView2Controller2_get_CoreWebView2(This,coreWebView2)	\
    ( (This)->lpVtbl -> get_CoreWebView2(This,coreWebView2) )

#define ICoreWebView2Controller2_put_DefaultBackgroundColor(This,backgroundColor)	\
    ( (This)->lpVtbl -> put_DefaultBackgroundColor(This,backgroundColor) )

#define ICoreWebView2Settings_put_AreDevToolsEnabled(This,areDevToolsEnabled)	\
    ( (This)->lpVtbl -> put_AreDevToolsEnabled(This,areDevToolsEnabled) )

#define ICoreWebView2_get_Settings(This,settings)	\
    ( (This)->lpVtbl -> get_Settings(This,settings) )

#define ICoreWebView2_add_WebMessageReceived(This,handler,token)	\
    ( (This)->lpVtbl -> add_WebMessageReceived(This,handler,token) )

#define ICoreWebView2Settings_put_AreDefaultContextMenusEnabled(This,enabled)	\
    ( (This)->lpVtbl -> put_AreDefaultContextMenusEnabled(This,enabled) )

#define ICoreWebView2_AddScriptToExecuteOnDocumentCreated(This,javaScript,handler)	\
    ( (This)->lpVtbl -> AddScriptToExecuteOnDocumentCreated(This,javaScript,handler) )

#define ICoreWebView2Settings_put_IsZoomControlEnabled(This,enabled)	\
    ( (This)->lpVtbl -> put_IsZoomControlEnabled(This,enabled) )

#define ICoreWebView2Settings_Release(This)	\
    ( (This)->lpVtbl -> Release(This) )

#define ICoreWebView2_Navigate(This,uri)	\
    ( (This)->lpVtbl -> Navigate(This,uri) )

#define ICoreWebView2_NavigateToString(This,htmlContent)	\
    ( (This)->lpVtbl -> NavigateToString(This,htmlContent) )

#define ICoreWebView2Environment_CreateCoreWebView2Controller(This,parentWindow,handler)	\
    ( (This)->lpVtbl -> CreateCoreWebView2Controller(This,parentWindow,handler) )

#define ICoreWebView2Controller2_put_IsVisible(This,isVisible)	\
    ( (This)->lpVtbl -> put_IsVisible(This,isVisible) )

#define ICoreWebView2_Reload(This)	\
    ( (This)->lpVtbl -> Reload(This) )

#define ICoreWebView2Controller2_MoveFocus(This,reason)	\
    ( (This)->lpVtbl -> MoveFocus(This,reason) )

#define ICoreWebView2Controller2_get_IsVisible(This,isVisible)	\
    ( (This)->lpVtbl -> get_IsVisible(This,isVisible) )

#define ICoreWebView2Controller2_put_Bounds(This,bounds)	\
    ( (This)->lpVtbl -> put_Bounds(This,bounds) )

#define ICoreWebView2Controller2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) )

/* end of Additional Prototypes */

#endif
